{
  "version": 3,
  "sources": ["src/utils/camelize.js", "src/utils/normalizeData.js", "src/utils/shortcuts.js", "src/core/base-element.js", "src/utils/addSelectOption.js", "src/utils/appendParamsToUrl.js", "src/utils/convertArray.js", "src/utils/elementOffset.js", "src/utils/getTextWidth.js", "src/utils/interpolate.js", "src/utils/randstr.js", "src/data-grid.js", "src/core/base-plugin.js", "src/plugins/column-resizer.js", "src/utils/getParentElement.js", "src/plugins/context-menu.js", "src/plugins/draggable-headers.js", "src/plugins/touch-support.js", "src/plugins/selectable-rows.js", "src/plugins/fixed-height.js", "src/plugins/autosize-column.js", "src/utils/debounce.js", "src/plugins/responsive-grid.js", "data-grid.js"],
  "sourcesContent": ["/**\r\n * @param {String} str\r\n * @returns {String}\r\n */\r\nexport default function camelize(str) {\r\n  return str.toLowerCase().replace(/[^a-zA-Z0-9]+(.)/g, (m, chr) => chr.toUpperCase());\r\n}\r\n", "/**\r\n * Parse data attribute and return properly typed data\r\n * @param {String} v\r\n * @returns {any}\r\n */\r\nexport default function normalizeData(v) {\r\n  // Bool\r\n  if (v === \"true\") {\r\n    return true;\r\n  }\r\n  if (v === \"false\") {\r\n    return false;\r\n  }\r\n  // Null or empty\r\n  if (v === \"\" || v === \"null\") {\r\n    return null;\r\n  }\r\n  // Numeric attributes\r\n  if (v === Number(v).toString()) {\r\n    return Number(v);\r\n  }\r\n  // Only attempt json parsing for array or objects\r\n  if (v && (v.indexOf(\"[\") === 0 || v.indexOf(\"{\") === 0)) {\r\n    try {\r\n      // In case we have only single quoted vues\r\n      if (v.indexOf('\"') === -1) {\r\n        v = v.replace(/'/g, '\"');\r\n      }\r\n      return JSON.parse(decodeURIComponent(v));\r\n    } catch {\r\n      console.log(\"Failed to parse \" + v);\r\n      return {};\r\n    }\r\n  }\r\n  return v;\r\n}\r\n", "/**\r\n * @callback FlexibleListener\r\n * @param {Event&MouseEvent&InputEvent&DragEvent&FocusEvent&KeyboardEvent&PointerEvent} event\r\n */\r\n\r\nconst supportedPassiveTypes = [\r\n  \"scroll\",\r\n  \"wheel\",\r\n  \"touchstart\",\r\n  \"touchmove\",\r\n  \"touchenter\",\r\n  \"touchend\",\r\n  \"touchleave\",\r\n  \"mouseout\",\r\n  \"mouseleave\",\r\n  \"mouseup\",\r\n  \"mousedown\",\r\n  \"mousemove\",\r\n  \"mouseenter\",\r\n  \"mousewheel\",\r\n  \"mouseover\",\r\n];\r\n\r\n/**\r\n *\r\n * @param {string} type\r\n * @returns {AddEventListenerOptions}\r\n */\r\nfunction passiveOpts(type) {\r\n  if (supportedPassiveTypes.includes(type)) {\r\n    return { passive: true };\r\n  }\r\n  return {};\r\n}\r\n\r\n/**\r\n * @param {Element} el\r\n * @param {String} name\r\n * @returns {any}\r\n */\r\nexport function getAttribute(el, name) {\r\n  return el.getAttribute(name);\r\n}\r\n\r\n/**\r\n * @param {Element} el\r\n * @param {String} name\r\n * @returns {Boolean}\r\n */\r\nexport function hasAttribute(el, name) {\r\n  return el.hasAttribute(name);\r\n}\r\n\r\n/**\r\n * @param {Element} el\r\n * @param {String} name\r\n * @param {any} v\r\n * @param {Boolean} check Prevent setting if attribute is already there\r\n */\r\nexport function setAttribute(el, name, v, check = false) {\r\n  if (check && hasAttribute(el, name)) return;\r\n  el.setAttribute(name, \"\" + v);\r\n}\r\n\r\n/**\r\n * @param {Element} el\r\n * @param {String} name\r\n */\r\nexport function removeAttribute(el, name) {\r\n  if (hasAttribute(el, name)) {\r\n    el.removeAttribute(name);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {EventTarget} el\r\n * @param {String} type\r\n * @param {FlexibleListener} listener\r\n */\r\nexport function on(el, type, listener) {\r\n  el.addEventListener(type, listener, passiveOpts(type));\r\n}\r\n\r\n/**\r\n * @param {EventTarget} el\r\n * @param {String} type\r\n * @param {EventListenerOrEventListenerObject&FlexibleListener} listener\r\n */\r\nexport function off(el, type, listener) {\r\n  el.removeEventListener(type, listener, passiveOpts(type));\r\n}\r\n\r\n/**\r\n * @param {EventTarget} el\r\n * @param {String} type\r\n * @param {EventListenerOrEventListenerObject&FlexibleListener} listener\r\n */\r\nexport function one(el, type, listener) {\r\n  el.addEventListener(type, listener, {\r\n    once: true,\r\n  });\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n * @param {String} name\r\n * @param {any} data\r\n * @param {Boolean} bubbles\r\n */\r\nexport function dispatch(el, name, data = {}, bubbles = false) {\r\n  let opts = {};\r\n  if (bubbles) {\r\n    opts.bubbles = true;\r\n  }\r\n  if (data) {\r\n    opts.detail = data;\r\n  }\r\n  el.dispatchEvent(new CustomEvent(name, opts));\r\n}\r\n\r\n/**\r\n * @param {Element} el\r\n * @param {String} name\r\n * @returns {Boolean}\r\n */\r\nexport function hasClass(el, name) {\r\n  return el.classList.contains(name);\r\n}\r\n\r\n/**\r\n * @param {Element} el\r\n * @param {String} name\r\n */\r\nexport function addClass(el, name) {\r\n  el.classList.add(name);\r\n}\r\n\r\n/**\r\n * @param {Element} el\r\n * @param {String} name\r\n */\r\nexport function removeClass(el, name) {\r\n  el.classList.remove(name);\r\n}\r\n\r\n/**\r\n * @param {Element} el\r\n * @param {String} name\r\n */\r\nexport function toggleClass(el, name) {\r\n  el.classList.toggle(name);\r\n}\r\n\r\n/**\r\n * @param {String|HTMLElement} selector\r\n * @param {HTMLElement|Document} base\r\n * @returns {HTMLElement|null}\r\n */\r\nexport function $(selector, base = document) {\r\n  if (selector instanceof HTMLElement) {\r\n    return selector;\r\n  }\r\n  return base.querySelector(selector);\r\n}\r\n\r\n/**\r\n * @param {String} selector\r\n * @param {Element|Document} base\r\n * @returns {Array<HTMLElement>}\r\n */\r\nexport function $$(selector, base = document) {\r\n  return Array.from(base.querySelectorAll(selector));\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n * @param {String|HTMLElement} selector\r\n * @returns {any}\r\n */\r\nexport function find(el, selector) {\r\n  return $(selector, el);\r\n}\r\n\r\n/**\r\n * @param {Element} el\r\n * @param {String} selector\r\n * @returns {Array<HTMLElement>}\r\n */\r\nexport function findAll(el, selector) {\r\n  return $$(selector, el);\r\n}\r\n\r\n/**\r\n * @param {any} el\r\n * @returns {HTMLElement}\r\n */\r\nexport function asElement(el) {\r\n  return el instanceof HTMLElement ? el : new HTMLElement();\r\n}\r\n\r\n/**\r\n * @param {any} el\r\n * @returns {any}\r\n */\r\nexport function asAnyElement(el) {\r\n  return el instanceof HTMLElement ? el : new HTMLElement();\r\n}\r\n", "import camelize from \"../utils/camelize.js\";\r\nimport normalizeData from \"../utils/normalizeData.js\";\r\nimport { dispatch, getAttribute, setAttribute } from \"../utils/shortcuts.js\";\r\n\r\n/**\r\n * Base element that does not contain any specific logic\r\n * related to this project but makes HTMLElemnt usable\r\n */\r\nclass BaseElement extends HTMLElement {\r\n  /**\r\n   * @param {Object} options\r\n   */\r\n  constructor(options = {}) {\r\n    super();\r\n    this.options = Object.assign(this.defaultOptions, this.normalizedDataset, options);\r\n\r\n    this.log(\"constructor\");\r\n\r\n    this.fireEvents = true;\r\n    this._ready();\r\n\r\n    this.log(\"ready\");\r\n  }\r\n\r\n  get defaultOptions() {\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @param {String} opt\r\n   * @returns {any}\r\n   */\r\n  getOption(opt) {\r\n    return this.options[opt];\r\n  }\r\n\r\n  /**\r\n   * @param {String} opt\r\n   * @param {any} v\r\n   */\r\n  setOption(opt, v) {\r\n    setAttribute(this, `data-${opt}`, v);\r\n  }\r\n\r\n  /**\r\n   * @param {String} opt\r\n   */\r\n  toggleOption(opt) {\r\n    setAttribute(this, `data-${opt}`, !this.getOption(opt));\r\n  }\r\n\r\n  get normalizedDataset() {\r\n    let data = { ...this.dataset };\r\n    for (var key in data) {\r\n      data[key] = normalizeData(data[key]);\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @returns {String}\r\n   */\r\n  static template() {\r\n    return \"\";\r\n  }\r\n\r\n  /**\r\n   * This is called at the end of constructor. Extend in subclass if needed.\r\n   */\r\n  _ready() {}\r\n\r\n  /**\r\n   * @param {String|Error} message\r\n   */\r\n  log(message) {\r\n    if (this.options.debug) {\r\n      console.log(\"[\" + getAttribute(this, \"id\") + \"] \" + message);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle events within the component\r\n   * @link https://gist.github.com/WebReflection/ec9f6687842aa385477c4afca625bbf4#handling-events\r\n   * @param {Event} event\r\n   */\r\n  handleEvent(event) {\r\n    if (this[`on${event.type}`]) {\r\n      this[`on${event.type}`](event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This is called when connected. Extend in subclass if needed.\r\n   */\r\n  _connected() {}\r\n\r\n  connectedCallback() {\r\n    // ensure whenDefined callbacks are run first\r\n    setTimeout(() => {\r\n      this.log(\"connectedCallback\");\r\n\r\n      // Append only when labels had the opportunity to be set\r\n      // Don't use shadow dom as it makes theming super hard\r\n      const template = document.createElement(\"template\");\r\n      // @ts-ignore\r\n      template.innerHTML = this.constructor.template();\r\n      this.appendChild(template.content.cloneNode(true));\r\n\r\n      this._connected();\r\n      // @link https://gist.github.com/WebReflection/ec9f6687842aa385477c4afca625bbf4#life-cycle-events\r\n      dispatch(this, \"connected\");\r\n    }, 0);\r\n  }\r\n\r\n  /**\r\n   * This is called when disconnected. Extend in subclass if needed.\r\n   */\r\n  _disconnected() {}\r\n\r\n  disconnectedCallback() {\r\n    this.log(\"disconnectedCallback\");\r\n    this._disconnected();\r\n    // @link https://gist.github.com/WebReflection/ec9f6687842aa385477c4afca625bbf4#life-cycle-events\r\n    dispatch(this, \"disconnected\");\r\n  }\r\n\r\n  /**\r\n   * @link https://gist.github.com/WebReflection/ec9f6687842aa385477c4afca625bbf4#a-props-like-accessor\r\n   * @returns {Object}\r\n   */\r\n  get transformAttributes() {\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * This is only meant to work with data attributes\r\n   * This allows us to have properties that reflect automatically in the component\r\n   * @link https://gist.github.com/WebReflection/ec9f6687842aa385477c4afca625bbf4#reflected-dataset-attributes\r\n   * @param {String} attributeName\r\n   * @param {String} oldValue\r\n   * @param {String} newValue\r\n   */\r\n  attributeChangedCallback(attributeName, oldValue, newValue) {\r\n    // It didn't change\r\n    if (oldValue === newValue) {\r\n      return;\r\n    }\r\n\r\n    this.log(\"attributeChangedCallback: \" + attributeName);\r\n\r\n    let isOption = false;\r\n    const transformer = this.transformAttributes[attributeName] ?? normalizeData;\r\n\r\n    // Data attributes are mapped to options while other attributes are mapped as properties\r\n    if (attributeName.indexOf(\"data-\") === 0) {\r\n      attributeName = attributeName.slice(5);\r\n      isOption = true;\r\n    }\r\n    attributeName = camelize(attributeName);\r\n    if (isOption) {\r\n      this.options[attributeName] = transformer(newValue);\r\n    } else {\r\n      this[attributeName] = transformer(newValue);\r\n    }\r\n\r\n    // Fire internal event\r\n    if (this.fireEvents && this[`${attributeName}Changed`]) {\r\n      this[`${attributeName}Changed`]();\r\n    }\r\n  }\r\n}\r\n\r\nexport default BaseElement;\r\n", "/**\r\n * @param {HTMLSelectElement} el\r\n * @param {String} value\r\n * @param {String} label\r\n * @param {Boolean} checked\r\n */\r\nexport default function addSelectOption(el, value, label, checked = false) {\r\n  let opt = document.createElement(\"option\");\r\n  opt.value = \"\" + value;\r\n  if (checked) {\r\n    opt.selected = true;\r\n  }\r\n  opt.label = label;\r\n  el.appendChild(opt);\r\n}\r\n", "/**\r\n * @param {URL} url\r\n * @param {Object} params\r\n */\r\nexport default function appendParamsToUrl(url, params = {}) {\r\n  Object.keys(params).forEach((key) => {\r\n    if (Array.isArray(params[key])) {\r\n      // @ts-ignore\r\n      Object.keys(params[key]).forEach((k) => url.searchParams.append(isNaN(k) ? `${key}[${k}]` : key, params[key][k]));\r\n    } else {\r\n      url.searchParams.append(key, params[key]);\r\n    }\r\n  });\r\n}\r\n", "/**\r\n * Force value as arrays\r\n * @param {String|Array} v\r\n * @returns {Array}\r\n */\r\nexport default function convertArray(v) {\r\n  if (typeof v === \"string\") {\r\n    if (v[0] === \"[\") {\r\n      // \"['my', 'value']\" would fail as a json\r\n      if (v.indexOf('\"') === -1) {\r\n        v = v.replace(/'/g, '\"');\r\n      }\r\n      return JSON.parse(v);\r\n    }\r\n\r\n    return v.split(\",\");\r\n  }\r\n  if (!Array.isArray(v)) {\r\n    console.error(\"Invalid array\", v);\r\n    return [];\r\n  }\r\n  return v;\r\n}\r\n", "/**\r\n * @param {HTMLElement} el\r\n * @returns {Object}\r\n */\r\nexport default function elementOffset(el) {\r\n  var rect = el.getBoundingClientRect(),\r\n    scrollLeft = window.pageXOffset || document.documentElement.scrollLeft,\r\n    scrollTop = window.pageYOffset || document.documentElement.scrollTop;\r\n  return { top: rect.top + scrollTop, left: rect.left + scrollLeft };\r\n}\r\n", "/**\r\n * Uses canvas.measureText to compute and return the width of the given text of given font in pixels.\r\n * Getting computed styles only works for dom that are added in the dom\r\n * @see https://stackoverflow.com/questions/118241/calculate-text-width-with-javascript/21015393#21015393\r\n * @param {String} text The text to be rendered.\r\n * @param {Element} el Target element (defaults to body)\r\n * @param {Boolean} withPadding Include padding on element\r\n * @returns {Number}\r\n */\r\nexport default function getTextWidth(text, el = document.body, withPadding = false) {\r\n  if (!el) {\r\n    el = document.createElement(\"div\");\r\n  }\r\n  const styles = window.getComputedStyle(el);\r\n  const fontWeight = styles.getPropertyValue(\"font-weight\") || \"normal\";\r\n  const fontSize = styles.getPropertyValue(\"font-size\") || \"1rem\";\r\n  const fontFamily = styles.getPropertyValue(\"font-family\") || \"Arial\";\r\n\r\n  let padding = 0;\r\n  if (withPadding) {\r\n    const paddingLeft = styles.getPropertyValue(\"padding-left\") || \"0\";\r\n    const paddingRight = styles.getPropertyValue(\"padding-right\") || \"0\";\r\n    padding = parseInt(paddingLeft) + parseInt(paddingRight);\r\n  }\r\n\r\n  // re-use canvas object for better performance\r\n  // @ts-ignore\r\n  const canvas = getTextWidth.canvas || (getTextWidth.canvas = document.createElement(\"canvas\"));\r\n  const context = canvas.getContext(\"2d\");\r\n  context.font = `${fontWeight} ${fontSize} ${fontFamily}`;\r\n  const metrics = context.measureText(text);\r\n  return parseInt(metrics.width) + padding;\r\n}\r\n", "/**\r\n * Replace element within {} by their data value\r\n * @param {String} str\r\n * @param {Object} data\r\n * @returns {String}\r\n */\r\nexport default function interpolate(str, data) {\r\n  return str.replace(/\\{([^}]+)?\\}/g, function ($1, $2) {\r\n    return data[$2];\r\n  });\r\n}\r\n", "/**\r\n * @param {String} prefix\r\n * @returns {String}\r\n */\r\nexport default function randstr(prefix) {\r\n  return Math.random()\r\n    .toString(36)\r\n    .replace(\"0.\", prefix || \"\");\r\n}\r\n", "/**\r\n * Data Grid Web component\r\n *\r\n * Credits for inspiration\r\n * @link https://github.com/riverside/zino-grid\r\n */\r\n\"use strict\";\r\n\r\nimport BaseElement from \"./core/base-element.js\";\r\nimport addSelectOption from \"./utils/addSelectOption.js\";\r\nimport appendParamsToUrl from \"./utils/appendParamsToUrl.js\";\r\nimport camelize from \"./utils/camelize.js\";\r\nimport convertArray from \"./utils/convertArray.js\";\r\nimport elementOffset from \"./utils/elementOffset.js\";\r\nimport getTextWidth from \"./utils/getTextWidth.js\";\r\nimport interpolate from \"./utils/interpolate.js\";\r\nimport randstr from \"./utils/randstr.js\";\r\nimport { asElement, dispatch, find, findAll, hasClass, removeAttribute, setAttribute } from \"./utils/shortcuts.js\";\r\n\r\n/**\r\n * @typedef Column\r\n * @property {String} field - the key in the data\r\n * @property {String} title - the title to display in the header (defaults to \"field\" if not set)\r\n * @property {Number} width - the width of the column (auto otherwise)\r\n * @property {String} class - class to set on the column (target body or header with th.class or td.class)\r\n * @property {String} attr - don't render the column and set a matching attribute on the row with the value of the field\r\n * @property {Boolean} hidden - hide the column\r\n * @property {Boolean} editable - replace with input\r\n * @property {Boolean} noSort - allow disabling sort for a given column\r\n * @property {Number} responsive - the higher the value, the sooner it will be hidden, disable with 0\r\n */\r\n\r\n/**\r\n * @typedef Action\r\n * @property {String} title - the title of the button\r\n * @property {String} name - the name of the action\r\n * @property {String} class - the class for the button\r\n * @property {String} url - link for the action\r\n * @property {String} html - custom button data\r\n * @property {Boolean} confirm - needs confirmation\r\n * @property {Boolean} default - is the default row action\r\n */\r\n\r\n/**\r\n * TODO: figure out why @property syntax is not working for static methods\r\n * @link https://dev.to/dakmor/type-safe-web-components-with-jsdoc-4icf\r\n * @typedef {Object} Plugins\r\n * @property {Object|import(\"./plugins/column-resizer.js\").default} [ColumnResizer]\r\n * @property {Object|import(\"./plugins/context-menu\").default} [ContextMenu]\r\n * @property {Object|import('./plugins/draggable-headers.js').default} [DraggableHeaders]\r\n * @property {Object|import('./plugins/touch-support.js').default} [TouchSupport]\r\n * @property {Object|import('./plugins/selectable-rows.js').default} [SelectableRows]\r\n * @property {Object|import(\"./plugins/fixed-height.js\").default} [FixedHeight]\r\n * @property {Object|import(\"./plugins/autosize-column.js\").default} [AutosizeColumn]\r\n * @property {Object|import(\"./plugins/responsive-grid.js\").default} [ResponsiveGrid]\r\n */\r\n\r\n/**\r\n * @typedef Options\r\n * @property {?String} id\r\n * @property {?String} url\r\n * @property {Boolean} debug\r\n * @property {Boolean} filter\r\n * @property {Boolean} menu\r\n * @property {Boolean} sort\r\n * @property {Boolean} server\r\n * @property {Object} serverParams\r\n * @property {String} serverParams.start\r\n * @property {String} serverParams.length\r\n * @property {String} serverParams.search\r\n * @property {String} serverParams.sort\r\n * @property {String} serverParams.sortDir\r\n * @property {String} serverParams.dataKey\r\n * @property {String} serverParams.errorKey\r\n * @property {String} serverParams.metaKey\r\n * @property {String} serverParams.metaTotalKey\r\n * @property {String} serverParams.metaFilteredKey\r\n * @property {String} serverParams.optionsKey\r\n * @property {String} serverParams.paramsKey\r\n * @property {String} defaultSort\r\n * @property {Boolean} reorder\r\n * @property {Boolean} resizable\r\n * @property {String} dir\r\n * @property {Array} perPageValues\r\n * @property {Column[]} columns\r\n * @property {Action[]} actions\r\n * @property {Boolean} collapseActions\r\n * @property {Number} defaultPage\r\n * @property {Number} perPage\r\n * @property {Boolean} selectable\r\n * @property {Boolean} selectVisibleOnly\r\n * @property {Boolean} autosize\r\n * @property {Boolean} expand\r\n * @property {Boolean} autoheight\r\n * @property {Boolean} responsive\r\n */\r\n\r\n/**\r\n * @type {Plugins}\r\n */\r\nlet plugins = {};\r\n\r\nlet labels = {\r\n  itemsPerPage: \"Items per page\",\r\n  gotoPage: \"Go to page\",\r\n  gotoFirstPage: \"Go to first page\",\r\n  gotoPrevPage: \"Go to previous page\",\r\n  gotoNextPage: \"Go to next page\",\r\n  gotoLastPage: \"Go to last page\",\r\n  of: \"of\",\r\n  items: \"items\",\r\n  resizeColumn: \"Resize column\",\r\n  noData: \"No data\",\r\n  areYouSure: \"Are you sure?\",\r\n};\r\n\r\n/**\r\n */\r\nclass DataGrid extends BaseElement {\r\n  _ready() {\r\n    setAttribute(this, \"id\", this.options.id ?? randstr(\"el-\"), true);\r\n\r\n    // The grid displays that data\r\n    this.data = [];\r\n    // We store the original data in this\r\n    this.originalData = [];\r\n\r\n    /**\r\n     * @type {Options}\r\n     */\r\n    this.options = this.options || this.defaultOptions;\r\n\r\n    // Init values\r\n    this.fireEvents = false;\r\n    this.defaultHeight = 0;\r\n    this.page = this.options.defaultPage || 1;\r\n    this.pages = 0;\r\n    this.meta = {};\r\n\r\n    // Expose observed attributes in the dom\r\n    // Do it when fireEvents is disabled to avoid firing callbacks\r\n    for (const attr of DataGrid.observedAttributes) {\r\n      if (attr.indexOf(\"data-\") === 0) {\r\n        setAttribute(this, attr, this.options[camelize(attr.slice(5))]);\r\n      }\r\n    }\r\n\r\n    // Some IDE types stuff\r\n\r\n    /**\r\n     * @type {Column[]}\r\n     */\r\n    this.columns = this.columns ?? null;\r\n    /**\r\n     * @type {Column[]}\r\n     */\r\n    this.actions = this.actions ?? null;\r\n    // selectable-rows.js\r\n    /**\r\n     * @type {HTMLInputElement}\r\n     */\r\n    this.selectAll = null;\r\n    /**\r\n     * @type {EventListenerOrEventListenerObject}\r\n     */\r\n    this.toggleSelectAll = null;\r\n\r\n    // touch-support.js\r\n    this.touch = null;\r\n    /**\r\n     * @type {EventListenerOrEventListenerObject}\r\n     */\r\n    this.touchstart = null;\r\n    /**\r\n     * @type {EventListenerOrEventListenerObject}\r\n     */\r\n    this.touchmove = null;\r\n\r\n    // column-resizer.js\r\n    this.isResizing = false;\r\n  }\r\n\r\n  static template() {\r\n    return `\r\n<table role=\"grid\" >\r\n    <thead role=\"rowgroup\">\r\n        <tr role=\"row\" aria-rowindex=\"1\" class=\"dg-head-columns\"><th><!-- keep for getTextWidth --></th></tr>\r\n        <tr role=\"row\" aria-rowindex=\"2\" class=\"dg-head-filters\"></tr>\r\n    </thead>\r\n    <tbody role=\"rowgroup\" data-empty=\"${labels.noData}\"></tbody>\r\n    <tfoot role=\"rowgroup\" hidden>\r\n        <tr role=\"row\" aria-rowindex=\"1\">\r\n            <td role=\"gridcell\">\r\n            <div class=\"dg-footer\">\r\n                <div class=\"dg-page-nav\">\r\n                  <select class=\"dg-select-per-page\" aria-label=\"${labels.itemsPerPage}\"></select>\r\n                </div>\r\n                <div class=\"dg-pagination\">\r\n                  <button type=\"button\" class=\"dg-btn-first dg-rotate\" title=\"${labels.gotoFirstPage}\" aria-label=\"${labels.gotoFirstPage}\" disabled>\r\n                    <i class=\"dg-skip-icon\"></i>\r\n                  </button>\r\n                  <button type=\"button\" class=\"dg-btn-prev dg-rotate\" title=\"${labels.gotoPrevPage}\" aria-label=\"${labels.gotoPrevPage}\" disabled>\r\n                    <i class=\"dg-nav-icon\"></i>\r\n                  </button>\r\n                  <input type=\"number\" class=\"dg-input-page\" min=\"1\" step=\"1\" value=\"1\" aria-label=\"${labels.gotoPage}\">\r\n                  <button type=\"button\" class=\"dg-btn-next\" title=\"${labels.gotoNextPage}\" aria-label=\"${labels.gotoNextPage}\" disabled>\r\n                    <i class=\"dg-nav-icon\"></i>\r\n                  </button>\r\n                  <button type=\"button\" class=\"dg-btn-last\" title=\"${labels.gotoLastPage}\" aria-label=\"${labels.gotoLastPage}\" disabled>\r\n                    <i class=\"dg-skip-icon\"></i>\r\n                  </button>\r\n                </div>\r\n                <div class=\"dg-meta\">\r\n                  <span class=\"dg-low\">0</span> - <span class=\"dg-high\">0</span> ${labels.of} <span class=\"dg-total\">0</span> ${labels.items}\r\n                </div>\r\n            </div>\r\n            </td>\r\n        </tr>\r\n    </tfoot>\r\n    <ul class=\"dg-menu\" hidden></ul>\r\n</table>\r\n`;\r\n  }\r\n\r\n  /**\r\n   * @param {Object} v\r\n   */\r\n  static setLabels(v) {\r\n    labels = Object.assign(labels, v);\r\n  }\r\n\r\n  /**\r\n   * @returns {Column}\r\n   */\r\n  get defaultColumn() {\r\n    return {\r\n      field: \"\",\r\n      title: \"\",\r\n      width: 0,\r\n      class: \"\",\r\n      attr: \"\",\r\n      hidden: false,\r\n      editable: false,\r\n      noSort: false,\r\n      responsive: 1,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @returns {Options}\r\n   */\r\n  get defaultOptions() {\r\n    return {\r\n      id: null,\r\n      url: null,\r\n      perPage: 10,\r\n      debug: false,\r\n      filter: false,\r\n      menu: false,\r\n      sort: false,\r\n      server: false,\r\n      serverParams: {\r\n        start: \"start\",\r\n        length: \"length\",\r\n        search: \"search\",\r\n        sort: \"sort\",\r\n        sortDir: \"sortDir\",\r\n        dataKey: \"data\",\r\n        errorKey: \"error\",\r\n        metaKey: \"meta\",\r\n        metaTotalKey: \"total\",\r\n        metaFilteredKey: \"filtered\",\r\n        optionsKey: \"options\",\r\n        paramsKey: \"params\",\r\n      },\r\n      defaultSort: \"\",\r\n      reorder: false,\r\n      dir: \"ltr\",\r\n      perPageValues: [10, 25, 50, 100, 250],\r\n      columns: [],\r\n      actions: [],\r\n      collapseActions: false,\r\n      selectable: false,\r\n      selectVisibleOnly: true,\r\n      defaultPage: 1,\r\n      resizable: false,\r\n      autosize: true,\r\n      expand: false,\r\n      autoheight: true,\r\n      responsive: false,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @param {Plugins} list\r\n   */\r\n  static registerPlugins(list) {\r\n    plugins = list;\r\n  }\r\n\r\n  static unregisterPlugins() {\r\n    plugins = {};\r\n  }\r\n\r\n  /**\r\n   * @returns {Plugins}\r\n   */\r\n  static plugins() {\r\n    return plugins;\r\n  }\r\n\r\n  /**\r\n   * @param {HTMLElement} el\r\n   * @param {Object} definition\r\n   */\r\n  static applyColumnDefinition(el, definition) {\r\n    if (definition.width) {\r\n      el.setAttribute(\"width\", definition.width);\r\n    }\r\n    if (definition.class) {\r\n      el.setAttribute(\"class\", definition.class);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {Object|Array} columns\r\n   * @returns {Column[]}\r\n   */\r\n  convertColumns(columns) {\r\n    let cols = [];\r\n    // Convert key:value objects to actual columns\r\n    if (typeof columns === \"object\" && !Array.isArray(columns)) {\r\n      Object.keys(columns).forEach((key) => {\r\n        let col = this.defaultColumn;\r\n        col.title = columns[key];\r\n        col.field = key;\r\n        cols.push(col);\r\n      });\r\n    } else {\r\n      columns.forEach((item) => {\r\n        let col = this.defaultColumn;\r\n        if (typeof item === \"string\") {\r\n          col.title = item;\r\n          col.field = item;\r\n        } else if (typeof item === \"object\") {\r\n          col = item;\r\n          if (!col.field) {\r\n            console.error(\"Invalid column definition\", item);\r\n          }\r\n        } else {\r\n          console.error(\"Column definition must be a string or an object\");\r\n        }\r\n        cols.push(col);\r\n      });\r\n    }\r\n    return cols;\r\n  }\r\n\r\n  /**\r\n   * @link https://gist.github.com/WebReflection/ec9f6687842aa385477c4afca625bbf4#reflected-dom-attributes\r\n   * @returns {Array}\r\n   */\r\n  static get observedAttributes() {\r\n    return [\r\n      \"page\",\r\n      \"data-filter\",\r\n      \"data-sort\",\r\n      \"data-debug\",\r\n      \"data-reorder\",\r\n      \"data-menu\",\r\n      \"data-selectable\",\r\n      \"data-url\",\r\n      \"data-per-page\",\r\n      \"data-responsive\",\r\n    ];\r\n  }\r\n\r\n  get transformAttributes() {\r\n    return {\r\n      columns: (v) => this.convertColumns(convertArray(v)),\r\n      actions: (v) => convertArray(v),\r\n      defaultPage: (v) => parseInt(v),\r\n      perPage: (v) => parseInt(v),\r\n    };\r\n  }\r\n\r\n  get page() {\r\n    return parseInt(this.getAttribute(\"page\"));\r\n  }\r\n\r\n  set page(val) {\r\n    setAttribute(this, \"page\", this.constrainPageValue(val));\r\n  }\r\n\r\n  urlChanged() {\r\n    this.loadData().then(() => {\r\n      this.configureUi();\r\n    });\r\n  }\r\n\r\n  constrainPageValue(v) {\r\n    if (this.pages < v) {\r\n      v = this.pages;\r\n    }\r\n    if (v < 1 || !v) {\r\n      v = 1;\r\n    }\r\n    return v;\r\n  }\r\n\r\n  fixPage() {\r\n    this.pages = this.totalPages();\r\n    this.page = this.constrainPageValue(this.page);\r\n\r\n    // Show current page in input\r\n    this.inputPage.setAttribute(\"max\", \"\" + this.pages);\r\n    this.inputPage.value = \"\" + this.page;\r\n    this.inputPage.disabled = this.pages === 1;\r\n  }\r\n\r\n  pageChanged() {\r\n    this.reload();\r\n  }\r\n\r\n  responsiveChanged() {\r\n    if (!plugins.ResponsiveGrid) {\r\n      return;\r\n    }\r\n    if (this.options.responsive) {\r\n      plugins.ResponsiveGrid.observe(this);\r\n    } else {\r\n      plugins.ResponsiveGrid.unobserve(this);\r\n    }\r\n  }\r\n\r\n  menuChanged() {\r\n    this.renderHeader();\r\n  }\r\n\r\n  /**\r\n   * This is the callback for the select control\r\n   */\r\n  changePerPage() {\r\n    this.options.perPage = parseInt(this.selectPerPage.options[this.selectPerPage.selectedIndex].value);\r\n    this.perPageChanged();\r\n  }\r\n\r\n  /**\r\n   * This is the actual event triggered on attribute change\r\n   */\r\n  perPageChanged() {\r\n    // Refresh UI\r\n    if (this.options.perPage !== parseInt(this.selectPerPage.options[this.selectPerPage.selectedIndex].value)) {\r\n      this.perPageValuesChanged();\r\n    }\r\n    // Make sure current page is still valid\r\n    let updatePage = this.page;\r\n    while (updatePage > 1 && this.page * this.options.perPage > this.totalRecords()) {\r\n      updatePage--;\r\n    }\r\n    if (updatePage != this.page) {\r\n      this.page = updatePage;\r\n    } else {\r\n      this.reload(() => {\r\n        // Scroll and keep a sizable amount of data displayed\r\n        if (this.hasAttribute(\"sticky\")) {\r\n          window.scroll({ top: elementOffset(this.selectPerPage).top - this.defaultHeight });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  dirChanged() {\r\n    this.setAttribute(\"dir\", this.options.dir);\r\n  }\r\n\r\n  defaultSortChanged() {\r\n    this.sortChanged();\r\n  }\r\n\r\n  /**\r\n   * Populate the select dropdown according to options\r\n   */\r\n  perPageValuesChanged() {\r\n    if (!this.selectPerPage) {\r\n      return;\r\n    }\r\n    while (this.selectPerPage.lastChild) {\r\n      this.selectPerPage.removeChild(this.selectPerPage.lastChild);\r\n    }\r\n    this.options.perPageValues.forEach((v) => {\r\n      addSelectOption(this.selectPerPage, v, v, v === this.options.perPage);\r\n    });\r\n  }\r\n\r\n  _connected() {\r\n    /**\r\n     * @type {HTMLTableElement}\r\n     */\r\n    this.table = find(this, \"table\");\r\n    /**\r\n     * @type {HTMLInputElement}\r\n     */\r\n    this.btnFirst = find(this, \".dg-btn-first\");\r\n    /**\r\n     * @type {HTMLInputElement}\r\n     */\r\n    this.btnPrev = find(this, \".dg-btn-prev\");\r\n    /**\r\n     * @type {HTMLInputElement}\r\n     */\r\n    this.btnNext = find(this, \".dg-btn-next\");\r\n    /**\r\n     * @type {HTMLInputElement}\r\n     */\r\n    this.btnLast = find(this, \".dg-btn-last\");\r\n    /**\r\n     * @type {HTMLSelectElement}\r\n     */\r\n    this.selectPerPage = find(this, \".dg-select-per-page\");\r\n    /**\r\n     * @type {HTMLInputElement}\r\n     */\r\n    this.inputPage = find(this, \".dg-input-page\");\r\n\r\n    this.getFirst = this.getFirst.bind(this);\r\n    this.getPrev = this.getPrev.bind(this);\r\n    this.getNext = this.getNext.bind(this);\r\n    this.getLast = this.getLast.bind(this);\r\n    this.changePerPage = this.changePerPage.bind(this);\r\n    this.gotoPage = this.gotoPage.bind(this);\r\n\r\n    this.btnFirst.addEventListener(\"click\", this.getFirst);\r\n    this.btnPrev.addEventListener(\"click\", this.getPrev);\r\n    this.btnNext.addEventListener(\"click\", this.getNext);\r\n    this.btnLast.addEventListener(\"click\", this.getLast);\r\n    this.selectPerPage.addEventListener(\"change\", this.changePerPage);\r\n    this.inputPage.addEventListener(\"input\", this.gotoPage);\r\n\r\n    for (const plugin in plugins) {\r\n      plugins[plugin].connected(this);\r\n    }\r\n\r\n    // Display even if we don't have data\r\n    this.dirChanged();\r\n    this.perPageValuesChanged();\r\n\r\n    this.loadData().finally(() => {\r\n      this.configureUi();\r\n\r\n      this.sortChanged();\r\n      this.filterChanged();\r\n      this.reorderChanged();\r\n\r\n      this.dirChanged();\r\n      this.perPageValuesChanged();\r\n      this.pageChanged();\r\n\r\n      this.classList.add(\"dg-initialized\");\r\n      this.fireEvents = true; // We can now fire attributeChangedCallback events\r\n\r\n      this.log(\"initialized\");\r\n    });\r\n  }\r\n\r\n  _disconnected() {\r\n    this.btnFirst.removeEventListener(\"click\", this.getFirst);\r\n    this.btnPrev.removeEventListener(\"click\", this.getPrev);\r\n    this.btnNext.removeEventListener(\"click\", this.getNext);\r\n    this.btnLast.removeEventListener(\"click\", this.getLast);\r\n    this.selectPerPage.removeEventListener(\"change\", this.changePerPage);\r\n    this.inputPage.removeEventListener(\"input\", this.gotoPage);\r\n\r\n    for (const plugin in plugins) {\r\n      plugins[plugin].disconnected(this);\r\n    }\r\n  }\r\n\r\n  getCol(field) {\r\n    let found = null;\r\n    this.options.columns.forEach((col) => {\r\n      if (col.field == field) {\r\n        found = col;\r\n      }\r\n    });\r\n    return found;\r\n  }\r\n\r\n  getColProp(field, prop) {\r\n    const c = this.getCol(field);\r\n    return c ? c[prop] : null;\r\n  }\r\n\r\n  setColProp(field, prop, val) {\r\n    const c = this.getCol(field);\r\n    if (c) {\r\n      c[prop] = val;\r\n    }\r\n  }\r\n\r\n  visibleColumns() {\r\n    return this.options.columns.filter((col) => {\r\n      return !col.hidden;\r\n    });\r\n  }\r\n\r\n  hiddenColumns() {\r\n    return this.options.columns.filter((col) => {\r\n      return col.hidden === true;\r\n    });\r\n  }\r\n\r\n  showColumn(field, render = true) {\r\n    this.setColProp(field, \"hidden\", false);\r\n\r\n    // We need to render the whole table otherwise layout fixed won't do its job\r\n    if (render) this.renderTable();\r\n\r\n    dispatch(this, \"columnVisibility\", {\r\n      col: field,\r\n      visibility: \"visible\",\r\n    });\r\n  }\r\n\r\n  hideColumn(field, render = true) {\r\n    this.setColProp(field, \"hidden\", true);\r\n\r\n    // We need to render the whole table otherwise layout fixed won't do its job\r\n    if (render) this.renderTable();\r\n\r\n    dispatch(this, \"columnVisibility\", {\r\n      col: field,\r\n      visibility: \"hidden\",\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns the starting index of actual data\r\n   * @returns {Number}\r\n   */\r\n  startColIndex() {\r\n    return this.options.selectable && plugins.SelectableRows ? 2 : 1;\r\n  }\r\n\r\n  hasActions() {\r\n    return this.options.actions.length > 0;\r\n  }\r\n\r\n  get actionClass() {\r\n    if (this.options.actions.length < 3 && !this.options.collapseActions) {\r\n      return \"dg-actions-\" + this.options.actions.length;\r\n    }\r\n    return \"dg-actions-more\";\r\n  }\r\n\r\n  /**\r\n   * @param {Boolean} visibleOnly\r\n   * @returns {Number}\r\n   */\r\n  columnsLength(visibleOnly = false) {\r\n    let len = 0;\r\n    this.options.columns.forEach((col) => {\r\n      if (visibleOnly && col.hidden) {\r\n        return;\r\n      }\r\n      if (!col.attr) {\r\n        len++;\r\n      }\r\n    });\r\n    if (this.options.selectable && plugins.SelectableRows) {\r\n      len++;\r\n    }\r\n    if (this.options.actions.length) {\r\n      len++;\r\n    }\r\n    return len;\r\n  }\r\n\r\n  configureUi() {\r\n    this.querySelector(\"table\").setAttribute(\"aria-rowcount\", this.data.length);\r\n\r\n    this.table.style.visibility = \"hidden\";\r\n    this.renderTable();\r\n    if (this.options.responsive && plugins.ResponsiveGrid) {\r\n      // Let the observer make the table visible\r\n    } else {\r\n      this.table.style.visibility = \"visible\";\r\n    }\r\n\r\n    // Store row height for later usage\r\n    if (!this.rowHeight) {\r\n      const tr = this.querySelector(\"tbody tr\") || this.querySelector(\"table tr\");\r\n      if (tr instanceof HTMLTableRowElement) {\r\n        this.rowHeight = tr.offsetHeight;\r\n      }\r\n    }\r\n  }\r\n\r\n  filterChanged() {\r\n    const row = this.querySelector(\"thead tr.dg-head-filters\");\r\n    if (this.options.filter) {\r\n      row.removeAttribute(\"hidden\");\r\n    } else {\r\n      this.clearFilters();\r\n      row.setAttribute(\"hidden\", \"\");\r\n    }\r\n  }\r\n  \r\n  reorderChanged() {\r\n    this.querySelectorAll(\"thead tr.dg-head-columns th\").forEach((th) => {\r\n      if (th.classList.contains(\"dg-selectable\") || th.classList.contains(\"dg-actions\")) {\r\n        return;\r\n      }\r\n      if (!(th instanceof HTMLTableRowElement)) {\r\n        return;\r\n      }\r\n      if (this.options.reorder && plugins.DraggableHeaders) {\r\n        th.draggable = true;\r\n      } else {\r\n        th.removeAttribute(\"draggable\");\r\n      }\r\n    });\r\n  }\r\n\r\n  sortChanged() {\r\n    this.log(\"toggle sort\");\r\n\r\n    this.querySelectorAll(\"thead tr.dg-head-columns th\").forEach((th) => {\r\n      const fieldName = th.getAttribute(\"field\");\r\n      if (th.classList.contains(\"dg-not-sortable\") || (!this.fireEvents && fieldName == this.options.defaultSort)) {\r\n        return;\r\n      }\r\n      if (this.options.sort && !this.getColProp(fieldName, \"noSort\")) {\r\n        th.setAttribute(\"aria-sort\", \"none\");\r\n      } else {\r\n        th.removeAttribute(\"aria-sort\");\r\n      }\r\n    });\r\n  }\r\n\r\n  selectableChanged() {\r\n    this.renderTable();\r\n  }\r\n\r\n  addRow(row) {\r\n    this.log(\"Add row\");\r\n    this.originalData.push(row);\r\n    this.data = this.originalData.slice();\r\n    this.sortData();\r\n  }\r\n\r\n  /**\r\n   * @param {any} value Value to remove. Defaults to last row.\r\n   * @param {String} key The key of the item to remove. Defaults to first column\r\n   */\r\n  removeRow(value = null, key = null) {\r\n    if (key === null) {\r\n      key = this.options.columns[0][\"field\"];\r\n    }\r\n    if (value === null) {\r\n      value = this.originalData[this.originalData.length - 1][key];\r\n    }\r\n    this.log(\"Removing \" + key + \":\" + value);\r\n    for (let i = 0; i < this.originalData.length; i++) {\r\n      if (this.originalData[i][key] === value) {\r\n        this.originalData.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n    this.data = this.originalData.slice();\r\n    this.sortData();\r\n  }\r\n\r\n  /**\r\n   * @param {String} key Return a specific key (eg: id) instead of the whole row\r\n   * @returns {Array}\r\n   */\r\n  getSelection(key = null) {\r\n    if (!plugins.SelectableRows) {\r\n      return [];\r\n    }\r\n    return plugins.SelectableRows.getSelection(this, key);\r\n  }\r\n\r\n  getData() {\r\n    return this.originalData;\r\n  }\r\n\r\n  clearData() {\r\n    // Already empty\r\n    if (this.data.length === 0) {\r\n      return;\r\n    }\r\n    this.data = this.originalData = [];\r\n    this.renderBody();\r\n    // Recompute height if needed\r\n    plugins.FixedHeight && plugins.FixedHeight.computeDefaultHeight(this);\r\n  }\r\n\r\n  refresh(cb = null) {\r\n    this.data = this.originalData = [];\r\n    return this.reload(cb);\r\n  }\r\n\r\n  reload(cb = null) {\r\n    this.log(\"reload\");\r\n\r\n    // If the data was cleared, we need to render again\r\n    const needRender = this.originalData.length === 0;\r\n    this.fixPage();\r\n    this.loadData().finally(() => {\r\n      // If we load data from the server, we redraw the table body\r\n      // Otherwise, we just need to paginate\r\n      this.options.server || needRender ? this.renderBody() : this.paginate();\r\n\r\n      // Recompute height if needed\r\n      // plugins.FixedHeight && plugins.FixedHeight.computeDefaultHeight(this);\r\n      if (cb) {\r\n        cb();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @returns {Promise}\r\n   */\r\n  loadData() {\r\n    // We already have some data\r\n    if (this.originalData.length) {\r\n      // We don't use server side data\r\n      if (!this.options.server || (this.options.server && !this.fireEvents)) {\r\n        // if (!this.options.server) {\r\n        this.log(\"skip loadData\");\r\n        return new Promise((resolve) => {\r\n          resolve();\r\n        });\r\n      }\r\n    }\r\n    this.log(\"loadData\");\r\n    this.loading = true;\r\n    this.classList.add(\"dg-loading\");\r\n    return this.fetchData()\r\n      .then((response) => {\r\n        this.classList.remove(\"dg-loading\");\r\n        this.loading = false;\r\n\r\n        // We can get a straight array or an object\r\n        if (Array.isArray(response)) {\r\n          this.data = response;\r\n        } else {\r\n          // Object must contain data key\r\n          if (response[this.options.serverParams.errorKey]) {\r\n            this.querySelector(\"tbody\").setAttribute(\r\n              \"data-empty\",\r\n              response[this.options.serverParams.errorKey].replace(/^\\s+|\\r\\n|\\n|\\r$/g, \"\")\r\n            );\r\n            this.removeAttribute(\"data-url\");\r\n            return;\r\n          }\r\n          if (!response[this.options.serverParams.dataKey]) {\r\n            console.error(\"Invalid response, it should contain a data key with an array or be a plain array\", response);\r\n            this.options.url = null;\r\n            return;\r\n          }\r\n\r\n          // We may have a config object\r\n          this.options = Object.assign(this.options, response[this.options.serverParams.optionsKey] ?? {});\r\n          // It should return meta data (see metaFilteredKey)\r\n          this.meta = response[this.options.serverParams.metaKey] ?? {};\r\n\r\n          this.data = response[this.options.serverParams.dataKey];\r\n        }\r\n        this.originalData = this.data.slice();\r\n        this.fixPage();\r\n\r\n        // Make sure we have a proper set of columns\r\n        if (this.options.columns.length === 0 && this.originalData.length) {\r\n          this.options.columns = this.convertColumns(Object.keys(this.originalData[0]));\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        this.log(err);\r\n      });\r\n  }\r\n\r\n  getFirst() {\r\n    if (this.loading) {\r\n      return;\r\n    }\r\n    this.page = 1;\r\n  }\r\n\r\n  getLast() {\r\n    if (this.loading) {\r\n      return;\r\n    }\r\n    this.page = this.pages;\r\n  }\r\n\r\n  getPrev() {\r\n    if (this.loading) {\r\n      return;\r\n    }\r\n    this.page = this.page - 1;\r\n  }\r\n\r\n  getNext() {\r\n    if (this.loading) {\r\n      return;\r\n    }\r\n    this.page = this.page + 1;\r\n  }\r\n\r\n  gotoPage(event) {\r\n    if (event.type === \"keypress\") {\r\n      const key = event.keyCode || event.key;\r\n      if (key === 13 || key === \"Enter\") {\r\n        event.preventDefault();\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n    this.page = parseInt(this.inputPage.value);\r\n  }\r\n\r\n  getSort() {\r\n    let col = this.querySelector(\"thead tr.dg-head-columns th[aria-sort$='scending']\");\r\n    if (col) {\r\n      return col.getAttribute(\"field\");\r\n    }\r\n    return this.options.defaultSort;\r\n  }\r\n\r\n  getSortDir() {\r\n    let col = this.querySelector(\"thead tr.dg-head-columns th[aria-sort$='scending']\");\r\n    if (col) {\r\n      return col.getAttribute(\"aria-sort\") || \"\";\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  getFilters() {\r\n    let filters = [];\r\n    this.querySelectorAll(\"thead tr.dg-head-filters input\").forEach((input) => {\r\n      if (input instanceof HTMLInputElement) {\r\n        filters[input.dataset.name] = input.value;\r\n      }\r\n    });\r\n    return filters;\r\n  }\r\n\r\n  clearFilters() {\r\n    this.querySelectorAll(\"thead tr.dg-head-filters input\").forEach((input) => {\r\n      if (input instanceof HTMLInputElement) {\r\n        input.value = \"\";\r\n      }\r\n    });\r\n    this.filterData();\r\n  }\r\n\r\n  filterData() {\r\n    this.log(\"filter data\");\r\n\r\n    this.page = 1;\r\n\r\n    if (this.options.server) {\r\n      this.reload();\r\n    } else {\r\n      this.data = this.originalData.slice();\r\n\r\n      // Look for rows matching the filters\r\n      this.querySelectorAll(\"thead tr.dg-head-filters input\").forEach((input) => {\r\n        if (!(input instanceof HTMLInputElement)) {\r\n          return;\r\n        }\r\n        let value = input.value;\r\n        if (value) {\r\n          let name = input.dataset.name;\r\n          this.data = this.data.filter((item) => {\r\n            let str = item[name] + \"\";\r\n            return str.toLowerCase().indexOf(value.toLowerCase()) !== -1;\r\n          });\r\n        }\r\n      });\r\n      this.pageChanged();\r\n\r\n      let col = this.querySelector(\"thead tr.dg-head-columns th[aria-sort$='scending']\");\r\n      if (this.options.sort && col) {\r\n        this.sortData();\r\n      } else {\r\n        this.renderBody();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Data will be sorted then rendered using renderBody\r\n   * @param {Element} col The column that was clicked or null to use current sort\r\n   */\r\n  sortData(col = null) {\r\n    this.log(\"sort data\");\r\n\r\n    // Early exit\r\n    if (col && this.getColProp(col.getAttribute(\"field\"), \"noSort\")) {\r\n      this.log(\"sorting prevented because column is not sortable\");\r\n      return;\r\n    }\r\n    if (this.loading) {\r\n      this.log(\"sorting prevented because loading\");\r\n      return;\r\n    }\r\n\r\n    // We clicked on a column, update sort state\r\n    if (col !== null) {\r\n      // Remove active sort if any\r\n      this.querySelectorAll(\"thead tr:first-child th\").forEach((th) => {\r\n        if (th.classList.contains(\"dg-selectable\") || th.classList.contains(\"dg-actions\")) {\r\n          return;\r\n        }\r\n        if (th !== col) {\r\n          th.setAttribute(\"aria-sort\", \"none\");\r\n        }\r\n      });\r\n\r\n      // Set tristate col\r\n      if (!col.hasAttribute(\"aria-sort\") || col.getAttribute(\"aria-sort\") === \"none\") {\r\n        col.setAttribute(\"aria-sort\", \"ascending\");\r\n      } else if (col.getAttribute(\"aria-sort\") === \"ascending\") {\r\n        col.setAttribute(\"aria-sort\", \"descending\");\r\n      } else if (col.getAttribute(\"aria-sort\") === \"descending\") {\r\n        col.setAttribute(\"aria-sort\", \"none\");\r\n      }\r\n    } else {\r\n      // Or fetch current sort\r\n      col = this.querySelector(\"thead tr.dg-head-columns th[aria-sort$='scending']\");\r\n    }\r\n\r\n    if (this.options.server) {\r\n      // Reload data with updated sort\r\n      this.loadData().finally(() => {\r\n        this.renderBody();\r\n      });\r\n    } else {\r\n      const sort = col ? col.getAttribute(\"aria-sort\") : \"none\";\r\n      if (sort === \"none\") {\r\n        let stack = [];\r\n\r\n        // Restore order while keeping filters\r\n        this.originalData.some((itemA) => {\r\n          this.data.some((itemB) => {\r\n            if (JSON.stringify(itemA) === JSON.stringify(itemB)) {\r\n              stack.push(itemB);\r\n              return true;\r\n            }\r\n            return false;\r\n          });\r\n          return stack.length === this.data.length;\r\n        });\r\n\r\n        this.data = stack;\r\n      } else {\r\n        const field = col.getAttribute(\"field\");\r\n        this.data.sort((a, b) => {\r\n          if (!isNaN(a[field]) && !isNaN(b[field])) {\r\n            return sort === \"ascending\" ? a[field] - b[field] : b[field] - a[field];\r\n          }\r\n          const valA = sort === \"ascending\" ? a[field].toUpperCase() : b[field].toUpperCase();\r\n          const valB = sort === \"ascending\" ? b[field].toUpperCase() : a[field].toUpperCase();\r\n\r\n          switch (true) {\r\n            case valA > valB:\r\n              return 1;\r\n            case valA < valB:\r\n              return -1;\r\n            case valA === valB:\r\n              return 0;\r\n          }\r\n        });\r\n      }\r\n      this.renderBody();\r\n    }\r\n  }\r\n\r\n  fetchData() {\r\n    if (!this.options.url) {\r\n      return new Promise((resolve, reject) => reject(\"No url set\"));\r\n    }\r\n    let url = new URL(this.options.url, window.location.href);\r\n    let params = {\r\n      r: Date.now(),\r\n    };\r\n    if (this.options.server) {\r\n      // 0 based\r\n      params[this.options.serverParams.start] = this.page - 1;\r\n      params[this.options.serverParams.length] = this.options.perPage;\r\n      params[this.options.serverParams.search] = this.getFilters();\r\n      params[this.options.serverParams.sort] = this.getSort() || \"\";\r\n      params[this.options.serverParams.sortDir] = this.getSortDir();\r\n\r\n      // extra params ?\r\n      if (this.meta[this.options.serverParams.paramsKey]) {\r\n        params = Object.assign(params, this.meta[this.options.serverParams.paramsKey]);\r\n      }\r\n    }\r\n\r\n    appendParamsToUrl(url, params);\r\n\r\n    return fetch(url)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(response.statusText);\r\n        }\r\n        return response.json();\r\n      })\r\n      .catch((err) => {\r\n        return {\r\n          error: err.message,\r\n        };\r\n      });\r\n  }\r\n\r\n  renderTable() {\r\n    this.log(\"render table\");\r\n\r\n    if (this.options.menu && plugins.ContextMenu) {\r\n      plugins.ContextMenu.createMenu(this);\r\n    }\r\n\r\n    let sortedColumn;\r\n\r\n    this.renderHeader();\r\n    if (this.options.defaultSort) {\r\n      // We can have a default sort even with sort disabled\r\n      sortedColumn = this.querySelector(\"thead tr.dg-head-columns th[field='\" + this.options.defaultSort + \"']\");\r\n    }\r\n\r\n    if (sortedColumn) {\r\n      this.sortData(sortedColumn);\r\n    } else {\r\n      this.renderBody();\r\n    }\r\n\r\n    this.renderFooter();\r\n  }\r\n\r\n  /**\r\n   * Create table header\r\n   * - One row for the column headers\r\n   * - One row for the filters\r\n   */\r\n  renderHeader() {\r\n    this.log(\"render header\");\r\n\r\n    const thead = this.querySelector(\"thead\");\r\n    this.createColumnHeaders(thead);\r\n    this.createColumnFilters(thead);\r\n\r\n    if (this.options.resizable && plugins.ColumnResizer) {\r\n      plugins.ColumnResizer.renderResizer(this, labels.resizeColumn);\r\n    }\r\n\r\n    this.dispatchEvent(new CustomEvent(\"headerRendered\"));\r\n  }\r\n\r\n  renderFooter() {\r\n    this.log(\"render footer\");\r\n\r\n    const tfoot = this.querySelector(\"tfoot\");\r\n    const td = tfoot.querySelector(\"td\");\r\n    tfoot.removeAttribute(\"hidden\");\r\n    setAttribute(td, \"colspan\", this.columnsLength(true));\r\n    tfoot.style.display = \"\";\r\n  }\r\n\r\n  /**\r\n   * Create the column headers based on column definitions and set options\r\n   * @param {HTMLTableSectionElement} thead\r\n   */\r\n  createColumnHeaders(thead) {\r\n    // @link https://stackoverflow.com/questions/21064101/understanding-offsetwidth-clientwidth-scrollwidth-and-height-respectively\r\n    // const computedStyles = getComputedStyle(this.table);\r\n    // const scrollbarWidth = this.offsetWidth - this.clientWidth - parseInt(computedStyles.borderLeftWidth) - parseInt(computedStyles.borderRightWidth);\r\n    const scrollbarWidth = 8;\r\n    const availableWidth = this.clientWidth;\r\n    const colMaxWidth = Math.round((availableWidth / this.columnsLength(true)) * 2);\r\n\r\n    let idx = 0;\r\n    let tr;\r\n\r\n    // Create row\r\n    tr = document.createElement(\"tr\");\r\n    this.headerRow = tr;\r\n    tr.setAttribute(\"role\", \"row\");\r\n    tr.setAttribute(\"aria-rowindex\", \"1\");\r\n    tr.setAttribute(\"class\", \"dg-head-columns\");\r\n\r\n    if (this.options.selectable && plugins.SelectableRows) {\r\n      plugins.SelectableRows.createHeaderCol(this, tr);\r\n    }\r\n\r\n    // We need a real th from the dom to compute the size\r\n    let sampleTh = thead.querySelector(\"tr.dg-head-columns th\");\r\n    if (!sampleTh) {\r\n      sampleTh = document.createElement(\"th\");\r\n      thead.querySelector(\"tr\").appendChild(sampleTh);\r\n    }\r\n\r\n    // Create columns\r\n    idx = 0;\r\n    let totalWidth = 0;\r\n    this.options.columns.forEach((column) => {\r\n      if (column.attr) {\r\n        return;\r\n      }\r\n      const colIdx = idx + this.startColIndex();\r\n      let th = document.createElement(\"th\");\r\n      th.setAttribute(\"scope\", \"col\");\r\n      th.setAttribute(\"role\", \"columnheader button\");\r\n      th.setAttribute(\"aria-colindex\", \"\" + colIdx);\r\n      th.setAttribute(\"id\", randstr(\"dg-col-\"));\r\n      if (this.options.sort) {\r\n        th.setAttribute(\"aria-sort\", \"none\");\r\n      }\r\n      th.setAttribute(\"field\", column.field);\r\n      if (plugins.ResponsiveGrid) {\r\n        setAttribute(th, \"data-responsive\", column.responsive);\r\n      }\r\n      // Make sure the header fits (+ add some room for sort icon if necessary)\r\n      const computedWidth = getTextWidth(column.title, sampleTh, true) + 20;\r\n      th.dataset.minWidth = \"\" + computedWidth;\r\n      DataGrid.applyColumnDefinition(th, column);\r\n      th.tabIndex = 0;\r\n      th.textContent = column.title;\r\n\r\n      let w = 0;\r\n      // Autosize small based on first/last row ?\r\n      // Take into account minWidth of the header and max available size based on col numbers\r\n      if (this.options.autosize && plugins.AutosizeColumn) {\r\n        const colAvailableWidth = Math.min(availableWidth - totalWidth, colMaxWidth);\r\n        w = plugins.AutosizeColumn.autosizeColumn(this, th, column, parseInt(th.dataset.minWidth), colAvailableWidth);\r\n      } else {\r\n        w = Math.max(parseInt(th.dataset.minWidth), parseInt(th.getAttribute(\"width\")));\r\n      }\r\n\r\n      setAttribute(th, \"width\", w);\r\n      if (column.hidden) {\r\n        th.setAttribute(\"hidden\", \"\");\r\n      } else {\r\n        totalWidth += w;\r\n      }\r\n\r\n      // Reorder columns with drag/drop\r\n      if (this.options.reorder && plugins.DraggableHeaders) {\r\n        plugins.DraggableHeaders.makeHeaderDraggable(this, th);\r\n      }\r\n\r\n      tr.appendChild(th);\r\n      idx++;\r\n    });\r\n\r\n    // There is too much available width, and we want to avoid fixed layout to split remaining amount\r\n    if (totalWidth <= availableWidth) {\r\n      const visibleCols = findAll(tr, \"th:not([hidden])\");\r\n      if (visibleCols.length) {\r\n        const lastCol = visibleCols[visibleCols.length - 1];\r\n        removeAttribute(lastCol, \"width\");\r\n      }\r\n    }\r\n\r\n    // Actions\r\n    if (this.options.actions.length) {\r\n      let actionsTh = document.createElement(\"th\");\r\n      setAttribute(actionsTh, \"role\", \"columnheader button\");\r\n      setAttribute(actionsTh, \"aria-colindex\", this.columnsLength(true));\r\n      actionsTh.classList.add(...[\"dg-actions\", \"dg-not-sortable\", \"dg-not-resizable\", this.actionClass]);\r\n      actionsTh.tabIndex = 0;\r\n      tr.appendChild(actionsTh);\r\n    }\r\n\r\n    thead.replaceChild(tr, thead.querySelector(\"tr.dg-head-columns\"));\r\n\r\n    // Once columns are inserted, we have an actual dom to query\r\n    if (thead.offsetWidth > availableWidth) {\r\n      this.log(\"adjust width to fix size\");\r\n      let diff = thead.offsetWidth - availableWidth - scrollbarWidth;\r\n      if(this.options.responsive && plugins.ResponsiveGrid) {\r\n        diff += scrollbarWidth;\r\n      }\r\n      // Remove diff for columns that can afford it\r\n      tr.querySelectorAll(\"th[width]\").forEach((th) => {\r\n        if (hasClass(th, \"dg-not-resizable\")) {\r\n          return;\r\n        }\r\n        if (diff <= 0) {\r\n          return;\r\n        }\r\n        const col = asElement(th);\r\n        const actualWidth = parseInt(col.getAttribute(\"width\"));\r\n        const minWidth = col.dataset.minWidth ? parseInt(col.dataset.minWidth) : 0;\r\n        if (actualWidth > minWidth) {\r\n          let newWidth = actualWidth - diff;\r\n          if (newWidth < minWidth) {\r\n            newWidth = minWidth;\r\n          }\r\n          diff -= actualWidth - newWidth;\r\n\r\n          setAttribute(th, \"width\", newWidth);\r\n        }\r\n      });\r\n    }\r\n\r\n    // Context menu\r\n    if (this.options.menu && plugins.ContextMenu) {\r\n      plugins.ContextMenu.attachContextMenu(this);\r\n    }\r\n\r\n    // Sort col on click\r\n    tr.querySelectorAll(\"[aria-sort]\").forEach((sortableRow) => {\r\n      sortableRow.addEventListener(\"click\", () => this.sortData(sortableRow));\r\n    });\r\n\r\n    setAttribute(this.querySelector(\"table\"), \"aria-colcount\", this.columnsLength(true));\r\n  }\r\n\r\n  createColumnFilters(thead) {\r\n    let idx = 0;\r\n    let tr;\r\n\r\n    // Create row for filters\r\n    tr = document.createElement(\"tr\");\r\n    this.filterRow = tr;\r\n    tr.setAttribute(\"role\", \"row\");\r\n    tr.setAttribute(\"aria-rowindex\", \"2\");\r\n    tr.setAttribute(\"class\", \"dg-head-filters\");\r\n    if (!this.options.filter) {\r\n      tr.setAttribute(\"hidden\", \"\");\r\n    }\r\n\r\n    // Selectable\r\n    if (this.options.selectable && plugins.SelectableRows) {\r\n      plugins.SelectableRows.createFilterCol(this, tr);\r\n    }\r\n\r\n    this.options.columns.forEach((column) => {\r\n      if (column.attr) {\r\n        return;\r\n      }\r\n      const colIdx = idx + this.startColIndex();\r\n      let relatedTh = thead.querySelector(\"tr.dg-head-columns th[aria-colindex='\" + colIdx + \"']\");\r\n      if (!relatedTh) {\r\n        console.warn(\"Related th not found\", colIdx);\r\n        return;\r\n      }\r\n      let th = document.createElement(\"th\");\r\n      th.setAttribute(\"aria-colindex\", \"\" + colIdx);\r\n\r\n      let input = document.createElement(\"input\");\r\n      input.type = \"text\";\r\n      input.autocomplete = \"off\";\r\n      input.spellcheck = false;\r\n      // Allows binding filter to this column\r\n      input.dataset.name = column.field;\r\n      input.id = randstr(\"dg-filter-\");\r\n      // Don't use aria-label as it triggers autocomplete\r\n      input.setAttribute(\"aria-labelledby\", relatedTh.getAttribute(\"id\"));\r\n      if (!this.options.filter) {\r\n        th.tabIndex = 0;\r\n      } else {\r\n        input.tabIndex = 0;\r\n      }\r\n\r\n      if (column.hidden) {\r\n        th.setAttribute(\"hidden\", \"\");\r\n      }\r\n\r\n      th.appendChild(input);\r\n      tr.appendChild(th);\r\n      idx++;\r\n    });\r\n\r\n    // Actions\r\n    if (this.options.actions.length) {\r\n      let actionsTh = document.createElement(\"th\");\r\n      actionsTh.setAttribute(\"role\", \"columnheader button\");\r\n      actionsTh.setAttribute(\"aria-colindex\", \"\" + this.columnsLength(true));\r\n      actionsTh.classList.add(...[\"dg-actions\", this.actionClass]);\r\n      actionsTh.tabIndex = 0;\r\n      tr.appendChild(actionsTh);\r\n    }\r\n\r\n    thead.replaceChild(tr, thead.querySelector(\"tr.dg-head-filters\"));\r\n\r\n    // Filter content on enter\r\n    tr.querySelectorAll(\"input\").forEach((input) => {\r\n      input.addEventListener(\"keypress\", (e) => {\r\n        const key = e.keyCode || e.key;\r\n        if (key === 13 || key === \"Enter\") {\r\n          this.filterData.call(this);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Render the data as rows in tbody\r\n   * It will call paginate() at the end\r\n   */\r\n  renderBody() {\r\n    this.log(\"render body\");\r\n    let tr;\r\n    let td;\r\n    let idx;\r\n    let tbody = document.createElement(\"tbody\");\r\n\r\n    this.data.forEach((item, i) => {\r\n      tr = document.createElement(\"tr\");\r\n      tr.setAttribute(\"role\", \"row\");\r\n      tr.setAttribute(\"hidden\", \"\");\r\n      tr.setAttribute(\"aria-rowindex\", i + 1);\r\n      tr.tabIndex = 0;\r\n\r\n      // Selectable\r\n      if (this.options.selectable && plugins.SelectableRows) {\r\n        plugins.SelectableRows.createDataCol(this, tr);\r\n      }\r\n\r\n      // Expandable\r\n      if (this.options.expand) {\r\n        tr.classList.add(\"dg-expandable\");\r\n        tr.addEventListener(\"click\", function () {\r\n          this.classList.toggle(\"dg-expanded\");\r\n        });\r\n      }\r\n\r\n      idx = 0;\r\n      this.options.columns.forEach((column) => {\r\n        if (!column) {\r\n          console.log(this.options.columns);\r\n        }\r\n        // It should be applied as an attr of the row\r\n        if (column.attr) {\r\n          tr.setAttribute(column.attr, item[column.field]);\r\n          return;\r\n        }\r\n        td = document.createElement(\"td\");\r\n        td.setAttribute(\"role\", \"gridcell\");\r\n        td.setAttribute(\"aria-colindex\", idx + this.startColIndex());\r\n        DataGrid.applyColumnDefinition(td, column);\r\n        td.setAttribute(\"data-name\", column.title);\r\n        td.tabIndex = -1;\r\n\r\n        // Inline editing\r\n        if (column.editable) {\r\n          let input = document.createElement(\"input\");\r\n          input.type = \"text\";\r\n          input.autocomplete = \"off\";\r\n          input.spellcheck = false;\r\n          input.tabIndex = 0;\r\n          input.classList.add(\"dg-editable\");\r\n          input.name = this.getAttribute(\"id\").replace(\"-\", \"_\") + \"[\" + (i + 1) + \"]\" + \"[\" + column.field + \"]\";\r\n          input.value = item[column.field];\r\n          input.dataset.field = column.field;\r\n\r\n          input.addEventListener(\"click\", (ev) => ev.stopPropagation());\r\n          input.addEventListener(\"keypress\", (ev) => {\r\n            if (ev.type === \"keypress\") {\r\n              const key = ev.keyCode || ev.key;\r\n              if (key === 13 || key === \"Enter\") {\r\n                input.blur();\r\n              }\r\n            }\r\n          });\r\n          input.addEventListener(\"blur\", () => {\r\n            // Only fire on update\r\n            if (input.value == item[input.dataset.field]) {\r\n              return;\r\n            }\r\n            // Update underlying data\r\n            item[input.dataset.field] = input.value;\r\n            // Notify\r\n            dispatch(this, \"edit\", {\r\n              data: item,\r\n              value: input.value,\r\n            });\r\n          });\r\n          td.appendChild(input);\r\n        } else {\r\n          td.textContent = item[column.field];\r\n        }\r\n        if (column.hidden) {\r\n          setAttribute(td, \"hidden\", \"\");\r\n        }\r\n        tr.appendChild(td);\r\n        idx++;\r\n      });\r\n\r\n      // Actions\r\n      if (this.options.actions.length) {\r\n        td = document.createElement(\"td\");\r\n        setAttribute(td, \"role\", \"gridcell\");\r\n        setAttribute(td, \"aria-colindex\", this.columnsLength(true));\r\n        td.classList.add(...[\"dg-actions\", this.actionClass]);\r\n        td.tabIndex = 0;\r\n\r\n        // Add menu toggle\r\n        let actionsToggle = document.createElement(\"button\");\r\n        actionsToggle.classList.add(\"dg-actions-toggle\");\r\n        actionsToggle.innerHTML = \"\u2630\";\r\n        td.appendChild(actionsToggle);\r\n        actionsToggle.addEventListener(\"click\", (ev) => {\r\n          if (ev.target instanceof HTMLElement) {\r\n            ev.target.parentElement.classList.toggle(\"dg-actions-expand\");\r\n          }\r\n        });\r\n\r\n        this.options.actions.forEach((action) => {\r\n          let button = document.createElement(\"button\");\r\n          if (action.html) {\r\n            button.innerHTML = action.html;\r\n          } else {\r\n            button.innerText = action.title ?? action.name;\r\n          }\r\n          if (action.title) {\r\n            button.title = action.title;\r\n          }\r\n          if (action.url) {\r\n            button.type = \"submit\";\r\n            button.formAction = interpolate(action.url, item);\r\n          }\r\n          if (action.class) {\r\n            button.classList.add(...action.class.split(' '));\r\n          }\r\n          const actionHandler = (ev) => {\r\n            ev.stopPropagation();\r\n            if (action.confirm) {\r\n              let c = confirm(labels.areYouSure);\r\n              if (!c) {\r\n                ev.preventDefault();\r\n                return;\r\n              }\r\n            }\r\n            dispatch(this, \"action\", {\r\n              data: item,\r\n              action: action.name,\r\n            });\r\n          };\r\n          button.addEventListener(\"click\", actionHandler);\r\n          td.appendChild(button);\r\n\r\n          // Row action\r\n          if (action.default) {\r\n            tr.classList.add(\"dg-actionable\");\r\n            tr.addEventListener(\"click\", actionHandler);\r\n          }\r\n        });\r\n\r\n        tr.appendChild(td);\r\n      }\r\n\r\n      tbody.appendChild(tr);\r\n    });\r\n\r\n    tbody.setAttribute(\"role\", \"rowgroup\");\r\n\r\n    // Keep data empty message\r\n    const prev = this.querySelector(\"tbody\");\r\n    tbody.setAttribute(\"data-empty\", prev.getAttribute(\"data-empty\"));\r\n    this.querySelector(\"table\").replaceChild(tbody, prev);\r\n\r\n    if (plugins.FixedHeight) {\r\n      plugins.FixedHeight.createFakeRow(this);\r\n    }\r\n\r\n    this.paginate();\r\n\r\n    if (plugins.SelectableRows) {\r\n      plugins.SelectableRows.shouldSelectAll(this, tbody);\r\n    }\r\n\r\n    this.dispatchEvent(new CustomEvent(\"bodyRendered\"));\r\n  }\r\n\r\n  paginate() {\r\n    this.log(\"paginate\");\r\n\r\n    const total = this.totalRecords();\r\n    const p = this.page || 1;\r\n\r\n    let index;\r\n    let high = p * this.options.perPage;\r\n    let low = high - this.options.perPage + 1;\r\n    const tbody = this.querySelector(\"tbody\");\r\n    const tfoot = this.querySelector(\"tfoot\");\r\n\r\n    if (high > total) {\r\n      high = total;\r\n    }\r\n    if (!total) {\r\n      low = 0;\r\n    }\r\n\r\n    // Display all rows within the set indexes\r\n    // For server side paginated grids, we display everything\r\n    // since the server is taking care of actual pagination\r\n    tbody.querySelectorAll(\"tr\").forEach((tr) => {\r\n      if (this.options.server) {\r\n        tr.removeAttribute(\"hidden\");\r\n        return;\r\n      }\r\n      index = Number(tr.getAttribute(\"aria-rowindex\"));\r\n      if (index > high || index < low) {\r\n        setAttribute(tr, \"hidden\", \"\");\r\n      } else {\r\n        tr.removeAttribute(\"hidden\");\r\n      }\r\n    });\r\n\r\n    if (this.options.selectable && plugins.SelectableRows) {\r\n      plugins.SelectableRows.clearCheckboxes(this, tbody);\r\n    }\r\n\r\n    // Store default height and update styles if needed\r\n    if (plugins.FixedHeight) {\r\n      if (this.defaultHeight == 0) {\r\n        plugins.FixedHeight.computeDefaultHeight(this);\r\n      }\r\n      plugins.FixedHeight.updateFakeRow(this);\r\n    }\r\n\r\n    // Enable/disable buttons if shown\r\n    if (this.btnFirst) {\r\n      this.btnFirst.disabled = this.page <= 1;\r\n      this.btnPrev.disabled = this.page <= 1;\r\n      this.btnNext.disabled = this.page >= this.pages;\r\n      this.btnLast.disabled = this.page >= this.pages;\r\n    }\r\n    tfoot.querySelector(\".dg-low\").textContent = low.toString();\r\n    tfoot.querySelector(\".dg-high\").textContent = high.toString();\r\n    tfoot.querySelector(\".dg-total\").textContent = this.totalRecords();\r\n  }\r\n\r\n  totalPages() {\r\n    return Math.ceil(this.totalRecords() / this.options.perPage);\r\n  }\r\n\r\n  totalRecords() {\r\n    if (this.options.server) {\r\n      return this.meta[this.options.serverParams.metaFilteredKey] || 0;\r\n    }\r\n    return this.data.length;\r\n  }\r\n}\r\n\r\nexport default DataGrid;\r\n", "class BasePlugin {\r\n  /**\r\n   * Could be changed due to minification process\r\n   * It's better to set the actual class name in the plugin itself\r\n   */\r\n  static get pluginName() {\r\n    return this.name;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../data-grid\").default} grid\r\n   */\r\n  static connected(grid) {\r\n    grid;\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../data-grid\").default} grid\r\n   */\r\n  static disconnected(grid) {\r\n    grid;\r\n  }\r\n}\r\n\r\nexport default BasePlugin;\r\n", "import BasePlugin from \"../core/base-plugin.js\";\r\nimport elementOffset from \"../utils/elementOffset.js\";\r\nimport {\r\n  $$,\r\n  addClass,\r\n  asElement,\r\n  dispatch,\r\n  getAttribute,\r\n  hasClass,\r\n  off,\r\n  on,\r\n  removeAttribute,\r\n  removeClass,\r\n  setAttribute,\r\n} from \"../utils/shortcuts.js\";\r\n\r\n/**\r\n * Allows to resize columns\r\n */\r\nclass ColumnResizer extends BasePlugin {\r\n  static get pluginName() {\r\n    return \"ColumnResizer\";\r\n  }\r\n  /**\r\n   * @param {import(\"../data-grid\").default} grid\r\n   */\r\n  static connected(grid) {\r\n    grid.isResizing = false;\r\n  }\r\n  /**\r\n   * @param {import(\"../data-grid\").default} grid\r\n   */\r\n  static renderResizer(grid, resizeLabel) {\r\n    const table = grid.table;\r\n    const cols = $$(\"thead tr.dg-head-columns th\", grid);\r\n\r\n    cols.forEach((col) => {\r\n      if (hasClass(col, \"dg-not-resizable\")) {\r\n        return;\r\n      }\r\n      // Create a resizer element\r\n      const resizer = document.createElement(\"div\");\r\n      addClass(resizer, \"dg-resizer\");\r\n      resizer.ariaLabel = resizeLabel;\r\n\r\n      // Add a resizer element to the column\r\n      col.appendChild(resizer);\r\n\r\n      // Handle resizing\r\n      let startX = 0;\r\n      let startW = 0;\r\n      let remainingSpace = 0;\r\n      let max = 0;\r\n\r\n      const mouseMoveHandler = (e) => {\r\n        if (e.clientX > max) {\r\n          return;\r\n        }\r\n        const newWidth = startW + (e.clientX - startX);\r\n        if (col.dataset.minWidth && newWidth > parseInt(col.dataset.minWidth)) {\r\n          setAttribute(col, \"width\", newWidth);\r\n        }\r\n      };\r\n\r\n      // When user releases the mouse, remove the existing event listeners\r\n      const mouseUpHandler = () => {\r\n        grid.log(\"resized column\");\r\n\r\n        grid.isResizing = false;\r\n        removeClass(resizer, \"dg-resizer-active\");\r\n        if (grid.options.reorder) {\r\n          col.draggable = true;\r\n        }\r\n        col.style.overflow = \"hidden\";\r\n\r\n        off(document, \"mousemove\", mouseMoveHandler);\r\n        off(document, \"mouseup\", mouseUpHandler);\r\n\r\n        dispatch(grid, \"columnResized\", {\r\n          col: getAttribute(col, \"field\"),\r\n          width: getAttribute(col, \"width\"),\r\n        });\r\n      };\r\n\r\n      // Otherwise it could sort the col\r\n      on(resizer, \"click\", (e) => {\r\n        e.stopPropagation();\r\n      });\r\n\r\n      on(resizer, \"mousedown\", (e) => {\r\n        e.stopPropagation();\r\n\r\n        grid.isResizing = true;\r\n\r\n        const target = asElement(e.target);\r\n        const currentCols = $$(\".dg-head-columns th\", grid);\r\n        const visibleCols = Array.from(currentCols).filter((col) => {\r\n          return !col.hasAttribute(\"hidden\");\r\n        });\r\n        const columns = Array.from(visibleCols);\r\n        const columnIndex = columns.findIndex((column) => column == target.parentNode);\r\n        grid.log(\"resize column\");\r\n\r\n        addClass(resizer, \"dg-resizer-active\");\r\n\r\n        // Make sure we don't drag it\r\n        removeAttribute(col, \"draggable\");\r\n\r\n        // Allow overflow when resizing\r\n        col.style.overflow = \"visible\";\r\n\r\n        // Show full column height (-1 to avoid scrollbar)\r\n        resizer.style.height = table.offsetHeight - 1 + \"px\";\r\n\r\n        // Register initial data\r\n        startX = e.clientX;\r\n        startW = col.offsetWidth;\r\n\r\n        remainingSpace = (visibleCols.length - columnIndex) * 30;\r\n        max = elementOffset(target).left + grid.offsetWidth - remainingSpace;\r\n\r\n        // Remove width from next columns to allow auto layout\r\n        setAttribute(col, \"width\", startW);\r\n        for (let j = 0; j < visibleCols.length; j++) {\r\n          if (j > columnIndex) {\r\n            removeAttribute(cols[j], \"width\");\r\n          }\r\n        }\r\n\r\n        // Attach handlers\r\n        on(document, \"mousemove\", mouseMoveHandler);\r\n        on(document, \"mouseup\", mouseUpHandler);\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nexport default ColumnResizer;\r\n", "/**\r\n * @param {HTMLElement} el\r\n * @param {String} type\r\n * @param {String} prop\r\n * @returns {HTMLElement}\r\n */\r\nexport default function getParentElement(el, type, prop = \"nodeName\") {\r\n  let parent = el;\r\n  while (parent[prop] != type) {\r\n    parent = parent.parentElement;\r\n  }\r\n  return parent;\r\n}\r\n", "import BasePlugin from \"../core/base-plugin.js\";\r\nimport getParentElement from \"../utils/getParentElement.js\";\r\nimport { asAnyElement, find, off, on, removeAttribute, setAttribute } from \"../utils/shortcuts.js\";\r\n\r\n/**\r\n * Create a right click menu on the headers\r\n */\r\nclass ContextMenu extends BasePlugin {\r\n  static get pluginName() {\r\n    return \"ContextMenu\";\r\n  }\r\n  /**\r\n   * @param {import(\"../data-grid\").default} grid\r\n   */\r\n  static disconnected(grid) {\r\n    if (grid.headerRow) {\r\n      grid.headerRow.oncontextmenu = null;\r\n    }\r\n  }\r\n  /**\r\n   * @param {import(\"../data-grid\").default} grid\r\n   */\r\n  static attachContextMenu(grid) {\r\n    on(grid.headerRow, \"contextmenu\", (ev) => {\r\n      ContextMenu.showContextMenu(grid, ev);\r\n    });\r\n  }\r\n  /**\r\n   * @param {import(\"../data-grid\").default} grid\r\n   */\r\n  static showContextMenu(grid, e) {\r\n    e.preventDefault();\r\n\r\n    const target = getParentElement(e.target, \"THEAD\");\r\n    /**\r\n     * @type {HTMLUListElement}\r\n     */\r\n    const menu = find(grid, \".dg-menu\");\r\n    const rect = target.getBoundingClientRect();\r\n    let x = e.clientX - rect.left;\r\n    const y = e.clientY - rect.top;\r\n\r\n    menu.style.top = `${y}px`;\r\n    menu.style.left = `${x}px`;\r\n\r\n    removeAttribute(menu, \"hidden\");\r\n    if (x + 150 > rect.width) {\r\n      x -= menu.offsetWidth;\r\n      menu.style.left = `${x}px`;\r\n    }\r\n\r\n    const documentClickHandler = (e) => {\r\n      if (!menu.contains(e.target)) {\r\n        setAttribute(menu, \"hidden\", \"\");\r\n        off(document, \"click\", documentClickHandler);\r\n      }\r\n    };\r\n    on(document, \"click\", documentClickHandler);\r\n  }\r\n  /**\r\n   * @param {import(\"../data-grid\").default} grid\r\n   */\r\n  static createMenu(grid) {\r\n    /**\r\n     * @type {HTMLUListElement}\r\n     */\r\n    const menu = find(grid, \".dg-menu\");\r\n    while (menu.lastChild) {\r\n      menu.removeChild(menu.lastChild);\r\n    }\r\n    grid.options.columns.forEach((col) => {\r\n      if (col.attr) {\r\n        return;\r\n      }\r\n      const field = col.field;\r\n      const li = document.createElement(\"li\");\r\n      const label = document.createElement(\"label\");\r\n      const checkbox = document.createElement(\"input\");\r\n      setAttribute(checkbox, \"type\", \"checkbox\");\r\n      setAttribute(checkbox, \"data-name\", col.field);\r\n      if (!col.hidden) {\r\n        checkbox.checked = true;\r\n      }\r\n      on(checkbox, \"change\", (e) => {\r\n        /**\r\n         * @type {HTMLInputElement}\r\n         */\r\n        const t = asAnyElement(e.target);\r\n        if (t.checked) {\r\n          grid.showColumn(field);\r\n        } else {\r\n          // Prevent hidding last\r\n          if (grid.visibleColumns().length <= 1) {\r\n            // Restore checkbox value\r\n            t.checked = true;\r\n            return;\r\n          }\r\n          grid.hideColumn(field);\r\n        }\r\n      });\r\n\r\n      const text = document.createTextNode(col.title);\r\n\r\n      label.appendChild(checkbox);\r\n      label.appendChild(text);\r\n\r\n      li.appendChild(label);\r\n      menu.appendChild(li);\r\n    });\r\n  }\r\n}\r\n\r\nexport default ContextMenu;\r\n", "import BasePlugin from \"../core/base-plugin.js\";\r\nimport getParentElement from \"../utils/getParentElement.js\";\r\nimport { asElement, dispatch, findAll, getAttribute, on, setAttribute } from \"../utils/shortcuts.js\";\r\n\r\n/**\r\n * Allows to move headers\r\n */\r\nclass DraggableHeaders extends BasePlugin {\r\n  static get pluginName() {\r\n    return \"DraggableHeaders\";\r\n  }\r\n  /**\r\n   * @param {import(\"../data-grid\").default} grid\r\n   * @param {HTMLTableRowElement} th\r\n   */\r\n  static makeHeaderDraggable(grid, th) {\r\n    th.draggable = true;\r\n    on(th, \"dragstart\", (e) => {\r\n      if (grid.isResizing && e.preventDefault) {\r\n        e.preventDefault();\r\n        return;\r\n      }\r\n      if (!(e.target instanceof HTMLElement)) {\r\n        return;\r\n      }\r\n      grid.log(\"reorder col\");\r\n      e.dataTransfer.effectAllowed = \"move\";\r\n      e.dataTransfer.setData(\"text/plain\", e.target.getAttribute(\"aria-colindex\"));\r\n    });\r\n    on(th, \"dragover\", (e) => {\r\n      if (e.preventDefault) {\r\n        e.preventDefault();\r\n      }\r\n      e.dataTransfer.dropEffect = \"move\";\r\n      return false;\r\n    });\r\n    on(th, \"drop\", (e) => {\r\n      if (e.stopPropagation) {\r\n        e.stopPropagation();\r\n      }\r\n      const t = asElement(e.target);\r\n      const target = getParentElement(t, \"TH\");\r\n      const index = parseInt(e.dataTransfer.getData(\"text/plain\"));\r\n      const targetIndex = parseInt(target.getAttribute(\"aria-colindex\"));\r\n\r\n      if (index === targetIndex) {\r\n        grid.log(\"reordered col stayed the same\");\r\n        return;\r\n      }\r\n      grid.log(\"reordered col from \" + index + \" to \" + targetIndex);\r\n\r\n      const offset = grid.startColIndex();\r\n      const tmp = grid.options.columns[index - offset];\r\n      grid.options.columns[index - offset] = grid.options.columns[targetIndex - offset];\r\n      grid.options.columns[targetIndex - offset] = tmp;\r\n\r\n      const swapNodes = (selector, el1) => {\r\n        const rowIndex = el1.parentNode.getAttribute(\"aria-rowindex\");\r\n        const el2 = grid.querySelector(selector + \" tr[aria-rowindex='\" + rowIndex + \"'] [aria-colindex='\" + targetIndex + \"']\");\r\n        setAttribute(el1, \"aria-colindex\", targetIndex);\r\n        setAttribute(el2, \"aria-colindex\", index);\r\n        const newNode = document.createElement(\"th\");\r\n        el1.parentNode.insertBefore(newNode, el1);\r\n        el2.parentNode.replaceChild(el1, el2);\r\n        newNode.parentNode.replaceChild(el2, newNode);\r\n      };\r\n\r\n      // Swap all rows in header and body\r\n      findAll(grid, \"thead th[aria-colindex='\" + index + \"']\").forEach((el1) => {\r\n        swapNodes(\"thead\", el1);\r\n      });\r\n      findAll(grid, 'tbody td[aria-colindex=\"' + index + '\"]').forEach((el1) => {\r\n        swapNodes(\"tbody\", el1);\r\n      });\r\n\r\n      // Updates the columns\r\n      grid.options.columns = findAll(grid, \"thead tr.dg-head-columns th[field]\").map((th) =>\r\n        grid.options.columns.find((c) => c.field == getAttribute(th, \"field\"))\r\n      );\r\n\r\n      dispatch(grid, \"columnReordered\", {\r\n        col: tmp.field,\r\n        from: index,\r\n        to: targetIndex,\r\n      });\r\n      return false;\r\n    });\r\n  }\r\n}\r\n\r\nexport default DraggableHeaders;\r\n", "import BasePlugin from \"../core/base-plugin.js\";\r\n\r\n/**\r\n * Allows to paginate with horizontal swipe motions\r\n */\r\nclass TouchSupport extends BasePlugin {\r\n  static get pluginName() {\r\n    return \"TouchSupport\";\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../data-grid\").default} grid\r\n   */\r\n  static connected(grid) {\r\n    grid.touch = null;\r\n    grid.touchstart = TouchSupport.touchstart.bind(grid);\r\n    grid.touchmove = TouchSupport.touchmove.bind(grid);\r\n    grid.addEventListener(\"touchstart\", grid.touchstart, { passive: true });\r\n    grid.addEventListener(\"touchmove\", grid.touchmove, { passive: true });\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../data-grid\").default} grid\r\n   */\r\n  static disconnected(grid) {\r\n    grid.removeEventListener(\"touchstart\", grid.touchstart);\r\n    grid.removeEventListener(\"touchmove\", grid.touchmove);\r\n  }\r\n\r\n  static touchstart(e) {\r\n    this.touch = e.touches[0];\r\n  }\r\n\r\n  /**\r\n   * @this {import(\"../data-grid\").default}\r\n   */\r\n  static touchmove(e) {\r\n    if (!this.touch) {\r\n      return;\r\n    }\r\n    const xDiff = this.touch.clientX - e.touches[0].clientX;\r\n    const yDiff = this.touch.clientY - e.touches[0].clientY;\r\n\r\n    if (Math.abs(xDiff) > Math.abs(yDiff)) {\r\n      if (xDiff > 0) {\r\n        this.getNext();\r\n      } else {\r\n        this.getPrev();\r\n      }\r\n    }\r\n    this.touch = null;\r\n  }\r\n}\r\n\r\nexport default TouchSupport;\r\n", "import BasePlugin from \"../core/base-plugin.js\";\r\nimport { dispatch } from \"../utils/shortcuts.js\";\r\n\r\n/**\r\n * Allows to select rows\r\n */\r\nclass SelectableRows extends BasePlugin {\r\n  static get pluginName() {\r\n    return \"SelectableRows\";\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../data-grid\").default} grid\r\n   */\r\n  static disconnected(grid) {\r\n    if (grid.selectAll) {\r\n      grid.selectAll.removeEventListener(\"change\", grid.toggleSelectAll);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../data-grid\").default} grid\r\n   * @param {String} key Return a specific key (eg: id) instead of the whole row\r\n   * @returns {Array}\r\n   */\r\n  static getSelection(grid, key = null) {\r\n    let selectedData = [];\r\n\r\n    Array.from(grid.querySelectorAll(\"tbody .dg-selectable input:checked\")).forEach((checkbox) => {\r\n      if (!(checkbox instanceof HTMLElement)) {\r\n        return;\r\n      }\r\n      const idx = parseInt(checkbox.dataset.id);\r\n      const item = grid.data[idx - 1];\r\n      if (!item) {\r\n        console.warn(`Item ${idx} not found`);\r\n      }\r\n      if (key) {\r\n        selectedData.push(item[key]);\r\n      } else {\r\n        selectedData.push(item);\r\n      }\r\n    });\r\n    return selectedData;\r\n  }\r\n\r\n  /**\r\n   * Uncheck box if hidden and visible only\r\n   * @param {import(\"../data-grid\").default} grid\r\n   * @param {HTMLTableSectionElement} tbody\r\n   */\r\n  static clearCheckboxes(grid, tbody) {\r\n    if (!grid.options.selectVisibleOnly) {\r\n      return;\r\n    }\r\n    tbody.querySelectorAll(\"tr[hidden] .dg-selectable input\").forEach((input) => {\r\n      if (input instanceof HTMLInputElement) {\r\n        input.checked = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../data-grid\").default} grid\r\n   * @param {HTMLTableRowElement} tr\r\n   */\r\n  static createHeaderCol(grid, tr) {\r\n    let th = document.createElement(\"th\");\r\n    th.setAttribute(\"scope\", \"col\");\r\n    th.setAttribute(\"role\", \"columnheader button\");\r\n    th.setAttribute(\"aria-colindex\", \"1\");\r\n    th.classList.add(...[\"dg-selectable\", \"dg-not-resizable\", \"dg-not-sortable\"]);\r\n    th.tabIndex = 0;\r\n\r\n    grid.selectAll = document.createElement(\"input\");\r\n    grid.selectAll.type = \"checkbox\";\r\n    grid.selectAll.classList.add(\"dg-select-all\");\r\n\r\n    grid.toggleSelectAll = this.toggleSelectAll.bind(grid);\r\n    grid.selectAll.addEventListener(\"change\", grid.toggleSelectAll);\r\n\r\n    let label = document.createElement(\"label\");\r\n    label.appendChild(grid.selectAll);\r\n\r\n    th.appendChild(label);\r\n\r\n    th.setAttribute(\"width\", \"40\");\r\n    tr.appendChild(th);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../data-grid\").default} grid\r\n   * @param {HTMLTableRowElement} tr\r\n   */\r\n  static createFilterCol(grid, tr) {\r\n    let th = document.createElement(\"th\");\r\n    th.setAttribute(\"role\", \"columnheader button\");\r\n    th.setAttribute(\"aria-colindex\", \"1\");\r\n    th.classList.add(\"dg-selectable\");\r\n    th.tabIndex = 0;\r\n\r\n    let label = document.createElement(\"label\");\r\n    th.appendChild(label);\r\n    tr.appendChild(th);\r\n  }\r\n\r\n  /**\r\n   * Handles the selectAll checkbox when any other .dg-selectable checkbox is checked.\r\n   * It should check selectAll if all is checked\r\n   * It should uncheck selectAll if any is unchecked\r\n   * @param {import(\"../data-grid\").default} grid\r\n   * @param {HTMLTableSectionElement} tbody\r\n   */\r\n  static shouldSelectAll(grid, tbody) {\r\n    if (!grid.selectAll) {\r\n      return;\r\n    }\r\n    // Delegate listener for change events on input checkboxes\r\n    tbody.addEventListener(\"change\", (e) => {\r\n      if (e.target instanceof HTMLInputElement) {\r\n        if (!e.target.closest(\".dg-selectable\")) {\r\n          return;\r\n        }\r\n        const totalCheckboxes = grid.querySelectorAll(\"tbody .dg-selectable input[type=checkbox]\");\r\n        // @ts-ignore\r\n        const totalChecked = Array.from(totalCheckboxes).filter((n) => n.checked);\r\n        grid.selectAll.checked = totalChecked.length == totalCheckboxes.length;\r\n\r\n        dispatch(grid, \"rowsSelected\", {\r\n          selection: grid.getSelection(),\r\n        });\r\n      }\r\n    });\r\n    tbody.dispatchEvent(new Event(\"change\"));\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../data-grid\").default} grid\r\n   * @param {HTMLTableRowElement} tr\r\n   */\r\n  static createDataCol(grid, tr) {\r\n    // Create col\r\n    let td = document.createElement(\"td\");\r\n    td.setAttribute(\"role\", \"gridcell button\");\r\n    td.setAttribute(\"aria-colindex\", \"1\");\r\n    td.classList.add(\"dg-selectable\");\r\n\r\n    // Create input\r\n    let selectOne = document.createElement(\"input\");\r\n    // Alias row id for easy retrieval in getSelection\r\n    selectOne.dataset.id = tr.getAttribute(\"aria-rowindex\");\r\n    selectOne.type = \"checkbox\";\r\n    // Label need to take full space thanks to css to make the whole cell clickable\r\n    let label = document.createElement(\"label\");\r\n    label.appendChild(selectOne);\r\n    td.appendChild(label);\r\n\r\n    tr.appendChild(td);\r\n  }\r\n\r\n  /**\r\n   * Reflect state\r\n   * @this {import(\"../data-grid\").default}\r\n   */\r\n  static toggleSelectAll() {\r\n    const visibleOnly = this.options.selectVisibleOnly;\r\n    this.querySelectorAll(\"tbody .dg-selectable input\").forEach((cb) => {\r\n      if (!(cb instanceof HTMLInputElement)) {\r\n        return;\r\n      }\r\n      if (visibleOnly && !cb.offsetWidth) {\r\n        return;\r\n      }\r\n      cb.checked = this.selectAll.checked;\r\n    });\r\n\r\n    dispatch(this, \"rowsSelected\", {\r\n      selection: this.getSelection(),\r\n    });\r\n  }\r\n}\r\n\r\nexport default SelectableRows;\r\n", "import BasePlugin from \"../core/base-plugin.js\";\r\nimport { setAttribute } from \"../utils/shortcuts.js\";\r\n\r\n/**\r\n * Support for fixed table height\r\n *\r\n * We should add a fake row to push the footer down in case we don't have enough rows\r\n */\r\nclass FixedHeight extends BasePlugin {\r\n  static get pluginName() {\r\n    return \"FixedHeight\";\r\n  }\r\n  /**\r\n   * @param {import(\"../data-grid\").default} grid\r\n   */\r\n  static computeDefaultHeight(grid) {\r\n    // Wait until height is fully computed\r\n    requestAnimationFrame(() => {\r\n      grid.defaultHeight = grid.querySelector(\"table\").offsetHeight;\r\n\r\n      // If we have a fixed height, make sure we have overflowY set\r\n      if (grid.style.height) {\r\n        grid.style.overflowY = \"auto\";\r\n      }\r\n\r\n      if (grid.options.autoheight) {\r\n        // Adjust height so that it fits our table size\r\n        if (grid.style.height) {\r\n          grid.style.height = grid.defaultHeight + \"px\";\r\n        }\r\n        // If our min height is too big, adjust value\r\n        if (grid.style.minHeight && parseInt(grid.style.minHeight) > grid.defaultHeight) {\r\n          grid.style.minHeight = grid.defaultHeight + \"px\";\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../data-grid\").default} grid\r\n   */\r\n  static createFakeRow(grid) {\r\n    const tbody = grid.querySelector(\"tbody\");\r\n    let tr = document.createElement(\"tr\");\r\n    setAttribute(tr, \"role\", \"row\");\r\n    setAttribute(tr, \"hidden\", \"\");\r\n    tr.classList.add(\"dg-fake-row\");\r\n    tr.tabIndex = 0;\r\n    tbody.appendChild(tr);\r\n  }\r\n\r\n  /**\r\n   * @param {import(\"../data-grid\").default} grid\r\n   */\r\n  static updateFakeRow(grid) {\r\n    if (!grid.style.height) {\r\n      return;\r\n    }\r\n    // On last page, adjust height if using fixed height\r\n    let fakeRow = grid.querySelector(\".dg-fake-row\");\r\n    if (!fakeRow) {\r\n      return;\r\n    }\r\n\r\n    // Check if we are below set height\r\n    if (parseInt(grid.style.height) > grid.querySelector(\"tbody\").offsetHeight) {\r\n      const max = grid.options.perPage * grid.rowHeight;\r\n      const visibleRows = grid.querySelectorAll(\"tbody tr:not([hidden])\").length;\r\n      const fakeHeight = visibleRows > 1 ? max - visibleRows * grid.rowHeight : max;\r\n      setAttribute(fakeRow, \"height\", fakeHeight);\r\n      fakeRow.removeAttribute(\"hidden\");\r\n    } else {\r\n      fakeRow.removeAttribute(\"height\");\r\n    }\r\n  }\r\n}\r\n\r\nexport default FixedHeight;\r\n", "import BasePlugin from \"../core/base-plugin.js\";\r\nimport getTextWidth from \"../utils/getTextWidth.js\";\r\nimport { getAttribute, hasAttribute, setAttribute } from \"../utils/shortcuts.js\";\r\n\r\n/**\r\n * Allows to resize columns\r\n */\r\nclass AutosizeColumn extends BasePlugin {\r\n  static get pluginName() {\r\n    return \"AutosizeColumn\";\r\n  }\r\n  /**\r\n   * Autosize col based on column data\r\n   * @param {import(\"../data-grid\").default} grid\r\n   * @param {HTMLTableCellElement} th\r\n   * @param {import(\"../data-grid\").Column} column\r\n   * @param {Number} min\r\n   * @param {Number} max\r\n   * @returns {Number}\r\n   */\r\n  static autosizeColumn(grid, th, column, min, max) {\r\n    if (hasAttribute(th, \"width\")) {\r\n      return getAttribute(th, \"width\");\r\n    }\r\n    if (!grid.data.length) {\r\n      return;\r\n    }\r\n    let v = grid.data[0][column.field].toString();\r\n    let v2 = grid.data[grid.data.length - 1][column.field].toString();\r\n    if (v2.length > v.length) {\r\n      v = v2;\r\n    }\r\n    let width = 0;\r\n    if (v.length <= 6) {\r\n      width = min;\r\n    } else if (v.length > 50) {\r\n      width = max;\r\n    } else {\r\n      // Add some extra room to have some spare space\r\n      width = getTextWidth(v + \"0000\", th);\r\n    }\r\n    if (width < min) {\r\n      width = min;\r\n    }\r\n    setAttribute(th, \"width\", width);\r\n    return width;\r\n  }\r\n}\r\n\r\nexport default AutosizeColumn;\r\n", "/**\r\n * @param {Function} func\r\n * @param {Number} timeout\r\n * @returns {Function}\r\n */\r\nexport default function debounce(func, timeout = 300) {\r\n  let timer;\r\n  return (...args) => {\r\n    clearTimeout(timer);\r\n    timer = setTimeout(() => {\r\n      func.apply(this, args);\r\n    }, timeout);\r\n  };\r\n}\r\n", "import BasePlugin from \"../core/base-plugin.js\";\r\nimport debounce from \"../utils/debounce.js\";\r\nimport { addClass, findAll, removeClass } from \"../utils/shortcuts.js\";\r\n\r\nfunction sortByPriority(list) {\r\n  return Array.from(list).sort(function (a, b) {\r\n    a = parseInt(a.dataset.responsive) || 1;\r\n    b = parseInt(b.dataset.responsive) || 1;\r\n    if (a === b) {\r\n      b++;\r\n    }\r\n    return b - a;\r\n  });\r\n}\r\n\r\n/**\r\n * @type {ResizeObserverCallback}\r\n */\r\n//@ts-ignore\r\nconst callback = debounce((entries) => {\r\n  for (const entry of entries) {\r\n    /**\r\n     * @type {import(\"../data-grid\").default}\r\n     */\r\n    // @ts-ignore\r\n    const grid = entry.target;\r\n    const table = grid.table;\r\n    // check inlineSize (width) and not blockSize (height)\r\n    const contentBoxSize = Array.isArray(entry.contentBoxSize) ? entry.contentBoxSize[0] : entry.contentBoxSize;\r\n    const size = parseInt(contentBoxSize.inlineSize);\r\n    const tableWidth = table.offsetWidth;\r\n    const realTableWidth = findAll(grid.headerRow, \"th\").reduce((result, th) => {\r\n      return result + th.offsetWidth;\r\n    }, 0);\r\n    const diff = (realTableWidth || tableWidth) - size - 1;\r\n    const minWidth = 50;\r\n    // We have an array with the columns to show/hide are in order, most important first\r\n    const headerCols = sortByPriority(\r\n      findAll(grid.headerRow, \"th[field]\")\r\n        .reverse()\r\n        .filter((col) => {\r\n          return col.dataset.responsive !== \"0\";\r\n        })\r\n    );\r\n    let changed = false;\r\n\r\n    // grid.log(`table is ${tableWidth}/${realTableWidth} and available size is ${size}`);\r\n\r\n    // The table is too big\r\n    if (diff > 0) {\r\n      let remaining = diff;\r\n      let cols = headerCols.filter((col) => {\r\n        return !col.hasAttribute(\"hidden\") && col.hasAttribute(\"data-responsive\");\r\n      });\r\n      if (cols.length === 0) {\r\n        cols = headerCols.filter((col) => {\r\n          return !col.hasAttribute(\"hidden\");\r\n        });\r\n        // Always keep one column\r\n        if (cols.length === 1) {\r\n          return;\r\n        }\r\n      }\r\n      cols.forEach((col) => {\r\n        if (remaining < 0) {\r\n          return;\r\n        }\r\n\r\n        const colWidth = col.offsetWidth;\r\n        const field = col.getAttribute(\"field\");\r\n        if (!field) {\r\n          return;\r\n        }\r\n        col.dataset.baseWidth = col.offsetWidth;\r\n        grid.hideColumn(field, false);\r\n        changed = true;\r\n\r\n        remaining -= colWidth;\r\n        remaining = Math.round(remaining);\r\n      });\r\n    } else {\r\n      const requiredWidth =\r\n        headerCols\r\n          .filter((col) => {\r\n            return !col.hasAttribute(\"hidden\");\r\n          })\r\n          .reduce((result, col) => {\r\n            return result + parseInt(col.dataset.minWidth);\r\n          }, 0) + minWidth; // Add an offset so that inserting column is smoother\r\n\r\n      // Compute available width to insert columns\r\n      let remaining = size - requiredWidth;\r\n      // Do we have any hidden column that we can restore ?\r\n      // Reverse the array to restore the columns in the proper order\r\n      headerCols\r\n        .slice()\r\n        .reverse()\r\n        .filter((col) => {\r\n          return col.hasAttribute(\"hidden\");\r\n        })\r\n        .forEach((col) => {\r\n          if (remaining < minWidth) {\r\n            return;\r\n          }\r\n          const colWidth = parseInt(col.dataset.minWidth);\r\n\r\n          // We need to have enough space to restore it\r\n          if (size < colWidth + requiredWidth) {\r\n            remaining = -1; // break loop to keep restoring in order\r\n            return;\r\n          }\r\n\r\n          const field = col.getAttribute(\"field\");\r\n          if (!field) {\r\n            return;\r\n          }\r\n          grid.showColumn(field, false);\r\n          changed = true;\r\n\r\n          remaining -= colWidth;\r\n          remaining = Math.round(remaining);\r\n        });\r\n    }\r\n\r\n    // Check footer\r\n    const footer = grid.table.querySelector(\"tfoot\");\r\n    if (footer.offsetWidth > size) {\r\n      addClass(footer, \"dg-footer-compact\");\r\n    } else if (footer.offsetWidth < size + 200) {\r\n      removeClass(footer, \"dg-footer-compact\");\r\n    }\r\n    if (changed) {\r\n      grid.renderTable();\r\n    }\r\n    grid.table.style.visibility = \"visible\";\r\n  }\r\n}, 100);\r\nconst resizeObserver = new ResizeObserver(callback);\r\n\r\n/**\r\n * Responsive data grid\r\n */\r\nclass ResponsiveGrid extends BasePlugin {\r\n  static get pluginName() {\r\n    return \"ResponsiveGrid\";\r\n  }\r\n  /**\r\n   * @param {import(\"../data-grid\").default} grid\r\n   */\r\n  static connected(grid) {\r\n    if (grid.options.responsive) {\r\n      this.observe(grid);\r\n    }\r\n  }\r\n  /**\r\n   * @param {import(\"../data-grid\").default} grid\r\n   */\r\n  static disconnected(grid) {\r\n    this.unobserve(grid);\r\n  }\r\n  /**\r\n   * @param {import(\"../data-grid\").default} grid\r\n   */\r\n  static observe(grid) {\r\n    if (!grid.options.responsive) {\r\n      return;\r\n    }\r\n    resizeObserver.observe(grid);\r\n    grid.style.display = \"block\"; // Otherwise resize doesn't happen\r\n    grid.style.overflowX = \"hidden\"; // Prevent scrollbars from appearing\r\n  }\r\n  /**\r\n   * @param {import(\"../data-grid\").default} grid\r\n   */\r\n  static unobserve(grid) {\r\n    resizeObserver.unobserve(grid);\r\n    grid.style.display = \"unset\";\r\n    grid.style.overflowX = \"unset\";\r\n  }\r\n}\r\n\r\nexport default ResponsiveGrid;\r\n", "import DataGrid from \"./src/data-grid.js\";\r\nimport ColumnResizer from \"./src/plugins/column-resizer.js\";\r\nimport ContextMenu from \"./src/plugins/context-menu.js\";\r\nimport DraggableHeaders from \"./src/plugins/draggable-headers.js\";\r\nimport TouchSupport from \"./src/plugins/touch-support.js\";\r\nimport SelectableRows from \"./src/plugins/selectable-rows.js\";\r\nimport FixedHeight from \"./src/plugins/fixed-height.js\";\r\nimport AutosizeColumn from \"./src/plugins/autosize-column.js\";\r\nimport ResponsiveGrid from \"./src/plugins/responsive-grid.js\";\r\n\r\nDataGrid.registerPlugins({\r\n  ColumnResizer,\r\n  ContextMenu: ContextMenu,\r\n  DraggableHeaders,\r\n  TouchSupport,\r\n  SelectableRows,\r\n  FixedHeight,\r\n  AutosizeColumn,\r\n  ResponsiveGrid,\r\n});\r\n\r\ncustomElements.define(\"data-grid\", DataGrid);\r\n\r\nexport default DataGrid;\r\n"],
  "mappings": "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",
  "names": ["camelize", "str", "m", "chr", "normalizeData", "v", "e", "supportedPassiveTypes", "passiveOpts", "type", "getAttribute", "el", "name", "hasAttribute", "setAttribute", "v", "check", "removeAttribute", "on", "listener", "off", "dispatch", "el", "name", "data", "bubbles", "opts", "hasClass", "addClass", "removeClass", "$", "selector", "base", "$$", "find", "el", "findAll", "asElement", "asAnyElement", "BaseElement", "options", "opt", "v", "setAttribute", "data", "__spreadValues", "key", "normalizeData", "message", "getAttribute", "event", "template", "dispatch", "attributeName", "oldValue", "newValue", "_a", "isOption", "transformer", "camelize", "base_element_default", "addSelectOption", "el", "value", "label", "checked", "opt", "appendParamsToUrl", "url", "params", "key", "k", "convertArray", "v", "elementOffset", "el", "rect", "scrollLeft", "scrollTop", "getTextWidth", "text", "el", "withPadding", "styles", "fontWeight", "fontSize", "fontFamily", "padding", "paddingLeft", "paddingRight", "context", "metrics", "interpolate", "str", "data", "$1", "$2", "randstr", "prefix", "plugins", "labels", "DataGrid", "base_element_default", "_a", "_b", "_c", "setAttribute", "randstr", "attr", "camelize", "v", "list", "el", "definition", "columns", "cols", "key", "col", "item", "convertArray", "val", "updatePage", "elementOffset", "addSelectOption", "find", "plugin", "field", "found", "prop", "c", "render", "dispatch", "visibleOnly", "len", "tr", "row", "th", "fieldName", "value", "cb", "needRender", "resolve", "response", "err", "event", "filters", "input", "name", "sort", "stack", "itemA", "itemB", "a", "b", "valA", "valB", "reject", "url", "params", "appendParamsToUrl", "sortedColumn", "thead", "tfoot", "td", "availableWidth", "colMaxWidth", "idx", "sampleTh", "totalWidth", "column", "colIdx", "computedWidth", "getTextWidth", "w", "colAvailableWidth", "visibleCols", "findAll", "lastCol", "removeAttribute", "actionsTh", "diff", "hasClass", "asElement", "actualWidth", "minWidth", "newWidth", "sortableRow", "relatedTh", "e", "tbody", "i", "ev", "actionsToggle", "action", "button", "interpolate", "actionHandler", "prev", "total", "p", "index", "high", "low", "data_grid_default", "BasePlugin", "grid", "base_plugin_default", "ColumnResizer", "base_plugin_default", "grid", "resizeLabel", "table", "cols", "$$", "col", "hasClass", "resizer", "addClass", "startX", "startW", "remainingSpace", "max", "mouseMoveHandler", "e", "newWidth", "setAttribute", "mouseUpHandler", "removeClass", "off", "dispatch", "getAttribute", "on", "target", "asElement", "currentCols", "visibleCols", "columnIndex", "column", "removeAttribute", "elementOffset", "j", "column_resizer_default", "getParentElement", "el", "type", "prop", "parent", "ContextMenu", "base_plugin_default", "grid", "on", "ev", "target", "getParentElement", "menu", "find", "rect", "x", "y", "removeAttribute", "documentClickHandler", "e", "setAttribute", "off", "col", "field", "li", "label", "checkbox", "t", "asAnyElement", "text", "context_menu_default", "DraggableHeaders", "base_plugin_default", "grid", "th", "on", "e", "t", "asElement", "target", "getParentElement", "index", "targetIndex", "offset", "tmp", "swapNodes", "selector", "el1", "rowIndex", "el2", "setAttribute", "newNode", "findAll", "c", "getAttribute", "dispatch", "draggable_headers_default", "TouchSupport", "base_plugin_default", "grid", "e", "xDiff", "yDiff", "touch_support_default", "SelectableRows", "base_plugin_default", "grid", "key", "selectedData", "checkbox", "idx", "item", "tbody", "input", "tr", "th", "label", "e", "totalCheckboxes", "totalChecked", "n", "dispatch", "td", "selectOne", "visibleOnly", "cb", "selectable_rows_default", "FixedHeight", "base_plugin_default", "grid", "tbody", "tr", "setAttribute", "fakeRow", "max", "visibleRows", "fakeHeight", "fixed_height_default", "AutosizeColumn", "base_plugin_default", "grid", "th", "column", "min", "max", "hasAttribute", "getAttribute", "v", "v2", "width", "getTextWidth", "setAttribute", "autosize_column_default", "debounce", "func", "timeout", "timer", "args", "sortByPriority", "list", "a", "b", "callback", "debounce", "entries", "entry", "grid", "table", "contentBoxSize", "size", "tableWidth", "diff", "findAll", "result", "th", "minWidth", "headerCols", "col", "changed", "remaining", "cols", "colWidth", "field", "requiredWidth", "footer", "addClass", "removeClass", "resizeObserver", "ResponsiveGrid", "base_plugin_default", "responsive_grid_default", "data_grid_default", "column_resizer_default", "context_menu_default", "draggable_headers_default", "touch_support_default", "selectable_rows_default", "fixed_height_default", "autosize_column_default", "responsive_grid_default"]
}
