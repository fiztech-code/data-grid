{
  "version": 3,
  "sources": ["src/utils/elementOffset.js", "src/data-grid.js", "src/plugins/column-resizer.js", "src/plugins/context-menu.js", "src/plugins/draggable-headers.js", "data-grid.js"],
  "sourcesContent": ["/**\r\n * @param {HTMLElement} el\r\n * @returns {Object}\r\n */\r\nexport default function elementOffset(el) {\r\n  var rect = el.getBoundingClientRect(),\r\n    scrollLeft = window.pageXOffset || document.documentElement.scrollLeft,\r\n    scrollTop = window.pageYOffset || document.documentElement.scrollTop;\r\n  return { top: rect.top + scrollTop, left: rect.left + scrollLeft };\r\n}\r\n", "/**\r\n * Data Grid Web component\r\n *\r\n * Credits for inspiration\r\n * @link https://github.com/riverside/zino-grid\r\n */\r\n\"use strict\";\r\n\r\nimport elementOffset from \"./utils/elementOffset.js\";\r\n\r\n/**\r\n * @typedef Column\r\n * @property {string} field - the key in the data\r\n * @property {string} title - the title to display in the header (defaults to \"field\" if not set)\r\n * @property {number} width - the width of the column (auto otherwise)\r\n * @property {string} class - class to set on the column (target body or header with th.class or td.class)\r\n * @property {string} attr - don't render the column and set a matching attribute on the row with the value of the field\r\n * @property {boolean} hidden - hide the column\r\n * @property {boolean} editable - replace with input\r\n * @property {boolean} noSort - allow disabling sort for a given column\r\n */\r\n\r\n/**\r\n * @typedef Action\r\n * @property {string} title - the title of the button\r\n * @property {string} url - link for the action\r\n * @property {string} html - custom button data\r\n * @property {boolean} confirm - needs confirmation\r\n * @property {boolean} default - is the default row action\r\n */\r\n\r\n/**\r\n * @typedef Plugins\r\n * @property {DataGridColumnResizer} columnResizer\r\n * @property {DataGridContextMenu} contextMenu\r\n * @property {DataGridDraggableHeaders} draggableHeaders\r\n */\r\n\r\n/**\r\n * @var Plugins\r\n */\r\nlet plugins = {};\r\n\r\nconst labels = Object.assign(\r\n  {\r\n    itemsPerPage: \"Items per page\",\r\n    gotoPage: \"Go to page\",\r\n    gotoFirstPage: \"Go to first page\",\r\n    gotoPrevPage: \"Go to previous page\",\r\n    gotoNextPage: \"Go to next page\",\r\n    gotoLastPage: \"Go to last page\",\r\n    of: \"of\",\r\n    items: \"items\",\r\n    resizeColumn: \"Resize column\",\r\n    noData: \"No data\",\r\n    areYouSure: \"Are you sure?\",\r\n  },\r\n  window.DataGridLabels || {}\r\n);\r\nconst template = document.createElement(\"template\");\r\ntemplate.innerHTML = `\r\n<table role=\"grid\" >\r\n    <thead role=\"rowgroup\">\r\n        <tr role=\"row\" aria-rowindex=\"1\" class=\"dg-head-columns\"></tr>\r\n        <tr role=\"row\" aria-rowindex=\"2\" class=\"dg-head-filters\"></tr>\r\n    </thead>\r\n    <tbody role=\"rowgroup\" data-empty=\"${labels.noData}\"></tbody>\r\n    <tfoot role=\"rowgroup\" hidden>\r\n        <tr role=\"row\" aria-rowindex=\"1\">\r\n            <td role=\"gridcell\">\r\n            <div class=\"dg-footer\">\r\n                <div class=\"dg-page-nav\">\r\n                  <select class=\"dg-select-per-page\" aria-label=\"${labels.itemsPerPage}\"></select>\r\n                </div>\r\n                <div class=\"dg-pagination\">\r\n                  <button type=\"button\" class=\"dg-btn-first dg-rotate\" title=\"${labels.gotoFirstPage}\" aria-label=\"${labels.gotoFirstPage}\" disabled>\r\n                    <i class=\"dg-skip-icon\"></i>\r\n                  </button>\r\n                  <button type=\"button\" class=\"dg-btn-prev dg-rotate\" title=\"${labels.gotoPrevPage}\" aria-label=\"${labels.gotoPrevPage}\" disabled>\r\n                    <i class=\"dg-nav-icon\"></i>\r\n                  </button>\r\n                  <input type=\"number\" class=\"dg-input-page\" min=\"1\" step=\"1\" value=\"1\" aria-label=\"${labels.gotoPage}\">\r\n                  <button type=\"button\" class=\"dg-btn-next\" title=\"${labels.gotoNextPage}\" aria-label=\"${labels.gotoNextPage}\" disabled>\r\n                    <i class=\"dg-nav-icon\"></i>\r\n                  </button>\r\n                  <button type=\"button\" class=\"dg-btn-last\" title=\"${labels.gotoLastPage}\" aria-label=\"${labels.gotoLastPage}\" disabled>\r\n                    <i class=\"dg-skip-icon\"></i>\r\n                  </button>\r\n                </div>\r\n                <div class=\"dg-meta\">\r\n                  <span class=\"dg-low\">0</span> - <span class=\"dg-high\">0</span> ${labels.of} <span class=\"dg-total\">0</span> ${labels.items}\r\n                </div>\r\n            </div>\r\n            </td>\r\n        </tr>\r\n    </tfoot>\r\n    <ul class=\"dg-menu\" hidden></ul>\r\n</table>\r\n`;\r\n\r\n/**\r\n * @property {Column[]} state.columns\r\n * @property {Action[]} state.actions\r\n */\r\nclass DataGrid extends HTMLElement {\r\n  /**\r\n   * @param {object} options\r\n   */\r\n  constructor(options = {}) {\r\n    super();\r\n\r\n    // Don't use shadow dom as it makes theming super hard\r\n    this.appendChild(template.content.cloneNode(true));\r\n    this.root = this;\r\n\r\n    this.state = {\r\n      // reflected and observed\r\n      url: null,\r\n      page: 1,\r\n      perPage: 10,\r\n      debug: false,\r\n      filter: false,\r\n      sort: false,\r\n      server: false,\r\n      defaultSort: \"\",\r\n      reorder: false,\r\n      dir: \"ltr\",\r\n      // not reflected\r\n      pages: 0,\r\n      perPageValues: [10, 25, 50, 100, 250],\r\n      columns: [],\r\n      actions: [],\r\n      collapseActions: false,\r\n    };\r\n    this.setOptions(options);\r\n\r\n    // The grid displays data\r\n    this.data = [];\r\n    // We store the data in this\r\n    this.originalData = [];\r\n\r\n    // Init values\r\n    this.isInitialized = false;\r\n    this.touch = null;\r\n    this.isResizing = false;\r\n    this.defaultHeight = 0;\r\n    this.meta = {};\r\n\r\n    // Set id\r\n    if (!this.hasAttribute(\"id\")) {\r\n      this.setAttribute(\"id\", DataGrid.randstr(\"dg-\"));\r\n    }\r\n\r\n    this.log(\"constructor\");\r\n  }\r\n\r\n  static registerPlugin(name, inst) {\r\n    plugins[name] = inst;\r\n  }\r\n\r\n  // utils\r\n\r\n  /**\r\n   * @param {string} str\r\n   * @param {Object} data\r\n   * @returns {string}\r\n   */\r\n  static interpolate(str, data) {\r\n    return str.replace(/\\{([^}]+)?\\}/g, function ($1, $2) {\r\n      return data[$2];\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @param {HTMLElement} el\r\n   * @param {string} type\r\n   * @param {string} prop\r\n   * @returns {HTMLElement}\r\n   */\r\n  static getParentNode(el, type, prop = \"nodeName\") {\r\n    let parent = el;\r\n    while (parent[prop] != type) {\r\n      parent = parent.parentNode;\r\n    }\r\n    return parent;\r\n  }\r\n\r\n  /**\r\n   * Uses canvas.measureText to compute and return the width of the given text of given font in pixels.\r\n   * @see https://stackoverflow.com/questions/118241/calculate-text-width-with-javascript/21015393#21015393\r\n   * @param {string} text The text to be rendered.\r\n   * @param {HTMLElement} el Target element (defaults to body)\r\n   * @return {number}\r\n   */\r\n  static getTextWidth(text, el = document.body) {\r\n    const styles = window.getComputedStyle(el, null);\r\n    const fontWeight = styles.getPropertyValue(\"font-weight\") || \"normal\";\r\n    const fontSize = styles.getPropertyValue(\"font-size\") || \"1rem\";\r\n    const fontFamily = styles.getPropertyValue(\"font-family\") || \"Arial\";\r\n\r\n    // re-use canvas object for better performance\r\n    const canvas = this.getTextWidth.canvas || (this.getTextWidth.canvas = document.createElement(\"canvas\"));\r\n    const context = canvas.getContext(\"2d\");\r\n    context.font = `${fontWeight} ${fontSize} ${fontFamily}`;\r\n    const metrics = context.measureText(text);\r\n    return parseInt(metrics.width);\r\n  }\r\n\r\n  /**\r\n   * @param {HTMLElement} el\r\n   * @param {string} value\r\n   * @param {string} label\r\n   * @param {boolean} checked\r\n   */\r\n  static addSelectOption(el, value, label, checked = false) {\r\n    let opt = document.createElement(\"option\");\r\n    opt.value = value;\r\n    if (checked) {\r\n      opt.selected = \"selected\";\r\n    }\r\n    opt.label = label;\r\n    el.appendChild(opt);\r\n  }\r\n  /**\r\n   * @param {string} prefix\r\n   * @returns {string}\r\n   */\r\n  static randstr(prefix) {\r\n    return Math.random()\r\n      .toString(36)\r\n      .replace(\"0.\", prefix || \"\");\r\n  }\r\n  /**\r\n   * @param {string|Array} v\r\n   * @returns\r\n   */\r\n  static convertArray(v) {\r\n    if (typeof v === \"string\") {\r\n      if (v[0] === \"{\") {\r\n        return JSON.parse(v);\r\n      }\r\n      return v.split(\",\");\r\n    }\r\n    if (!Array.isArray(v)) {\r\n      console.error(\"Invalid array\", v);\r\n      return {};\r\n    }\r\n    return v;\r\n  }\r\n\r\n  /**\r\n   * @param {HTMLElement} el\r\n   * @param {Object} definition\r\n   */\r\n  static applyColumnDefinition(el, definition) {\r\n    if (definition.width) {\r\n      el.setAttribute(\"width\", definition.width);\r\n    }\r\n    if (definition.class) {\r\n      el.setAttribute(\"class\", definition.class);\r\n    }\r\n  }\r\n  /**\r\n   * @param {Object|Array} columns\r\n   * @returns {Object}\r\n   */\r\n  static convertColumns(columns) {\r\n    let cols = [];\r\n    // Convert objects to array\r\n    if (typeof columns === \"object\" && !Array.isArray(columns)) {\r\n      Object.keys(columns).forEach((key) => {\r\n        let col = {};\r\n        col.title = columns[key];\r\n        col.field = key;\r\n        cols.push(col);\r\n      });\r\n    } else {\r\n      columns.forEach((item) => {\r\n        let col = {};\r\n        if (typeof item === \"string\") {\r\n          col.title = item;\r\n          col.field = item;\r\n        } else if (typeof item === \"object\") {\r\n          col = item;\r\n          if (!col.field) {\r\n            console.error(\"Invalid column definition\", item);\r\n          }\r\n        } else {\r\n          console.error(\"Column definition must be a string or an object\");\r\n        }\r\n        cols.push(col);\r\n      });\r\n    }\r\n    return cols;\r\n  }\r\n\r\n  // reflected attrs, see https://gist.github.com/WebReflection/ec9f6687842aa385477c4afca625bbf4#reflected-dom-attributes\r\n\r\n  static get observedAttributes() {\r\n    return [\"url\", \"page\", \"per-page\", \"debug\", \"filter\", \"sort\", \"default-sort\", \"dir\", \"reorder\"];\r\n  }\r\n  attributeChangedCallback(attributeName, oldValue, newValue) {\r\n    this.log(\"attributeChangedCallback: \" + attributeName);\r\n\r\n    // Update state but only trigger events if initialized\r\n    switch (attributeName) {\r\n      case \"url\":\r\n        this.state.url = newValue;\r\n        if (this.isInitialized && newValue) {\r\n          this.loadData().then(() => {\r\n            this.configureUi();\r\n          });\r\n        }\r\n        break;\r\n      case \"page\":\r\n        this.state.page = Number(newValue);\r\n        if (this.isInitialized) {\r\n          this.loadData().finally(() => {\r\n            this.fixPage();\r\n            this.server ? this.renderBody() : this.paginate();\r\n          });\r\n        }\r\n        break;\r\n      case \"per-page\":\r\n        this.state.perPage = Number(newValue);\r\n        if (this.isInitialized) {\r\n          this.selectPerPage.value = newValue;\r\n          this.loadData().finally(() => {\r\n            this.fixPage();\r\n            this.server ? this.renderBody() : this.paginate();\r\n\r\n            // Scroll and keep a sizable amount of data displayed\r\n            if (this.sticky) {\r\n              window.scroll({ top: elementOffset(this.selectPerPage).top - this.defaultHeight });\r\n            }\r\n          });\r\n        }\r\n        break;\r\n      case \"debug\":\r\n        this.state.debug = newValue === \"true\";\r\n        break;\r\n      case \"dir\":\r\n        this.state.dir = newValue;\r\n        this.root.querySelector(\".dg-wrapper\").dir = this.state.dir;\r\n        break;\r\n      case \"filter\":\r\n        this.state.filter = newValue === \"true\";\r\n        if (this.isInitialized) {\r\n          this.toggleFilter();\r\n        }\r\n        break;\r\n      case \"reorder\":\r\n        this.state.reorder = newValue === \"true\";\r\n        if (this.isInitialized) {\r\n          this.toggleReorder();\r\n        }\r\n        break;\r\n      case \"sort\":\r\n        this.state.sort = newValue === \"true\";\r\n        if (this.isInitialized) {\r\n          this.toggleSort();\r\n        }\r\n        break;\r\n      case \"default-sort\":\r\n        this.state.defaultSort = newValue;\r\n        if (this.isInitialized) {\r\n          this.toggleSort();\r\n        }\r\n        break;\r\n    }\r\n  }\r\n  get page() {\r\n    return this.getAttribute(\"page\");\r\n  }\r\n  set page(val) {\r\n    this.setAttribute(\"page\", val);\r\n  }\r\n  get perPage() {\r\n    return this.getAttribute(\"per-page\");\r\n  }\r\n  set perPage(val) {\r\n    this.setAttribute(\"per-page\", val);\r\n  }\r\n  get debug() {\r\n    return this.getAttribute(\"debug\") === \"true\";\r\n  }\r\n  set debug(val) {\r\n    this.setAttribute(\"debug\", val);\r\n  }\r\n  get dir() {\r\n    return this.getAttribute(\"dir\");\r\n  }\r\n  set dir(val) {\r\n    this.setAttribute(\"dir\", val);\r\n  }\r\n  get filter() {\r\n    return this.getAttribute(\"filter\") === \"true\";\r\n  }\r\n  set filter(val) {\r\n    this.setAttribute(\"filter\", val);\r\n  }\r\n  get reorder() {\r\n    return this.getAttribute(\"reorder\") === \"true\";\r\n  }\r\n  set reorder(val) {\r\n    this.setAttribute(\"reorder\", val);\r\n  }\r\n  get sort() {\r\n    return this.getAttribute(\"sort\") === \"true\";\r\n  }\r\n  set sort(val) {\r\n    this.setAttribute(\"sort\", val);\r\n  }\r\n  get defaultSort() {\r\n    return this.getAttribute(\"default-sort\");\r\n  }\r\n  set defaultSort(val) {\r\n    this.setAttribute(\"default-sort\", val);\r\n  }\r\n  get url() {\r\n    return this.getAttribute(\"url\");\r\n  }\r\n  set url(val) {\r\n    val ? this.setAttribute(\"url\", val) : this.removeAttribute(\"url\");\r\n  }\r\n\r\n  // Boolean\r\n\r\n  get server() {\r\n    return this.hasAttribute(\"server\");\r\n  }\r\n  set server(val) {\r\n    val ? this.setAttribute(\"server\", \"\") : this.removeAttribute(\"server\");\r\n  }\r\n  get autosize() {\r\n    return this.hasAttribute(\"autosize\");\r\n  }\r\n  set autosize(val) {\r\n    val ? this.setAttribute(\"autosize\", \"\") : this.removeAttribute(\"autosize\");\r\n  }\r\n  get resizable() {\r\n    return this.hasAttribute(\"resizable\");\r\n  }\r\n  set resizable(val) {\r\n    val ? this.setAttribute(\"resizable\", \"\") : this.removeAttribute(\"resizable\");\r\n  }\r\n  get sticky() {\r\n    return this.hasAttribute(\"sticky\");\r\n  }\r\n  set sticky(val) {\r\n    val ? this.setAttribute(\"sticky\", \"\") : this.removeAttribute(\"sticky\");\r\n  }\r\n  get responsive() {\r\n    return this.hasAttribute(\"responsive\");\r\n  }\r\n  set responsive(val) {\r\n    val ? this.setAttribute(\"responsive\", \"\") : this.removeAttribute(\"responsive\");\r\n  }\r\n  get expand() {\r\n    return this.hasAttribute(\"expand\");\r\n  }\r\n  set expand(val) {\r\n    val ? this.setAttribute(\"expand\", \"\") : this.removeAttribute(\"expand\");\r\n  }\r\n  get selectable() {\r\n    return this.hasAttribute(\"selectable\");\r\n  }\r\n  set selectable(val) {\r\n    val ? this.setAttribute(\"selectable\", \"\") : this.removeAttribute(\"selectable\");\r\n  }\r\n\r\n  // Not reflected\r\n\r\n  get perPageValues() {\r\n    return this.state.perPageValues;\r\n  }\r\n  set perPageValues(val) {\r\n    if (Array.isArray(val)) {\r\n      this.state.perPageValues = val;\r\n      if (this.selectPerPage) {\r\n        while (this.selectPerPage.lastChild) {\r\n          this.selectPerPage.removeChild(this.selectPerPage.lastChild);\r\n        }\r\n        this.state.perPageValues.forEach((v) => {\r\n          DataGrid.addSelectOption(this.selectPerPage, v, v);\r\n        });\r\n      }\r\n    }\r\n  }\r\n  get columns() {\r\n    return this.state.columns;\r\n  }\r\n  set columns(val) {\r\n    this.state.columns = DataGrid.convertColumns(DataGrid.convertArray(val));\r\n  }\r\n  get actions() {\r\n    return this.state.actions;\r\n  }\r\n  set actions(val) {\r\n    this.state.actions = DataGrid.convertArray(val);\r\n  }\r\n  connectedCallback() {\r\n    this.log(\"connectedCallback\");\r\n\r\n    this.btnFirst = this.root.querySelector(\".dg-btn-first\");\r\n    this.btnPrev = this.root.querySelector(\".dg-btn-prev\");\r\n    this.btnNext = this.root.querySelector(\".dg-btn-next\");\r\n    this.btnLast = this.root.querySelector(\".dg-btn-last\");\r\n    this.selectPerPage = this.root.querySelector(\".dg-select-per-page\");\r\n    this.inputPage = this.root.querySelector(\".dg-input-page\");\r\n\r\n    this.getFirst = this.getFirst.bind(this);\r\n    this.getPrev = this.getPrev.bind(this);\r\n    this.getNext = this.getNext.bind(this);\r\n    this.getLast = this.getLast.bind(this);\r\n    this.changePerPage = this.changePerPage.bind(this);\r\n    this.gotoPage = this.gotoPage.bind(this);\r\n\r\n    this.btnFirst.addEventListener(\"click\", this.getFirst);\r\n    this.btnPrev.addEventListener(\"click\", this.getPrev);\r\n    this.btnNext.addEventListener(\"click\", this.getNext);\r\n    this.btnLast.addEventListener(\"click\", this.getLast);\r\n    this.selectPerPage.addEventListener(\"change\", this.changePerPage, {\r\n      passive: true,\r\n    });\r\n    this.inputPage.addEventListener(\"input\", this.gotoPage);\r\n\r\n    // Touch support\r\n    this.touchstart = this.touchstart.bind(this);\r\n    this.touchmove = this.touchmove.bind(this);\r\n    document.addEventListener(\"touchstart\", this.touchstart);\r\n    document.addEventListener(\"touchmove\", this.touchmove);\r\n\r\n    // Populate\r\n    this.perPageValues = this.state.perPageValues;\r\n\r\n    this.loadData().finally(() => {\r\n      this.configureUi();\r\n\r\n      this.toggleSort();\r\n      this.toggleFilter();\r\n      this.toggleReorder();\r\n\r\n      this.root.classList.add(\"dg-initialized\");\r\n      this.isInitialized = true;\r\n    });\r\n  }\r\n  disconnectedCallback() {\r\n    this.log(\"disconnectedCallback\");\r\n\r\n    this.btnFirst.removeEventListener(\"click\", this.getFirst);\r\n    this.btnPrev.removeEventListener(\"click\", this.getPrev);\r\n    this.btnNext.removeEventListener(\"click\", this.getNext);\r\n    this.btnLast.removeEventListener(\"click\", this.getLast);\r\n    this.selectPerPage.removeEventListener(\"change\", this.changePerPage, {\r\n      passive: true,\r\n    });\r\n    this.inputPage.removeEventListener(\"input\", this.gotoPage);\r\n\r\n    // Touch support\r\n    document.removeEventListener(\"touchstart\", this.touchstart);\r\n    document.removeEventListener(\"touchmove\", this.touchmove);\r\n\r\n    // Selectable\r\n    if (this.selectAll) {\r\n      this.selectAll.removeEventListener(\"change\", this.toggleSelectAll);\r\n    }\r\n\r\n    // Context menu\r\n    if (this.headerRow && typeof DataGridContextMenu != \"undefined\") {\r\n      this.headerRow.oncontextmenu = null;\r\n    }\r\n\r\n    // TODO: what about the others listeners?\r\n  }\r\n  toggleSelectAll() {\r\n    this.root.querySelectorAll(\"tbody .dg-selectable input\").forEach((cb) => {\r\n      cb.checked = this.selectAll.checked;\r\n    });\r\n  }\r\n  touchstart(e) {\r\n    this.touch = e.touches[0];\r\n  }\r\n  touchmove(e) {\r\n    if (!this.touch) {\r\n      return;\r\n    }\r\n    const xDiff = this.touch.clientX - e.touches[0].clientX;\r\n    const yDiff = this.touch.clientY - e.touches[0].clientY;\r\n\r\n    if (Math.abs(xDiff) > Math.abs(yDiff)) {\r\n      if (xDiff > 0) {\r\n        this.getNext();\r\n      } else {\r\n        this.getPrev();\r\n      }\r\n    }\r\n    this.touch = null;\r\n  }\r\n\r\n  /**\r\n   * @param {Object} options\r\n   */\r\n  setOptions(options) {\r\n    if (this.reorder && this.isInitialized) return;\r\n    for (const [key, value] of Object.entries(options)) {\r\n      if (key in this) {\r\n        this[key] = value;\r\n        this.state[key] = value;\r\n      }\r\n    }\r\n  }\r\n  getColProp(field, prop) {\r\n    let v = null;\r\n    this.state.columns.forEach((col) => {\r\n      if (col.field == field) {\r\n        v = col[prop];\r\n        return;\r\n      }\r\n    });\r\n    return v;\r\n  }\r\n  setColProp(field, prop, val) {\r\n    this.state.columns.forEach((col) => {\r\n      if (col.field == field) {\r\n        col[prop] = val;\r\n      }\r\n    });\r\n  }\r\n  startIndex() {\r\n    return this.selectable ? 2 : 1;\r\n  }\r\n  hasActions() {\r\n    return this.state.actions.length > 0;\r\n  }\r\n  get actionClass() {\r\n    if (this.state.actions.length < 3 && !this.state.collapseActions) {\r\n      return \"dg-actions-\" + this.state.actions.length;\r\n    }\r\n    return \"dg-actions-more\";\r\n  }\r\n  columnsLength(visibleOnly = false) {\r\n    let len = 0;\r\n    this.state.columns.forEach((col) => {\r\n      if (visibleOnly && col.hidden) {\r\n        return;\r\n      }\r\n      if (!col.attr) {\r\n        len++;\r\n      }\r\n    });\r\n    if (this.selectable) {\r\n      len++;\r\n    }\r\n    if (this.state.actions.length) {\r\n      len++;\r\n    }\r\n    return len;\r\n  }\r\n  computeDefaultHeight() {\r\n    // Wait until height is fully computed\r\n    requestAnimationFrame(() => {\r\n      this.defaultHeight = this.root.querySelector(\"table\").offsetHeight;\r\n\r\n      // If we have a fixed height, make sure we have overflowY set\r\n      if (this.style.height) {\r\n        this.style.height = this.defaultHeight + \"px\";\r\n        this.style.overflowY = \"auto\";\r\n      }\r\n      // If our min height is too small, make sure we adjust the value\r\n      if (this.style.minHeight && parseInt(this.style.minHeight) > this.defaultHeight) {\r\n        this.style.minHeight = this.defaultHeight + \"px\";\r\n      }\r\n    });\r\n  }\r\n  configureUi() {\r\n    if (plugins.contextMenu) {\r\n      plugins.contextMenu.createMenu(this);\r\n    }\r\n    this.root.querySelector(\"table\").setAttribute(\"aria-rowcount\", this.data.length);\r\n    this.root.querySelector(\"tfoot\").removeAttribute(\"hidden\");\r\n    this.renderHeader();\r\n\r\n    // Store row height for later usage\r\n    if (!this.rowHeight) {\r\n      const tr = this.root.querySelector(\"tbody tr\") || this.root.querySelector(\"table tr\");\r\n      this.rowHeight = tr.offsetHeight;\r\n    }\r\n  }\r\n  /**\r\n   * This needs to be called each time the data changes or the perPage value changes\r\n   */\r\n  fixPage() {\r\n    this.state.pages = this.totalPages();\r\n\r\n    // Constrain values\r\n    if (this.state.pages < this.state.page) {\r\n      this.state.page = this.state.pages;\r\n    }\r\n    if (this.state.page < 1) {\r\n      this.state.page = 1;\r\n    }\r\n\r\n    // Show current page in input\r\n    this.inputPage.setAttribute(\"max\", this.state.pages);\r\n    this.inputPage.value = this.state.page;\r\n    this.inputPage.disabled = this.state.pages === 1;\r\n  }\r\n  toggleFilter() {\r\n    const row = this.root.querySelector(\"thead tr.dg-head-filters\");\r\n    if (this.state.filter) {\r\n      row.removeAttribute(\"hidden\");\r\n    } else {\r\n      row.setAttribute(\"hidden\", true);\r\n    }\r\n  }\r\n  toggleReorder() {\r\n    this.root.querySelectorAll(\"thead tr.dg-head-columns th\").forEach((th) => {\r\n      if (th.classList.contains(\"dg-selectable\") || th.classList.contains(\"dg-actions\")) {\r\n        return;\r\n      }\r\n      if (this.state.reorder) {\r\n        th.draggable = true;\r\n      } else {\r\n        th.removeAttribute(\"draggable\");\r\n      }\r\n    });\r\n  }\r\n  toggleSort() {\r\n    this.log(\"toggle sort\");\r\n    this.root.querySelectorAll(\"thead tr.dg-head-columns th\").forEach((th) => {\r\n      const fieldName = th.getAttribute(\"field\");\r\n      if (\r\n        th.classList.contains(\"dg-selectable\") ||\r\n        th.classList.contains(\"dg-actions\") ||\r\n        (!this.isInitialized && fieldName == this.defaultSort)\r\n      ) {\r\n        return;\r\n      }\r\n      if (this.state.sort && !this.getColProp(fieldName, \"noSort\")) {\r\n        th.setAttribute(\"aria-sort\", \"none\");\r\n      } else {\r\n        th.removeAttribute(\"aria-sort\");\r\n      }\r\n    });\r\n  }\r\n  addRow(row) {\r\n    this.log(\"Add row\");\r\n    this.originalData.push(row);\r\n    this.data = this.originalData.slice();\r\n    this.fixPage();\r\n    this.sortData();\r\n  }\r\n  removeRow(value = null, key = null) {\r\n    if (key === null) {\r\n      key = this.columns[0][\"field\"];\r\n    }\r\n    if (value === null) {\r\n      value = this.originalData[this.originalData.length - 1][key];\r\n    }\r\n    this.log(\"Removing \" + key + \":\" + value);\r\n    for (let i = 0; i < this.originalData.length; i++) {\r\n      if (this.originalData[i][key] === value) {\r\n        this.originalData.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n    this.data = this.originalData.slice();\r\n    this.fixPage();\r\n    this.sortData();\r\n  }\r\n  getSelection(key = null) {\r\n    let selectedData = [];\r\n    this.data.forEach((item, i) => {\r\n      const row = this.root.querySelector(\"tbody tr[aria-rowindex='\" + (i + 1) + \"']\");\r\n      const checkbox = row.querySelector(\".dg-selectable input\");\r\n      if (checkbox.checked) {\r\n        if (key) {\r\n          selectedData.push(item[key]);\r\n        } else {\r\n          selectedData.push(item);\r\n        }\r\n      }\r\n    });\r\n    return selectedData;\r\n  }\r\n  getData() {\r\n    return this.originalData;\r\n  }\r\n  clearData() {\r\n    // Clear the state but keep attribute so we can reload\r\n    this.state.url = null;\r\n    if (this.data.length === 0) {\r\n      return;\r\n    }\r\n    this.data = this.originalData = [];\r\n    this.fixPage();\r\n    this.renderHeader();\r\n    this.computeDefaultHeight();\r\n  }\r\n  /**\r\n   * @returns {Promise}\r\n   */\r\n  loadData() {\r\n    if ((!this.server && this.originalData.length) || (this.server && !this.isInitialized && this.originalData.length)) {\r\n      this.log(\"skip loadData\");\r\n      return new Promise((resolve) => {\r\n        resolve();\r\n      });\r\n    }\r\n    this.log(\"loadData\");\r\n    this.loading = true;\r\n    this.root.classList.add(\"dg-loading\");\r\n    return this.fetchData()\r\n      .then((response) => {\r\n        if (Array.isArray(response)) {\r\n          this.data = response;\r\n        } else {\r\n          if (!response.data) {\r\n            console.error(\"Invalid response, it should contain a data key with an array or be a plain array\", response);\r\n            return;\r\n          }\r\n\r\n          // We may have a config object\r\n          if (response.options) {\r\n            this.setOptions(response.options);\r\n          }\r\n          if (response.meta) {\r\n            this.meta = response.meta;\r\n          }\r\n\r\n          this.data = response.data;\r\n        }\r\n        this.originalData = this.data.slice();\r\n        this.fixPage();\r\n\r\n        // Make sure we have a proper set of columns\r\n        if (this.state.columns.length === 0 && this.originalData.length) {\r\n          this.state.columns = DataGrid.convertColumns(Object.keys(this.originalData[0]));\r\n        }\r\n\r\n        this.root.classList.remove(\"dg-loading\");\r\n        this.loading = false;\r\n      })\r\n      .catch((err) => {\r\n        this.url = null;\r\n        this.log(err);\r\n      });\r\n  }\r\n  getFirst() {\r\n    if (this.loading) {\r\n      return;\r\n    }\r\n    this.page = 1;\r\n  }\r\n  getLast() {\r\n    if (this.loading) {\r\n      return;\r\n    }\r\n    this.page = this.state.pages;\r\n  }\r\n  getPrev() {\r\n    if (this.loading) {\r\n      return;\r\n    }\r\n    this.page = this.state.page - 1;\r\n  }\r\n  getNext() {\r\n    if (this.loading) {\r\n      return;\r\n    }\r\n    this.page = this.state.page + 1;\r\n  }\r\n  /**\r\n   * @returns {Promise}\r\n   */\r\n  refresh() {\r\n    this.data = this.originalData = [];\r\n    return this.loadData();\r\n  }\r\n  changePerPage() {\r\n    this.perPage = this.selectPerPage.options[this.selectPerPage.selectedIndex].value;\r\n  }\r\n  gotoPage(event) {\r\n    if (event.type === \"keypress\") {\r\n      const key = event.keyCode || event.key;\r\n      if (key === 13 || key === \"Enter\") {\r\n        event.preventDefault();\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n    this.page = this.inputPage.value;\r\n  }\r\n  getSort() {\r\n    let col = this.root.querySelector(\"thead tr.dg-head-columns th[aria-sort$='scending']\");\r\n    if (col) {\r\n      return col.getAttribute(\"field\");\r\n    }\r\n    return this.defaultSort;\r\n  }\r\n  getSortDir() {\r\n    let col = this.root.querySelector(\"thead tr.dg-head-columns th[aria-sort$='scending']\");\r\n    if (col) {\r\n      return col.getAttribute(\"aria-sort\") || \"\";\r\n    }\r\n    return \"\";\r\n  }\r\n  getFilters() {\r\n    let filters = [];\r\n    this.root.querySelectorAll(\"thead tr.dg-head-filters input\").forEach((input) => {\r\n      filters[input.dataset.name] = input.value;\r\n    });\r\n    return filters;\r\n  }\r\n  clearFilters() {\r\n    this.root.querySelectorAll(\"thead tr.dg-head-filters input\").forEach((input) => {\r\n      input.value = \"\";\r\n    });\r\n    this.filterData();\r\n  }\r\n  filterData() {\r\n    this.log(\"filter data\");\r\n\r\n    if (this.server) {\r\n      this.loadData().finally(() => {\r\n        this.fixPage();\r\n        this.renderBody();\r\n      });\r\n    } else {\r\n      this.data = this.originalData.slice();\r\n\r\n      this.root.querySelectorAll(\"thead tr.dg-head-filters input\").forEach((input) => {\r\n        let value = input.value;\r\n        if (value) {\r\n          let name = input.dataset.name;\r\n          this.data = this.data.filter((item) => {\r\n            let str = item[name] + \"\";\r\n            return str.toLowerCase().indexOf(value.toLowerCase()) !== -1;\r\n          });\r\n        }\r\n      });\r\n\r\n      this.fixPage();\r\n      let col = this.root.querySelector(\"thead tr.dg-head-columns th[aria-sort$='scending']\");\r\n      if (this.state.sort && col) {\r\n        this.sortData(col);\r\n      } else {\r\n        this.renderBody();\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * Data will be sorted then rendered using renderBody\r\n   * @param {HTMLElement} col The column that was clicked or null to use current sort\r\n   */\r\n  sortData(col = null) {\r\n    this.log(\"sort data\");\r\n\r\n    // Early exit\r\n    if (col && this.getColProp(col.getAttribute(\"field\"), \"noSort\")) {\r\n      this.log(\"sorting prevented because column is not sortable\");\r\n      return;\r\n    }\r\n    if (this.loading) {\r\n      this.log(\"sorting prevented because loading\");\r\n      return;\r\n    }\r\n\r\n    // We clicked on a column, update sort state\r\n    if (col !== null) {\r\n      // Remove active sort if any\r\n      this.root.querySelectorAll(\"thead tr:first-child th\").forEach((th) => {\r\n        if (th.classList.contains(\"dg-selectable\") || th.classList.contains(\"dg-actions\")) {\r\n          return;\r\n        }\r\n        if (th !== col) {\r\n          th.setAttribute(\"aria-sort\", \"none\");\r\n        }\r\n      });\r\n\r\n      // Set three-state col\r\n      if (!col.hasAttribute(\"aria-sort\") || col.getAttribute(\"aria-sort\") === \"none\") {\r\n        col.setAttribute(\"aria-sort\", \"ascending\");\r\n      } else if (col.getAttribute(\"aria-sort\") === \"ascending\") {\r\n        col.setAttribute(\"aria-sort\", \"descending\");\r\n      } else if (col.getAttribute(\"aria-sort\") === \"descending\") {\r\n        col.setAttribute(\"aria-sort\", \"none\");\r\n      }\r\n    } else {\r\n      // Or fetch current sort\r\n      col = this.root.querySelector(\"thead tr.dg-head-columns th[aria-sort$='scending']\");\r\n    }\r\n\r\n    if (this.server) {\r\n      // Reload data with updated sort\r\n      this.loadData().finally(() => {\r\n        this.renderBody();\r\n      });\r\n    } else {\r\n      const sort = col ? col.getAttribute(\"aria-sort\") : \"none\";\r\n      if (sort === \"none\") {\r\n        let stack = [];\r\n\r\n        // Restore order while keeping filters\r\n        this.originalData.some((itemA) => {\r\n          this.data.some((itemB) => {\r\n            if (JSON.stringify(itemA) === JSON.stringify(itemB)) {\r\n              stack.push(itemB);\r\n              return true;\r\n            }\r\n            return false;\r\n          });\r\n          return stack.length === this.data.length;\r\n        });\r\n\r\n        this.data = stack;\r\n      } else {\r\n        const field = col.getAttribute(\"field\");\r\n        this.data.sort((a, b) => {\r\n          if (!isNaN(a[field]) && !isNaN(b[field])) {\r\n            return sort === \"ascending\" ? a[field] - b[field] : b[field] - a[field];\r\n          }\r\n          const valA = sort === \"ascending\" ? a[field].toUpperCase() : b[field].toUpperCase();\r\n          const valB = sort === \"ascending\" ? b[field].toUpperCase() : a[field].toUpperCase();\r\n\r\n          switch (true) {\r\n            case valA > valB:\r\n              return 1;\r\n            case valA < valB:\r\n              return -1;\r\n            case valA === valB:\r\n              return 0;\r\n          }\r\n        });\r\n      }\r\n      this.renderBody();\r\n    }\r\n  }\r\n  fetchData() {\r\n    if (!this.url) {\r\n      return new Promise((resolve, reject) => reject(\"No url set\"));\r\n    }\r\n    let url = new URL(this.url, window.location.href);\r\n    let params = {\r\n      r: Math.ceil(Math.random() * 9999999),\r\n    };\r\n    if (this.server) {\r\n      // 0 based\r\n      params[\"start\"] = this.state.page - 1;\r\n      params[\"length\"] = this.state.perPage;\r\n      params[\"search\"] = this.getFilters();\r\n      params[\"sort\"] = this.getSort() || \"\";\r\n      params[\"sortDir\"] = this.getSortDir();\r\n    }\r\n\r\n    Object.keys(params).forEach((key) => {\r\n      if (Array.isArray(params[key])) {\r\n        Object.keys(params[key]).forEach((k) =>\r\n          url.searchParams.append(isNaN(k) ? `${key}[${k}]` : key, params[key][k])\r\n        );\r\n      } else {\r\n        url.searchParams.append(key, params[key]);\r\n      }\r\n    });\r\n\r\n    return fetch(url).then((response) => {\r\n      return response.json();\r\n    });\r\n  }\r\n  renderHeader() {\r\n    this.log(\"render header\");\r\n    let sortedColumn;\r\n    let thead = this.root.querySelector(\"thead\");\r\n\r\n    this.createColumnHeaders(thead);\r\n    if (this.state.defaultSort) {\r\n      // We can have a default sort even with sort disabled\r\n      sortedColumn = this.root.querySelector(\"thead tr.dg-head-columns th[field='\" + this.state.defaultSort + \"']\");\r\n    }\r\n\r\n    // Create column filters\r\n    this.createColumnFilters(thead);\r\n\r\n    // Configure table\r\n    this.root.querySelector(\"table\").setAttribute(\"aria-colcount\", this.columnsLength(true).toString());\r\n    this.root.querySelector(\"tfoot\").querySelector(\"td\").setAttribute(\"colspan\", this.columnsLength(true).toString());\r\n\r\n    if (sortedColumn) {\r\n      this.sortData(sortedColumn);\r\n    } else {\r\n      this.renderBody();\r\n    }\r\n\r\n    this.root.querySelector(\"tfoot\").style.display = \"\";\r\n    if (this.resizable && plugins.columnResizer) {\r\n      plugins.columnResizer.renderResizer(this, labels.resizeColumn);\r\n    }\r\n  }\r\n  createColumnHeaders(thead) {\r\n    const colMaxWidth = parseInt((thead.offsetWidth / this.columnsLength(true)) * 2);\r\n\r\n    let idx = 0;\r\n    let tr;\r\n\r\n    // Create row\r\n    tr = document.createElement(\"tr\");\r\n    this.headerRow = tr;\r\n    tr.setAttribute(\"role\", \"row\");\r\n    tr.setAttribute(\"aria-rowindex\", 1);\r\n    tr.setAttribute(\"class\", \"dg-head-columns\");\r\n\r\n    let selectableTh = document.createElement(\"th\");\r\n    selectableTh.setAttribute(\"role\", \"columnheader button\");\r\n    selectableTh.setAttribute(\"aria-colindex\", 1);\r\n    selectableTh.classList.add(\"dg-selectable\");\r\n    selectableTh.tabIndex = 0;\r\n\r\n    // Selectable\r\n    if (this.selectable) {\r\n      this.selectAll = document.createElement(\"input\");\r\n      this.selectAll.type = \"checkbox\";\r\n      this.selectAll.classList.add(\"dg-select-all\");\r\n\r\n      this.toggleSelectAll = this.toggleSelectAll.bind(this);\r\n      this.selectAll.addEventListener(\"change\", this.toggleSelectAll);\r\n\r\n      let label = document.createElement(\"label\");\r\n      label.appendChild(this.selectAll);\r\n\r\n      selectableTh.appendChild(label);\r\n    }\r\n    selectableTh.setAttribute(\"width\", 40);\r\n    tr.appendChild(selectableTh);\r\n\r\n    // Create columns\r\n    idx = 0;\r\n    let totalWidth = 0;\r\n    this.state.columns.forEach((column) => {\r\n      if (column.attr) {\r\n        return;\r\n      }\r\n      let th = document.createElement(\"th\");\r\n      th.setAttribute(\"role\", \"columnheader button\");\r\n      th.setAttribute(\"aria-colindex\", idx + this.startIndex());\r\n      th.setAttribute(\"id\", DataGrid.randstr(\"dg-col-\"));\r\n      if (this.state.sort) {\r\n        th.setAttribute(\"aria-sort\", \"none\");\r\n      }\r\n      th.setAttribute(\"field\", column.field);\r\n      th.dataset.minWidth = DataGrid.getTextWidth(column.title, th) + 40;\r\n      DataGrid.applyColumnDefinition(th, column);\r\n      th.tabIndex = 0;\r\n      th.textContent = column.title;\r\n\r\n      if (column.hidden) {\r\n        th.setAttribute(\"hidden\", true);\r\n      }\r\n\r\n      // Autosize small based on first/last row ?\r\n      if (this.autosize && !th.getAttribute(\"width\")) {\r\n        totalWidth += this.autosizeColumn(th, column, th.dataset.minWidth, colMaxWidth);\r\n      }\r\n\r\n      // Reorder columns with drag/drop\r\n      if (this.state.reorder) {\r\n        if (plugins.draggableHeaders) {\r\n          plugins.draggableHeaders.makeHeaderDraggable(th, this);\r\n        } else {\r\n          console.error(\"Plugin not loaded\");\r\n        }\r\n      }\r\n      tr.appendChild(th);\r\n      idx++;\r\n    });\r\n\r\n    // There is too much width, and we want to avoid fixed layout to split remaining amount\r\n    if (totalWidth < thead.offsetWidth) {\r\n      let lastTh = tr.lastChild;\r\n      if (lastTh) {\r\n        lastTh.removeAttribute(\"width\");\r\n      }\r\n    }\r\n\r\n    // Actions\r\n    if (this.state.actions.length) {\r\n      let actionsTh = document.createElement(\"th\");\r\n      actionsTh.setAttribute(\"role\", \"columnheader button\");\r\n      actionsTh.setAttribute(\"aria-colindex\", this.columnsLength(true));\r\n      actionsTh.classList.add(...[\"dg-actions\", this.actionClass]);\r\n      actionsTh.tabIndex = 0;\r\n      tr.appendChild(actionsTh);\r\n    }\r\n\r\n    thead.replaceChild(tr, thead.querySelector(\"tr.dg-head-columns\"));\r\n\r\n    // Context menu\r\n    if (plugins.contextMenu) {\r\n      tr.addEventListener(\"contextmenu\", (ev) => {\r\n        plugins.contextMenu.showContextMenu(ev, this);\r\n      });\r\n    }\r\n\r\n    // Sort col on click\r\n    tr.querySelectorAll(\"[aria-sort]\").forEach((sortableRow) => {\r\n      sortableRow.addEventListener(\"click\", () => this.sortData(sortableRow));\r\n    });\r\n  }\r\n  createColumnFilters(thead) {\r\n    let idx = 0;\r\n    let tr;\r\n\r\n    // Create row for filters\r\n    tr = document.createElement(\"tr\");\r\n    this.filterRow = tr;\r\n    tr.setAttribute(\"role\", \"row\");\r\n    tr.setAttribute(\"aria-rowindex\", 2);\r\n    tr.setAttribute(\"class\", \"dg-head-filters\");\r\n    if (!this.state.filter) {\r\n      tr.setAttribute(\"hidden\", true);\r\n    }\r\n\r\n    // Selectable\r\n    let th = document.createElement(\"th\");\r\n    th.setAttribute(\"role\", \"columnheader button\");\r\n    th.setAttribute(\"aria-colindex\", 1);\r\n    th.classList.add(\"dg-selectable\");\r\n    th.tabIndex = 0;\r\n\r\n    let label = document.createElement(\"label\");\r\n    th.appendChild(label);\r\n\r\n    tr.appendChild(th);\r\n\r\n    this.state.columns.forEach((column) => {\r\n      if (column.attr) {\r\n        return;\r\n      }\r\n      let relatedTh = thead.querySelector(\"tr.dg-head-columns th[aria-colindex='\" + (idx + this.startIndex()) + \"']\");\r\n      let th = document.createElement(\"th\");\r\n      th.setAttribute(\"aria-colindex\", idx + this.startIndex());\r\n\r\n      let input = document.createElement(\"input\");\r\n      input.type = \"text\";\r\n      input.autocomplete = \"off\";\r\n      input.spellcheck = false;\r\n      // Allows binding filter to this column\r\n      input.dataset.name = column.field;\r\n      input.id = DataGrid.randstr(\"dg-filter-\");\r\n      // Don't use aria-label as it triggers autocomplete\r\n      input.setAttribute(\"aria-labelledby\", relatedTh.getAttribute(\"id\"));\r\n      if (!this.state.filter) {\r\n        th.tabIndex = 0;\r\n      } else {\r\n        input.tabIndex = 0;\r\n      }\r\n\r\n      if (column.hidden) {\r\n        th.setAttribute(\"hidden\", true);\r\n      }\r\n\r\n      th.appendChild(input);\r\n      tr.appendChild(th);\r\n      idx++;\r\n    });\r\n\r\n    // Actions\r\n    if (this.state.actions.length) {\r\n      let actionsTh = document.createElement(\"th\");\r\n      actionsTh.setAttribute(\"role\", \"columnheader button\");\r\n      actionsTh.setAttribute(\"aria-colindex\", this.columnsLength(true));\r\n      actionsTh.classList.add(...[\"dg-actions\", this.actionClass]);\r\n      actionsTh.tabIndex = 0;\r\n      tr.appendChild(actionsTh);\r\n    }\r\n\r\n    thead.replaceChild(tr, thead.querySelector(\"tr.dg-head-filters\"));\r\n\r\n    // Filter content on enter\r\n    tr.querySelectorAll(\"input\").forEach((input) => {\r\n      input.addEventListener(\"keypress\", (e) => {\r\n        const key = e.keyCode || e.key;\r\n        if (key === 13 || key === \"Enter\") {\r\n          this.filterData.call(this);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  autosizeColumn(th, column, min, max) {\r\n    let v = this.data[0][column.field].toString();\r\n    let v2 = this.data[this.data.length - 1][column.field].toString();\r\n    if (v2.length > v.length) {\r\n      v = v2;\r\n    }\r\n    let width = 0;\r\n    if (v.length <= 6) {\r\n      width = min;\r\n    } else if (v.length > 50) {\r\n      width = max;\r\n    } else {\r\n      width = DataGrid.getTextWidth(v, th);\r\n    }\r\n    if (width < min) {\r\n      width = min;\r\n    }\r\n    th.setAttribute(\"width\", width);\r\n    return parseInt(width);\r\n  }\r\n  /**\r\n   * Render the data as rows in tbody\r\n   * It will call paginate() at the end\r\n   */\r\n  renderBody() {\r\n    this.log(\"render body\");\r\n    let tr;\r\n    let td;\r\n    let idx;\r\n    let tbody = document.createElement(\"tbody\");\r\n\r\n    // Handles the selectAll checkbox when any other .dg-selectable checkbox is checked.\r\n    this.selectAll &&\r\n      tbody.addEventListener(\"change\", (e) => {\r\n        if (e.target.type != \"checkbox\" || !e.target.closest(\".dg-selectable\")) return;\r\n        const totalCheckboxes = this.root.querySelectorAll(\"tbody .dg-selectable input[type=checkbox]\");\r\n        const totalChecked = Array.from(totalCheckboxes).filter((n) => n.checked);\r\n        this.selectAll.checked = totalChecked.length == totalCheckboxes.length;\r\n      });\r\n\r\n    this.data.forEach((item, i) => {\r\n      tr = document.createElement(\"tr\");\r\n      tr.setAttribute(\"role\", \"row\");\r\n      tr.setAttribute(\"hidden\", true);\r\n      tr.setAttribute(\"aria-rowindex\", i + 1);\r\n      tr.tabIndex = 0;\r\n\r\n      // Selectable\r\n      if (this.selectable) {\r\n        td = document.createElement(\"td\");\r\n        td.setAttribute(\"role\", \"gridcell button\");\r\n        td.setAttribute(\"aria-colindex\", 1);\r\n        td.classList.add(\"dg-selectable\");\r\n\r\n        let selectOne = document.createElement(\"input\");\r\n        selectOne.type = \"checkbox\";\r\n        let label = document.createElement(\"label\");\r\n        label.appendChild(selectOne);\r\n        td.appendChild(label);\r\n\r\n        tr.appendChild(td);\r\n      }\r\n\r\n      // Expandable\r\n      if (this.expand) {\r\n        tr.addEventListener(\"click\", function () {\r\n          this.classList.toggle(\"dg-expanded\");\r\n        });\r\n      }\r\n\r\n      idx = 0;\r\n      this.state.columns.forEach((column) => {\r\n        if (!column) {\r\n          console.log(this.state.columns);\r\n        }\r\n        // It should be applied as an attr of the row\r\n        if (column.attr) {\r\n          tr.setAttribute(column.attr, item[column.field]);\r\n          return;\r\n        }\r\n        td = document.createElement(\"td\");\r\n        td.setAttribute(\"role\", \"gridcell\");\r\n        td.setAttribute(\"aria-colindex\", idx + this.startIndex());\r\n        DataGrid.applyColumnDefinition(td, column);\r\n        td.setAttribute(\"data-name\", column.title);\r\n        td.tabIndex = -1;\r\n\r\n        // Inline editing\r\n        if (column.editable) {\r\n          let input = document.createElement(\"input\");\r\n          input.type = \"text\";\r\n          input.autocomplete = \"off\";\r\n          input.spellcheck = false;\r\n          input.tabIndex = 0;\r\n          input.classList.add(\"dg-editable\");\r\n          input.name = this.getAttribute(\"id\").replace(\"-\", \"_\") + \"[\" + (i + 1) + \"]\" + \"[\" + column.field + \"]\";\r\n          input.value = item[column.field];\r\n          input.dataset.field = column.field;\r\n\r\n          input.addEventListener(\"click\", (ev) => ev.stopPropagation());\r\n          input.addEventListener(\"keypress\", (ev) => {\r\n            if (ev.type === \"keypress\") {\r\n              const key = ev.keyCode || ev.key;\r\n              if (key === 13 || key === \"Enter\") {\r\n                input.blur();\r\n              }\r\n            }\r\n          });\r\n          input.addEventListener(\"blur\", () => {\r\n            // Only fire on update\r\n            if (input.value == item[input.dataset.field]) {\r\n              return;\r\n            }\r\n            // Update underlying data\r\n            item[input.dataset.field] = input.value;\r\n            // Notify\r\n            const event = new CustomEvent(\"edit\", {\r\n              bubbles: true,\r\n              detail: {\r\n                data: item,\r\n                value: input.value,\r\n              },\r\n            });\r\n            this.dispatchEvent(event);\r\n          });\r\n          td.appendChild(input);\r\n        } else {\r\n          td.textContent = item[column.field];\r\n        }\r\n        if (column.hidden) {\r\n          td.setAttribute(\"hidden\", true);\r\n        }\r\n        tr.appendChild(td);\r\n        idx++;\r\n      });\r\n\r\n      // Actions\r\n      if (this.state.actions.length) {\r\n        td = document.createElement(\"td\");\r\n        td.setAttribute(\"role\", \"gridcell\");\r\n        td.setAttribute(\"aria-colindex\", this.columnsLength(true));\r\n        td.classList.add(...[\"dg-actions\", this.actionClass]);\r\n        td.tabIndex = 0;\r\n\r\n        // Add menu toggle\r\n        let actionsToggle = document.createElement(\"button\");\r\n        actionsToggle.classList.add(\"dg-actions-toggle\");\r\n        actionsToggle.innerHTML = \"\u2630\";\r\n        td.appendChild(actionsToggle);\r\n        actionsToggle.addEventListener(\"click\", (ev) => {\r\n          ev.target.parentNode.classList.toggle(\"dg-expand\");\r\n        });\r\n\r\n        this.state.actions.forEach((action) => {\r\n          let button = document.createElement(\"button\");\r\n          if (action.html) {\r\n            button.innerHTML = action.html;\r\n          } else {\r\n            button.innerText = action.title ?? action.name;\r\n          }\r\n          if (action.url) {\r\n            button.type = \"submit\";\r\n            button.formAction = DataGrid.interpolate(action.url, item);\r\n          }\r\n          if (action.class) {\r\n            button.classList.add(action.class);\r\n          }\r\n          const actionHandler = (ev) => {\r\n            ev.stopPropagation();\r\n            if (action.confirm) {\r\n              let c = confirm(labels.areYouSure);\r\n              if (!c) {\r\n                ev.preventDefault();\r\n                return;\r\n              }\r\n            }\r\n            const event = new CustomEvent(\"action\", {\r\n              bubbles: true,\r\n              detail: {\r\n                data: item,\r\n                action: action.name,\r\n              },\r\n            });\r\n            this.dispatchEvent(event);\r\n          };\r\n          button.addEventListener(\"click\", actionHandler);\r\n          td.appendChild(button);\r\n\r\n          // Row action\r\n          if (action.default) {\r\n            tr.classList.add(\"dg-actionable\");\r\n            tr.addEventListener(\"click\", actionHandler);\r\n          }\r\n        });\r\n\r\n        tr.appendChild(td);\r\n      }\r\n\r\n      tbody.appendChild(tr);\r\n    });\r\n\r\n    tbody.setAttribute(\"role\", \"rowgroup\");\r\n\r\n    this.root.querySelector(\"table\").replaceChild(tbody, this.root.querySelector(\"tbody\"));\r\n\r\n    // Let's add a fake row to adjust any missing height, simply multiply by rowHeight the number of missing lines\r\n    tr = document.createElement(\"tr\");\r\n    tr.setAttribute(\"role\", \"row\");\r\n    tr.setAttribute(\"hidden\", true);\r\n    tr.classList.add(\"dg-fake-row\");\r\n    tr.tabIndex = 0;\r\n    tbody.appendChild(tr);\r\n\r\n    this.paginate();\r\n  }\r\n  paginate() {\r\n    this.log(\"paginate\");\r\n\r\n    const total = this.totalRecords();\r\n    const pages = this.totalPages();\r\n\r\n    let index;\r\n    let high = this.state.page * this.state.perPage;\r\n    let low = high - this.state.perPage + 1;\r\n    let tbody = this.root.querySelector(\"tbody\");\r\n    let tfoot = this.root.querySelector(\"tfoot\");\r\n\r\n    if (high > total) {\r\n      high = total;\r\n    }\r\n    if (!total) {\r\n      low = 0;\r\n    }\r\n\r\n    tbody.querySelectorAll(\"tr\").forEach((tr) => {\r\n      if (this.server) {\r\n        tr.removeAttribute(\"hidden\");\r\n        return;\r\n      }\r\n      index = Number(tr.getAttribute(\"aria-rowindex\"));\r\n      if (index > high || index < low) {\r\n        tr.setAttribute(\"hidden\", true);\r\n      } else {\r\n        tr.removeAttribute(\"hidden\");\r\n      }\r\n    });\r\n\r\n    // Store default height and update styles if needed\r\n    if (this.defaultHeight == 0) {\r\n      this.computeDefaultHeight();\r\n    }\r\n\r\n    // On last page, adjust height if using fixed height\r\n    let fakeRow = this.querySelector(\".dg-fake-row\");\r\n    if (this.style.height) {\r\n      if (this.state.page == pages) {\r\n        // Check if we are below set height\r\n        if (parseInt(this.style.height) > this.querySelector(\"tbody\").offsetHeight) {\r\n          const missing = this.state.perPage - (total - (pages - 1) * this.state.perPage);\r\n          fakeRow.setAttribute(\"height\", missing * this.rowHeight);\r\n        } else {\r\n          fakeRow.removeAttribute(\"height\");\r\n        }\r\n      } else {\r\n        fakeRow.removeAttribute(\"height\");\r\n      }\r\n    }\r\n\r\n    // Enable/disable buttons\r\n    if (this.btnFirst) {\r\n      this.btnFirst.disabled = this.state.page <= 1;\r\n      this.btnPrev.disabled = this.state.page <= 1;\r\n      this.btnNext.disabled = this.state.page >= this.state.pages;\r\n      this.btnLast.disabled = this.state.page >= this.state.pages;\r\n    }\r\n    tfoot.querySelector(\".dg-low\").textContent = low.toString();\r\n    tfoot.querySelector(\".dg-high\").textContent = high.toString();\r\n    tfoot.querySelector(\".dg-total\").textContent = this.totalRecords();\r\n  }\r\n  totalPages() {\r\n    return Math.ceil(this.totalRecords() / this.state.perPage);\r\n  }\r\n  totalRecords() {\r\n    if (this.server) {\r\n      return this.meta.filtered;\r\n    }\r\n    return this.data.length.toString();\r\n  }\r\n  /**\r\n   * @param {string|Error} message\r\n   */\r\n  log(message) {\r\n    if (this.debug) {\r\n      console.log(\"[\" + this.getAttribute(\"id\") + \"] \" + message);\r\n    }\r\n  }\r\n}\r\n\r\nexport default DataGrid;\r\n", "\"use strict\";\r\n\r\nimport elementOffset from \"../utils/elementOffset.js\";\r\n\r\nclass DataGridColumnResizer {\r\n  static renderResizer(grid, resizeLabel) {\r\n    const table = grid.root.querySelector(\"table\");\r\n    const cols = grid.root.querySelectorAll(\"thead tr.dg-head-columns th\");\r\n\r\n    cols.forEach((col) => {\r\n      if (col.classList.contains(\"dg-selectable\") || col.classList.contains(\"dg-actions\")) {\r\n        return;\r\n      }\r\n      // Create a resizer element\r\n      const resizer = document.createElement(\"div\");\r\n      resizer.classList.add(\"dg-resizer\");\r\n      resizer.ariaLabel = resizeLabel;\r\n\r\n      // Add a resizer element to the column\r\n      col.appendChild(resizer);\r\n\r\n      // Handle resizing\r\n      let startX = 0;\r\n      let startW = 0;\r\n      let remainingSpace = 0;\r\n      let max = 0;\r\n\r\n      const mouseMoveHandler = (e) => {\r\n        if (e.clientX > max) {\r\n          return;\r\n        }\r\n        const newWidth = startW + (e.clientX - startX);\r\n        if (col.dataset.minWidth && newWidth > col.dataset.minWidth) {\r\n          col.width = newWidth;\r\n        }\r\n      };\r\n\r\n      // When user releases the mouse, remove the existing event listeners\r\n      const mouseUpHandler = () => {\r\n        grid.log(\"resized column\");\r\n\r\n        grid.isResizing = false;\r\n        resizer.classList.remove(\"dg-resizer-active\");\r\n        if (grid.state.reorder) {\r\n          col.draggable = true;\r\n        }\r\n        col.style.overflow = \"hidden\";\r\n\r\n        document.removeEventListener(\"mousemove\", mouseMoveHandler);\r\n        document.removeEventListener(\"mouseup\", mouseUpHandler);\r\n      };\r\n\r\n      // Otherwise it could sort the col\r\n      resizer.addEventListener(\"click\", (e) => {\r\n        e.stopPropagation();\r\n      });\r\n\r\n      resizer.addEventListener(\"mousedown\", (e) => {\r\n        e.stopPropagation();\r\n        grid.isResizing = true;\r\n\r\n        const currentCols = grid.root.querySelectorAll(\".dg-head-columns th\");\r\n        const visibleCols = Array.from(currentCols).filter((col) => {\r\n          return !col.hasAttribute(\"hidden\");\r\n        });\r\n        const columns = Array.from(visibleCols);\r\n        const columnIndex = columns.findIndex((column) => column == e.target.parentNode);\r\n        grid.log(\"resize column\");\r\n\r\n        resizer.classList.add(\"dg-resizer-active\");\r\n\r\n        // Make sure we don't drag it\r\n        if (col.hasAttribute(\"draggable\")) {\r\n          col.removeAttribute(\"draggable\");\r\n        }\r\n\r\n        // Allow overflow when resizing\r\n        col.style.overflow = \"visible\";\r\n\r\n        // Show full column height (-1 to avoid scrollbar)\r\n        resizer.style.height = table.offsetHeight - 1 + \"px\";\r\n\r\n        // Register initial data\r\n        startX = e.clientX;\r\n        startW = col.offsetWidth;\r\n\r\n        remainingSpace = (visibleCols.length - columnIndex) * 30;\r\n        max = elementOffset(e.target).left + grid.offsetWidth - remainingSpace;\r\n\r\n        // Remove width from next columns to allow auto layout\r\n        col.setAttribute(\"width\", startW);\r\n        for (let j = 0; j < visibleCols.length; j++) {\r\n          if (j > columnIndex) {\r\n            cols[j].removeAttribute(\"width\");\r\n          }\r\n        }\r\n\r\n        // Attach handlers\r\n        document.addEventListener(\"mousemove\", mouseMoveHandler);\r\n        document.addEventListener(\"mouseup\", mouseUpHandler);\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nexport default DataGridColumnResizer;\r\n", "\"use strict\";\r\n\r\nclass DataGridContextMenu {\r\n  static showContextMenu(e, grid) {\r\n    e.preventDefault();\r\n\r\n    const target = grid.constructor.getParentNode(e.target, \"THEAD\");\r\n    const menu = grid.root.querySelector(\".dg-menu\");\r\n    const rect = target.getBoundingClientRect();\r\n    let x = e.clientX - rect.left;\r\n    const y = e.clientY - rect.top;\r\n\r\n    menu.style.top = `${y}px`;\r\n    menu.style.left = `${x}px`;\r\n\r\n    menu.removeAttribute(\"hidden\");\r\n    if (x + 150 > rect.width) {\r\n      x -= menu.offsetWidth;\r\n      menu.style.left = `${x}px`;\r\n    }\r\n\r\n    const documentClickHandler = (e) => {\r\n      if (!menu.contains(e.target)) {\r\n        menu.setAttribute(\"hidden\", true);\r\n        document.removeEventListener(\"click\", documentClickHandler);\r\n      }\r\n    };\r\n    document.addEventListener(\"click\", documentClickHandler);\r\n  }\r\n\r\n  static createMenu(grid) {\r\n    const menu = grid.root.querySelector(\".dg-menu\");\r\n    grid.state.columns.forEach((col) => {\r\n      if (col.attr) {\r\n        return;\r\n      }\r\n      const field = col.field;\r\n      const li = document.createElement(\"li\");\r\n      const label = document.createElement(\"label\");\r\n      const checkbox = document.createElement(\"input\");\r\n      checkbox.setAttribute(\"type\", \"checkbox\");\r\n      if (!col.hidden) {\r\n        checkbox.checked = true;\r\n      }\r\n      checkbox.addEventListener(\"change\", (e) => {\r\n        e.target.checked ? this.showColumn(field, e.target, grid) : this.hideColumn(field, e.target, grid);\r\n      });\r\n\r\n      const text = document.createTextNode(col.title);\r\n\r\n      label.appendChild(checkbox);\r\n      label.appendChild(text);\r\n\r\n      li.appendChild(label);\r\n      menu.appendChild(li);\r\n    });\r\n  }\r\n  static showColumn(field, checkbox = null, grid) {\r\n    if (checkbox) {\r\n      checkbox.checked = true;\r\n    }\r\n    grid.setColProp(field, \"hidden\", false);\r\n    grid.renderHeader();\r\n  }\r\n  static hideColumn(field, checkbox = null, grid) {\r\n    const numHiddenCols = grid.state.columns.filter((th) => {\r\n      return th.hidden === true;\r\n    }).length;\r\n\r\n    if (numHiddenCols === grid.columnsLength() - 1) {\r\n      // Restore checkbox value\r\n      if (checkbox) {\r\n        checkbox.checked = true;\r\n      }\r\n      return;\r\n    }\r\n    grid.setColProp(field, \"hidden\", true);\r\n    grid.renderHeader();\r\n  }\r\n}\r\n\r\nexport default DataGridContextMenu;\r\n", "\"use strict\";\r\n\r\nclass DataGridDraggableHeaders {\r\n  static makeHeaderDraggable(th, grid) {\r\n    th.draggable = true;\r\n    th.addEventListener(\"dragstart\", (e) => {\r\n      if (grid.isResizing && e.preventDefault) {\r\n        e.preventDefault();\r\n        return;\r\n      }\r\n      grid.log(\"reorder col\");\r\n      e.dataTransfer.effectAllowed = \"move\";\r\n      e.dataTransfer.setData(\"text/plain\", e.target.getAttribute(\"aria-colindex\"));\r\n    });\r\n    th.addEventListener(\"dragover\", (e) => {\r\n      if (e.preventDefault) {\r\n        e.preventDefault();\r\n      }\r\n      e.dataTransfer.dropEffect = \"move\";\r\n      return false;\r\n    });\r\n    th.addEventListener(\"drop\", (e) => {\r\n      if (e.stopPropagation) {\r\n        e.stopPropagation();\r\n      }\r\n      const target = grid.constructor.getParentNode(e.target, \"TH\");\r\n      const index = e.dataTransfer.getData(\"text/plain\");\r\n      const targetIndex = target.getAttribute(\"aria-colindex\");\r\n\r\n      if (index === targetIndex) {\r\n        grid.log(\"reordered col stayed the same\");\r\n        return;\r\n      }\r\n      grid.log(\"reordered col from \" + index + \" to \" + targetIndex);\r\n\r\n      const offset = grid.startIndex();\r\n      const tmp = grid.state.columns[index - offset];\r\n      grid.state.columns[index - offset] = grid.columns[targetIndex - offset];\r\n      grid.state.columns[targetIndex - offset] = tmp;\r\n\r\n      const swapNodes = (selector, el1) => {\r\n        const rowIndex = el1.parentNode.getAttribute(\"aria-rowindex\");\r\n        const el2 = grid.root.querySelector(selector + \" tr[aria-rowindex='\" + rowIndex + \"'] [aria-colindex='\" + targetIndex + \"']\");\r\n        el1.setAttribute(\"aria-colindex\", targetIndex);\r\n        el2.setAttribute(\"aria-colindex\", index);\r\n        const newNode = document.createElement(\"th\");\r\n        el1.parentNode.insertBefore(newNode, el1);\r\n        el2.parentNode.replaceChild(el1, el2);\r\n        newNode.parentNode.replaceChild(el2, newNode);\r\n      };\r\n\r\n      // Swap all rows in header and body\r\n      grid.root.querySelectorAll(\"thead th[aria-colindex='\" + index + \"']\").forEach((el1) => {\r\n        swapNodes(\"thead\", el1);\r\n      });\r\n      grid.root.querySelectorAll('tbody td[aria-colindex=\"' + index + '\"]').forEach((el1) => {\r\n        swapNodes(\"tbody\", el1);\r\n      });\r\n\r\n      // Updates the columns\r\n      grid.state.columns = Array.from(\r\n        grid.root.querySelectorAll(\"thead tr.dg-head-columns th[field]\")\r\n      ).map((th) =>\r\n        grid.state.columns.find((c) => c.field == th.getAttribute(\"field\"))\r\n      );\r\n\r\n      return false;\r\n    });\r\n  }\r\n}\r\n\r\nexport default DataGridDraggableHeaders;\r\n", "import DataGrid from \"./src/data-grid.js\";\r\nimport DataGridColumnResizer from \"./src/plugins/column-resizer.js\";\r\nimport DataGridContextMenu from \"./src/plugins/context-menu.js\";\r\nimport DataGridDraggableHeaders from \"./src/plugins/draggable-headers.js\";\r\n\r\nDataGrid.registerPlugin(\"columnResizer\", DataGridColumnResizer);\r\nDataGrid.registerPlugin(\"contextMenu\", DataGridContextMenu);\r\nDataGrid.registerPlugin(\"draggableHeaders\", DataGridDraggableHeaders);\r\n\r\ncustomElements.define(\"data-grid\", DataGrid);\r\n\r\nexport default DataGrid;\r\n"],
  "mappings": "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",
  "names": ["elementOffset", "el", "rect", "scrollLeft", "scrollTop", "plugins", "labels", "template", "DataGrid", "options", "name", "inst", "str", "data", "$1", "$2", "el", "type", "prop", "parent", "text", "styles", "fontWeight", "fontSize", "fontFamily", "context", "metrics", "value", "label", "checked", "opt", "prefix", "v", "definition", "columns", "cols", "key", "col", "item", "attributeName", "oldValue", "newValue", "elementOffset", "val", "cb", "e", "xDiff", "yDiff", "field", "visibleOnly", "len", "tr", "row", "th", "fieldName", "i", "selectedData", "resolve", "response", "err", "event", "filters", "input", "sort", "stack", "itemA", "itemB", "a", "b", "valA", "valB", "reject", "url", "params", "k", "sortedColumn", "thead", "colMaxWidth", "idx", "selectableTh", "totalWidth", "column", "lastTh", "actionsTh", "ev", "sortableRow", "relatedTh", "min", "max", "v2", "width", "td", "tbody", "totalCheckboxes", "totalChecked", "n", "selectOne", "actionsToggle", "action", "button", "actionHandler", "total", "pages", "index", "high", "low", "tfoot", "fakeRow", "missing", "message", "data_grid_default", "DataGridColumnResizer", "grid", "resizeLabel", "table", "cols", "col", "resizer", "startX", "startW", "remainingSpace", "max", "mouseMoveHandler", "e", "newWidth", "mouseUpHandler", "currentCols", "visibleCols", "columnIndex", "column", "elementOffset", "j", "column_resizer_default", "DataGridContextMenu", "e", "grid", "target", "menu", "rect", "x", "y", "documentClickHandler", "col", "field", "li", "label", "checkbox", "text", "th", "context_menu_default", "DataGridDraggableHeaders", "th", "grid", "e", "target", "index", "targetIndex", "offset", "tmp", "swapNodes", "selector", "el1", "rowIndex", "el2", "newNode", "c", "draggable_headers_default", "data_grid_default", "column_resizer_default", "context_menu_default", "draggable_headers_default"]
}
