{
  "version": 3,
  "sources": ["../src/utils/camelize.js", "../src/utils/normalizeData.js", "../src/utils/shortcuts.js", "../src/core/base-element.js", "../src/utils/addSelectOption.js", "../src/utils/appendParamsToUrl.js", "../src/utils/convertArray.js", "../src/utils/elementOffset.js", "../src/utils/interpolate.js", "../src/utils/getTextWidth.js", "../src/utils/randstr.js", "../src/data-grid.js", "../src/core/base-plugin.js", "../src/plugins/column-resizer.js", "../src/utils/getParentElement.js", "../src/plugins/context-menu.js", "../src/plugins/draggable-headers.js", "../src/plugins/touch-support.js", "../src/plugins/selectable-rows.js", "../src/plugins/fixed-height.js", "../src/plugins/autosize-column.js", "../src/utils/debounce.js", "../src/plugins/responsive-grid.js", "../src/plugins/row-actions.js", "../src/plugins/editable-column.js", "../src/plugins/spinner-support.js", "../data-grid.js"],
  "sourcesContent": ["/**\r\n * @param {String} str\r\n * @returns {String}\r\n */\r\nexport default function camelize(str) {\r\n  return str.toLowerCase().replace(/[^a-zA-Z0-9]+(.)/g, (m, chr) => chr.toUpperCase());\r\n}\r\n", "/**\r\n * Parse data attribute and return properly typed data\r\n * @param {String} v\r\n * @returns {any}\r\n */\r\nexport default function normalizeData(v) {\r\n  // Bool\r\n  if (v === \"true\") {\r\n    return true;\r\n  }\r\n  if (v === \"false\") {\r\n    return false;\r\n  }\r\n  // Null or empty\r\n  if (v === \"\" || v === \"null\") {\r\n    return null;\r\n  }\r\n  // Numeric attributes\r\n  if (v === Number(v).toString()) {\r\n    return Number(v);\r\n  }\r\n  // Only attempt json parsing for array or objects\r\n  if (v && [\"[\", \"{\"].includes(v.substring(0, 1))) {\r\n    try {\r\n      // In case we have only single quoted values, like ['one', 'two', 'three']\r\n      if (v.indexOf('\"') === -1) {\r\n        v = v.replace(/'/g, '\"');\r\n      }\r\n      return JSON.parse(decodeURIComponent(v));\r\n    } catch {\r\n      console.error(\"Failed to parse \" + v);\r\n      return {};\r\n    }\r\n  }\r\n  return v;\r\n}\r\n", "/**\r\n * @typedef FlexibleHTMLProps\r\n * @property {boolean} [checked] (HTMLInputElement)\r\n * @property {string} [value] (HTMLInputElement)\r\n * @property {number} [rowHeight] (HTMLTableRowElement)\r\n *\r\n * A flexible type HTMLElement type that does not require using instanceof all over the place\r\n * Make sure that your selector is indeed valid\r\n * Only includes most commons props\r\n * @typedef {HTMLElement & FlexibleHTMLProps} FlexibleHTMLElement\r\n */\r\n\r\n/**\r\n * Keep this as reference for easy documentation\r\n * @typedef {HTMLElement&HTMLInputElement&HTMLTableRowElement} MixedHTMLElement\r\n */\r\n\r\n/**\r\n * @typedef FlexibleEventProps\r\n * @property {FlexibleHTMLElement} target\r\n * @property {FlexibleHTMLElement} currentTarget\r\n * @property {DataTransfer} [dataTransfer] (DragEvent)\r\n * @property {number} [clientX] (MouseEvent)\r\n * @property {number} [clientY] (MouseEvent)\r\n *\r\n * @typedef {Event & FlexibleEventProps} FlexibleEvent\r\n */\r\n\r\n/**\r\n * Keep this as reference for easy documentation\r\n * @typedef {Event&MouseEvent&InputEvent&DragEvent&FocusEvent&KeyboardEvent&PointerEvent} MixedEvent\r\n */\r\n\r\n/**\r\n * @callback FlexibleListener\r\n * @param {FlexibleEvent} event\r\n */\r\n\r\nclass FlexibleEventListenerObject {\r\n  /**\r\n   * @param {FlexibleEvent} e\r\n   */\r\n  handleEvent(e) {}\r\n}\r\n\r\nconst supportedPassiveTypes = [\r\n  \"scroll\",\r\n  \"wheel\",\r\n  \"touchstart\",\r\n  \"touchmove\",\r\n  \"touchenter\",\r\n  \"touchend\",\r\n  \"touchleave\",\r\n  \"mouseout\",\r\n  \"mouseleave\",\r\n  \"mouseup\",\r\n  \"mousedown\",\r\n  \"mousemove\",\r\n  \"mouseenter\",\r\n  \"mousewheel\",\r\n  \"mouseover\",\r\n];\r\n\r\n/**\r\n * Automatically set passive options based on type\r\n * @param {string} type\r\n * @returns {AddEventListenerOptions}\r\n */\r\nfunction passiveOpts(type) {\r\n  if (supportedPassiveTypes.includes(type)) {\r\n    return { passive: true };\r\n  }\r\n  return {};\r\n}\r\n\r\n/**\r\n * @param {Element} el\r\n * @param {String} name\r\n * @returns {any}\r\n */\r\nexport function getAttribute(el, name) {\r\n  return el.getAttribute(name);\r\n}\r\n\r\n/**\r\n * @param {Element} el\r\n * @param {String} name\r\n * @returns {Boolean}\r\n */\r\nexport function hasAttribute(el, name) {\r\n  return el.hasAttribute(name);\r\n}\r\n\r\n/**\r\n * @param {Element} el\r\n * @param {String} name\r\n * @param {any} v\r\n * @param {Boolean} check Prevent setting if attribute is already there\r\n */\r\nexport function setAttribute(el, name, v = \"\", check = false) {\r\n  if (check && hasAttribute(el, name)) return;\r\n  el.setAttribute(name, \"\" + v);\r\n}\r\n\r\n/**\r\n * @param {Element} el\r\n * @param {String} name\r\n */\r\nexport function removeAttribute(el, name) {\r\n  if (hasAttribute(el, name)) {\r\n    el.removeAttribute(name);\r\n  }\r\n}\r\n\r\n/**\r\n * @param {EventTarget} el\r\n * @param {String} type\r\n * @param {EventListenerObject|FlexibleListener} listener\r\n */\r\nexport function on(el, type, listener) {\r\n  el.addEventListener(type, listener, passiveOpts(type));\r\n}\r\n\r\n/**\r\n * @param {EventTarget} el\r\n * @param {String} type\r\n * @param {EventListenerObject|FlexibleListener} listener\r\n */\r\nexport function off(el, type, listener) {\r\n  el.removeEventListener(type, listener, passiveOpts(type));\r\n}\r\n\r\n/**\r\n * @param {EventTarget} el\r\n * @param {String} type\r\n * @param {EventListenerObject|FlexibleListener} listener\r\n */\r\nexport function one(el, type, listener) {\r\n  el.addEventListener(type, listener, {\r\n    once: true,\r\n  });\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} el\r\n * @param {String} name\r\n * @param {any} data\r\n * @param {Boolean} bubbles\r\n */\r\nexport function dispatch(el, name, data = {}, bubbles = false) {\r\n  let opts = {};\r\n  if (bubbles) {\r\n    opts.bubbles = true;\r\n  }\r\n  if (data) {\r\n    opts.detail = data;\r\n  }\r\n  el.dispatchEvent(new CustomEvent(name, opts));\r\n}\r\n\r\n/**\r\n * @param {Element} el\r\n * @param {String} name\r\n * @returns {Boolean}\r\n */\r\nexport function hasClass(el, name) {\r\n  return el.classList.contains(name);\r\n}\r\n\r\n/**\r\n * @param {Element} el\r\n * @param {String} name\r\n */\r\nexport function addClass(el, name) {\r\n  el.classList.add(...name.split(\" \"));\r\n}\r\n\r\n/**\r\n * @param {Element} el\r\n * @param {String} name\r\n */\r\nexport function removeClass(el, name) {\r\n  el.classList.remove(...name.split(\" \"));\r\n}\r\n\r\n/**\r\n * @param {Element} el\r\n * @param {String} name\r\n */\r\nexport function toggleClass(el, name) {\r\n  el.classList.toggle(name);\r\n}\r\n\r\n/**\r\n * @param {String|HTMLElement} selector\r\n * @param {HTMLElement|Document} base\r\n * @returns {FlexibleHTMLElement|null}\r\n */\r\nexport function $(selector, base = document) {\r\n  if (selector instanceof HTMLElement) {\r\n    return selector;\r\n  }\r\n  return base.querySelector(selector);\r\n}\r\n\r\n/**\r\n * @param {String} selector\r\n * @param {Element|Document} base\r\n * @returns {Array<FlexibleHTMLElement>}\r\n */\r\nexport function $$(selector, base = document) {\r\n  return Array.from(base.querySelectorAll(selector));\r\n}\r\n\r\n/**\r\n * Easily retrieve untyped element\r\n * For actual type, prefer use of el.querySelector\r\n * @param {HTMLElement} el\r\n * @param {String|HTMLElement} selector\r\n * @returns {FlexibleHTMLElement}\r\n */\r\nexport function find(el, selector) {\r\n  return $(selector, el);\r\n}\r\n\r\n/**\r\n * Easily retrieve untyped elements\r\n * For actual type, prefer use of el.querySelectorAll\r\n * @param {Element} el\r\n * @param {String} selector\r\n * @returns {Array<FlexibleHTMLElement>}\r\n */\r\nexport function findAll(el, selector) {\r\n  return $$(selector, el);\r\n}\r\n\r\n/**\r\n * @param {*} el\r\n * @returns {FlexibleHTMLElement}\r\n */\r\nexport function el(el) {\r\n  return el;\r\n}\r\n\r\n/**\r\n * @template {keyof HTMLElementTagNameMap} K\r\n * @param {K} tagName\r\n * @param {HTMLElement} parent\r\n * @returns {HTMLElementTagNameMap[K]}\r\n */\r\nexport function ce(tagName, parent = null) {\r\n  const el = document.createElement(tagName);\r\n  if (parent) {\r\n    parent.appendChild(el);\r\n  }\r\n  return el;\r\n}\r\n\r\n/**\r\n * @param {HTMLElement} newNode\r\n * @param {HTMLElement} existingNode\r\n */\r\nexport function insertAfter(newNode, existingNode) {\r\n  existingNode.parentNode.insertBefore(newNode, existingNode.nextSibling);\r\n}\r\n", "import camelize from \"../utils/camelize.js\";\r\nimport normalizeData from \"../utils/normalizeData.js\";\r\nimport { dispatch, getAttribute, setAttribute } from \"../utils/shortcuts.js\";\r\n\r\n/**\r\n * Base element that does not contain any specific logic\r\n * related to this project but makes HTMLElemnt usable\r\n */\r\nclass BaseElement extends HTMLElement {\r\n  /**\r\n   * @param {Object} options\r\n   */\r\n  constructor(options = {}) {\r\n    super();\r\n    this.options = Object.assign({}, this.defaultOptions, this.normalizedDataset, options);\r\n\r\n    this.log(\"constructor\");\r\n\r\n    this.fireEvents = true;\r\n    this._ready();\r\n\r\n    this.log(\"ready\");\r\n  }\r\n\r\n  get defaultOptions() {\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * @param {String} opt\r\n   * @returns {any}\r\n   */\r\n  getOption(opt) {\r\n    return this.options[opt];\r\n  }\r\n\r\n  /**\r\n   * @param {String} opt\r\n   * @param {any} v\r\n   */\r\n  setOption(opt, v) {\r\n    setAttribute(this, `data-${opt}`, v);\r\n  }\r\n\r\n  /**\r\n   * @param {String} opt\r\n   */\r\n  toggleOption(opt) {\r\n    setAttribute(this, `data-${opt}`, !this.getOption(opt));\r\n  }\r\n\r\n  get normalizedDataset() {\r\n    let jsonConfig = this.dataset.config ? JSON.parse(this.dataset.config) : {};\r\n    let data = { ...this.dataset };\r\n    for (var key in data) {\r\n      if (key == \"config\") {\r\n        continue;\r\n      }\r\n      data[key] = normalizeData(data[key]);\r\n    }\r\n    // Once normalized, merge into json config\r\n    Object.assign(data, jsonConfig);\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * @returns {String}\r\n   */\r\n  static template() {\r\n    return \"\";\r\n  }\r\n\r\n  /**\r\n   * This is called at the end of constructor. Extend in subclass if needed.\r\n   */\r\n  _ready() {}\r\n\r\n  /**\r\n   * @param {String|Error} message\r\n   */\r\n  log(message) {\r\n    if (this.options.debug) {\r\n      console.log(\"[\" + getAttribute(this, \"id\") + \"] \" + message);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle events within the component\r\n   * @link https://gist.github.com/WebReflection/ec9f6687842aa385477c4afca625bbf4#handling-events\r\n   * @param {Event} event\r\n   */\r\n  handleEvent(event) {\r\n    if (this[`on${event.type}`]) {\r\n      this[`on${event.type}`](event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This is called when connected. Extend in subclass if needed.\r\n   */\r\n  _connected() {}\r\n\r\n  connectedCallback() {\r\n    // ensure whenDefined callbacks run first\r\n    setTimeout(() => {\r\n      this.log(\"connectedCallback\");\r\n\r\n      // Append only when labels had the opportunity to be set\r\n      // Don't use shadow dom as it makes theming super hard\r\n      const template = document.createElement(\"template\");\r\n      // @ts-ignore\r\n      template.innerHTML = this.constructor.template();\r\n      this.appendChild(template.content.cloneNode(true));\r\n\r\n      this._connected();\r\n      // @link https://gist.github.com/WebReflection/ec9f6687842aa385477c4afca625bbf4#life-cycle-events\r\n      dispatch(this, \"connected\");\r\n    }, 0);\r\n  }\r\n\r\n  /**\r\n   * This is called when disconnected. Extend in subclass if needed.\r\n   */\r\n  _disconnected() {}\r\n\r\n  disconnectedCallback() {\r\n    this.log(\"disconnectedCallback\");\r\n    this._disconnected();\r\n    // @link https://gist.github.com/WebReflection/ec9f6687842aa385477c4afca625bbf4#life-cycle-events\r\n    dispatch(this, \"disconnected\");\r\n  }\r\n\r\n  /**\r\n   * @link https://gist.github.com/WebReflection/ec9f6687842aa385477c4afca625bbf4#a-props-like-accessor\r\n   * @returns {Object}\r\n   */\r\n  get transformAttributes() {\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * This is only meant to work with data attributes\r\n   * This allows us to have properties that reflect automatically in the component\r\n   * @link https://gist.github.com/WebReflection/ec9f6687842aa385477c4afca625bbf4#reflected-dataset-attributes\r\n   * @param {String} attributeName\r\n   * @param {String} oldValue\r\n   * @param {String} newValue\r\n   */\r\n  attributeChangedCallback(attributeName, oldValue, newValue) {\r\n    // It didn't change\r\n    if (oldValue === newValue) {\r\n      return;\r\n    }\r\n\r\n    this.log(\"attributeChangedCallback: \" + attributeName);\r\n\r\n    let isOption = false;\r\n    const transformer = this.transformAttributes[attributeName] ?? normalizeData;\r\n\r\n    // Data attributes are mapped to options while other attributes are mapped as properties\r\n    if (attributeName.indexOf(\"data-\") === 0) {\r\n      attributeName = attributeName.slice(5);\r\n      isOption = true;\r\n    }\r\n    attributeName = camelize(attributeName);\r\n    if (isOption) {\r\n      this.options[attributeName] = transformer(newValue);\r\n    } else {\r\n      this[attributeName] = transformer(newValue);\r\n    }\r\n\r\n    // Fire internal event\r\n    if (this.fireEvents && this[`${attributeName}Changed`]) {\r\n      this[`${attributeName}Changed`]();\r\n    }\r\n  }\r\n}\r\n\r\nexport default BaseElement;\r\n", "/**\r\n * @param {HTMLSelectElement} el\r\n * @param {String} value\r\n * @param {String} label\r\n * @param {Boolean} checked\r\n */\r\nexport default function addSelectOption(el, value, label, checked = false) {\r\n  let opt = document.createElement(\"option\");\r\n  opt.value = \"\" + value;\r\n  if (checked) {\r\n    opt.selected = true;\r\n  }\r\n  opt.label = label;\r\n  el.appendChild(opt);\r\n}\r\n", "/**\r\n * @param {URL} url\r\n * @param {Object} params\r\n */\r\nexport default function appendParamsToUrl(url, params = {}) {\r\n  Object.keys(params).forEach((key) => {\r\n    if (Array.isArray(params[key])) {\r\n      // @ts-ignore\r\n      Object.keys(params[key]).forEach((k) => url.searchParams.append(isNaN(k) ? `${key}[${k}]` : key, params[key][k]));\r\n    } else {\r\n      url.searchParams.append(key, params[key]);\r\n    }\r\n  });\r\n}\r\n", "/**\r\n * Force value as arrays\r\n * @param {String|Array} v\r\n * @returns {Array}\r\n */\r\nexport default function convertArray(v) {\r\n  if (typeof v === \"string\") {\r\n    if (v[0] === \"[\") {\r\n      // \"['my', 'value']\" would fail as a json\r\n      if (v.indexOf('\"') === -1) {\r\n        v = v.replace(/'/g, '\"');\r\n      }\r\n      return JSON.parse(v);\r\n    }\r\n\r\n    return v.split(\",\");\r\n  }\r\n  if (!Array.isArray(v)) {\r\n    console.error(\"Invalid array\", v);\r\n    return [];\r\n  }\r\n  return v;\r\n}\r\n", "/**\r\n * @param {HTMLElement} el\r\n * @returns {Object}\r\n */\r\nexport default function elementOffset(el) {\r\n  var rect = el.getBoundingClientRect(),\r\n    scrollLeft = window.pageXOffset || document.documentElement.scrollLeft,\r\n    scrollTop = window.pageYOffset || document.documentElement.scrollTop;\r\n  return { top: rect.top + scrollTop, left: rect.left + scrollLeft };\r\n}\r\n", "/**\r\n * Replace element within {} by their data value\r\n * @param {String} str\r\n * @param {Object} data\r\n * @returns {String}\r\n */\r\nexport default function interpolate(str, data) {\r\n  return str.replace(/\\{([^}]+)?\\}/g, function ($1, $2) {\r\n    return data[$2];\r\n  });\r\n}\r\n", "/**\r\n * Uses canvas.measureText to compute and return the width of the given text of given font in pixels.\r\n * Getting computed styles only works for dom that are added in the dom\r\n * @see https://stackoverflow.com/questions/118241/calculate-text-width-with-javascript/21015393#21015393\r\n * @param {String} text The text to be rendered.\r\n * @param {Element} el Target element (defaults to body)\r\n * @param {Boolean} withPadding Include padding on element\r\n * @returns {Number}\r\n */\r\nexport default function getTextWidth(text, el = document.body, withPadding = false) {\r\n  if (!el) {\r\n    el = document.createElement(\"div\");\r\n  }\r\n  const styles = window.getComputedStyle(el);\r\n  const fontWeight = styles.getPropertyValue(\"font-weight\") || \"normal\";\r\n  const fontSize = styles.getPropertyValue(\"font-size\") || \"1rem\";\r\n  const fontFamily = styles.getPropertyValue(\"font-family\") || \"Arial\";\r\n\r\n  let padding = 0;\r\n  if (withPadding) {\r\n    const paddingLeft = styles.getPropertyValue(\"padding-left\") || \"0\";\r\n    const paddingRight = styles.getPropertyValue(\"padding-right\") || \"0\";\r\n    padding = parseInt(paddingLeft) + parseInt(paddingRight);\r\n  }\r\n\r\n  // re-use canvas object for better performance\r\n  // @ts-ignore\r\n  const canvas = getTextWidth.canvas || (getTextWidth.canvas = document.createElement(\"canvas\"));\r\n  const context = canvas.getContext(\"2d\");\r\n  context.font = `${fontWeight} ${fontSize} ${fontFamily}`;\r\n  const metrics = context.measureText(text);\r\n  return parseInt(metrics.width) + padding;\r\n}\r\n", "/**\r\n * @param {String} prefix\r\n * @returns {String}\r\n */\r\nexport default function randstr(prefix) {\r\n  return Math.random()\r\n    .toString(36)\r\n    .replace(\"0.\", prefix || \"\");\r\n}\r\n", "/**\n * Data Grid Web component\n *\n * Credits for inspiration\n * @link https://github.com/riverside/zino-grid\n */\n\"use strict\";\n\nimport BaseElement from \"./core/base-element.js\";\nimport addSelectOption from \"./utils/addSelectOption.js\";\nimport appendParamsToUrl from \"./utils/appendParamsToUrl.js\";\nimport camelize from \"./utils/camelize.js\";\nimport convertArray from \"./utils/convertArray.js\";\nimport elementOffset from \"./utils/elementOffset.js\";\nimport interpolate from \"./utils/interpolate.js\";\nimport getTextWidth from \"./utils/getTextWidth.js\";\nimport randstr from \"./utils/randstr.js\";\nimport {\n  dispatch,\n  find,\n  findAll,\n  hasClass,\n  removeAttribute,\n  getAttribute,\n  setAttribute,\n  addClass,\n  toggleClass,\n  on,\n  ce,\n} from \"./utils/shortcuts.js\";\n\n/**\n * Column definition\n * @typedef Column\n * @property {String} field - the key in the data\n * @property {String} title - the title to display in the header (defaults to \"field\" if not set)\n * @property {Number} [width] - the width of the column (auto otherwise)\n * @property {String} [class] - class to set on the column (target body or header with th.class or td.class)\n * @property {String} [attr] - don't render the column and set a matching attribute on the row with the value of the field\n * @property {Boolean} [hidden] - hide the column\n * @property {Boolean} [noSort] - allow disabling sort for a given column\n * @property {String | Function} [format] - custom data formatting\n * @property {String} [defaultFormatValue] - default value to use for formatting\n * @property {String} [transform] - custom value transformation\n * @property {Boolean} [editable] - replace with input (EditableColumn module)\n * @property {String} [editableType] - type of input (EditableColumn module)\n * @property {Number} [responsive] - the higher the value, the sooner it will be hidden, disable with 0 (ResponsiveGrid module)\n * @property {Boolean} [responsiveHidden] - hidden through responsive module (ResponsiveGrid module)\n * @property {String} [filterType] - defines a filter field type (\"text\" or \"select\" - defaults to \"text\")\n * @property {Array} [filterList] - defines a custom array to populate a filter select field in the format of [{value: \"\", text: \"\"},...]. When defined, it overrides the default behaviour where the filter select elements are populated by the unique values from the corresponding column records.\n * @property {Object} [firstFilterOption] - defines an object for the first option element of the filter select field. defaults to {value: \"\", text: \"\"}\n */\n\n/**\n * Row action\n * @typedef Action\n * @property {String} title - the title of the button\n * @property {String} name - the name of the action\n * @property {String} class - the class for the button\n * @property {String} url - link for the action\n * @property {String} html - custom button data\n * @property {Boolean} [confirm] - needs confirmation\n * @property {Boolean} default - is the default row action\n */\n\n/** @typedef {import('./plugins/autosize-column').default} AutosizeColumn */\n/** @typedef {import('./plugins/column-resizer').default} ColumnResizer */\n/** @typedef {import('./plugins/context-menu').default} ContextMenu */\n/** @typedef {import('./plugins/draggable-headers').default} DraggableHeaders */\n/** @typedef {import('./plugins/editable-column').default} EditableColumn */\n/** @typedef {import('./plugins/fixed-height').default} FixedHeight */\n/** @typedef {import('./plugins/responsive-grid').default} ResponsiveGrid */\n/** @typedef {import('./plugins/row-actions').default} RowActions */\n/** @typedef {import('./plugins/selectable-rows').default} SelectableRows */\n/** @typedef {import('./plugins/touch-support').default} TouchSupport */\n/** @typedef {import('./plugins/spinner-support').default} SpinnerSupport */\n\n/**\n * These plugins are all optional\n * @typedef {Object} Plugins\n * @property {ColumnResizer} [ColumnResizer] resize handlers in the headers\n * @property {ContextMenu} [ContextMenu] menu to show/hide columns\n * @property {DraggableHeaders} [DraggableHeaders] draggable headers columns\n * @property {EditableColumn} [EditableColumn] draggable headers columns\n * @property {TouchSupport} [TouchSupport] touch swipe\n * @property {SelectableRows} [SelectableRows] create a column with checkboxes to select rows\n * @property {FixedHeight} [FixedHeight] allows having fixed height tables\n * @property {AutosizeColumn} [AutosizeColumn] compute ideal width based on column content\n * @property {ResponsiveGrid} [ResponsiveGrid] hide/show column on the fly\n * @property {RowActions} [RowActions] add action on rows\n * @property {SpinnerSupport} [SpinnerSupport] inserts a spinning icon element to indicate grid loading.\n */\n\n/**\n * Parameters to pass along or receive from the server\n * @typedef ServerParams\n * @property {String} serverParams.start\n * @property {String} serverParams.length\n * @property {String} serverParams.search\n * @property {String} serverParams.sort\n * @property {String} serverParams.sortDir\n * @property {String} serverParams.dataKey\n * @property {String} serverParams.metaKey\n * @property {String} serverParams.metaTotalKey\n * @property {String} serverParams.metaFilteredKey\n * @property {String} serverParams.optionsKey\n * @property {String} serverParams.paramsKey\n */\n\n/**\n * Available data grid options, plugins included\n * @typedef Options\n * @property {?String} id Custom id for the grid\n * @property {?String} url An URL with data to display in JSON format\n * @property {Boolean} debug Log actions in DevTools console\n * @property {Boolean} filter Allows a filtering functionality\n * @property {Boolean} sort Allows a sort by column functionality\n * @property {String} defaultSort Default sort field if sorting is enabled\n * @property {Boolean} server Is a server side powered grid\n * @property {ServerParams} serverParams Describe keys passed to the server backend\n * @property {String} dir Dir\n * @property {Array} perPageValues Available per page options\n * @property {Boolean} hidePerPage Hides the page size select element\n * @property {Column[]} columns Available columns\n * @property {Number} defaultPage Starting page\n * @property {Number} perPage Number of records displayed per page (page size)\n * @property {Boolean} expand  Allow cell content to spawn over multiple lines\n * @property {Action[]} actions Row actions (RowActions module)\n * @property {Boolean} collapseActions Group actions (RowActions module)\n * @property {Boolean} resizable Make columns resizable (ColumnResizer module)\n * @property {Boolean} selectable Allow selecting rows with a checkbox (SelectableRows module)\n * @property {Boolean} selectVisibleOnly Select all only selects visible rows (SelectableRows module)\n * @property {Boolean} autosize Compute column sizes based on given data (Autosize module)\n * @property {Boolean} autoheight Adjust height so that it matches table size (FixedHeight module)\n * @property {Boolean} autohidePager auto-hides the pager when number of records falls below the selected page size\n * @property {Boolean} menu Right click menu on column headers (ContextMenu module)\n * @property {Boolean} reorder Allows a column reordering functionality (DraggableHeaders module)\n * @property {Boolean} responsive Change display mode on small screens (ResponsiveGrid module)\n * @property {Boolean} responsiveToggle Show toggle column (ResponsiveGrid module)\n * @property {Boolean} filterOnEnter Toggles the ability to filter column data by pressing the Enter or Return key \n * @property {String} spinnerClass Sets a space-delimited string of css classes for a spinner (use spinner-border css class for bootstrap 5 spinner)\n */\n\n/**\n * Available labels that can be translated\n * @typedef Labels\n * @property {String} itemsPerPage\n * @property {String} gotoPage\n * @property {String} gotoFirstPage\n * @property {String} gotoPrevPage\n * @property {String} gotoNextPage\n * @property {String} gotoLastPage\n * @property {String} of\n * @property {String} items\n * @property {String} resizeColumn\n * @property {String} noData\n * @property {String} areYouSure\n * @property {String} networkError\n */\n\n/**\n * List of registered plugins\n * @type {Plugins}\n */\nlet plugins = {};\n\n/**\n * @type {Labels}\n */\nlet labels = {\n  itemsPerPage: \"Items per page\",\n  gotoPage: \"Go to page\",\n  gotoFirstPage: \"Go to first page\",\n  gotoPrevPage: \"Go to previous page\",\n  gotoNextPage: \"Go to next page\",\n  gotoLastPage: \"Go to last page\",\n  of: \"of\",\n  items: \"items\",\n  resizeColumn: \"Resize column\",\n  noData: \"No data\",\n  areYouSure: \"Are you sure?\",\n  networkError: \"Network response error\",\n};\n\n/**\n * Column definition will update some props on the html element\n * @param {HTMLElement} el\n * @param {Column} column\n */\nfunction applyColumnDefinition(el, column) {\n  if (column.width) {\n    setAttribute(el, \"width\", column.width);\n  }\n  if (column.class) {\n    addClass(el, column.class);\n  }\n  if (column.hidden) {\n    setAttribute(el, \"hidden\", \"\");\n    if (column.responsiveHidden) {\n      addClass(el, \"dg-responsive-hidden\");\n    }\n  }\n}\n\n/**\n */\nclass DataGrid extends BaseElement {\n  #filterSelector = \"[id^=dg-filter]\";\n\n  _ready() {\n    setAttribute(this, \"id\", this.options.id ?? randstr(\"el-\"), true);\n\n    /**\n     * The grid displays that data\n     * @type {Array}\n     */\n    this.data = [];\n    /**\n     * We store the original data in this\n     * @type {Array}\n     */\n    this.originalData; // declared uninitialized to allow data preloading before fetch.\n\n    // Make the IDE happy\n    /**\n     * @type {Options}\n     */\n    this.options = this.options || this.defaultOptions;\n\n    // Init values\n    this.fireEvents = false;\n    this.page = this.options.defaultPage || 1;\n    this.pages = 0;\n    this.meta; // declared uninitialized to allow data preloading before fetch.\n    /**\n     * @type {Plugins}\n     */\n    this.plugins = {};\n    // Init plugins\n    for (const [pluginName, pluginClass] of Object.entries(plugins)) {\n      // @ts-ignore until we can set typeof import ...\n      this.plugins[pluginName] = new pluginClass(this);\n    }\n\n    // Expose options as observed attributes in the dom\n    // Do it when fireEvents is disabled to avoid firing change callbacks\n    for (const attr of DataGrid.observedAttributes) {\n      if (attr.indexOf(\"data-\") === 0) {\n        setAttribute(this, attr, this.options[camelize(attr.slice(5))]);\n      }\n    }\n\n    // Inserts spinner\n    if (this.options.spinnerClass && this.plugins.SpinnerSupport)\n      this.plugins.SpinnerSupport.add();\n  }\n\n  static template() {\n    return `\n<table role=\"grid\" >\n    <thead role=\"rowgroup\">\n        <tr role=\"row\" aria-rowindex=\"1\" class=\"dg-head-columns\"><th><!-- keep for getTextWidth --></th></tr>\n        <tr role=\"row\" aria-rowindex=\"2\" class=\"dg-head-filters\"></tr>\n    </thead>\n    <tbody role=\"rowgroup\" data-empty=\"${labels.noData}\"></tbody>\n    <tfoot role=\"rowgroup\" hidden>\n        <tr role=\"row\" aria-rowindex=\"1\">\n            <td role=\"gridcell\">\n            <div class=\"dg-footer\">\n                <div class=\"dg-page-nav\">\n                  <select class=\"dg-select-per-page\" aria-label=\"${labels.itemsPerPage}\"></select>\n                </div>\n                <div class=\"dg-pagination\">\n                  <button type=\"button\" class=\"dg-btn-first dg-rotate\" title=\"${labels.gotoFirstPage}\" aria-label=\"${labels.gotoFirstPage}\" disabled>\n                    <i class=\"dg-skip-icon\"></i>\n                  </button>\n                  <button type=\"button\" class=\"dg-btn-prev dg-rotate\" title=\"${labels.gotoPrevPage}\" aria-label=\"${labels.gotoPrevPage}\" disabled>\n                    <i class=\"dg-nav-icon\"></i>\n                  </button>\n                  <input type=\"number\" class=\"dg-input-page\" min=\"1\" step=\"1\" value=\"1\" aria-label=\"${labels.gotoPage}\">\n                  <button type=\"button\" class=\"dg-btn-next\" title=\"${labels.gotoNextPage}\" aria-label=\"${labels.gotoNextPage}\" disabled>\n                    <i class=\"dg-nav-icon\"></i>\n                  </button>\n                  <button type=\"button\" class=\"dg-btn-last\" title=\"${labels.gotoLastPage}\" aria-label=\"${labels.gotoLastPage}\" disabled>\n                    <i class=\"dg-skip-icon\"></i>\n                  </button>\n                </div>\n                <div class=\"dg-meta\">\n                  <span class=\"dg-low\">0</span> - <span class=\"dg-high\">0</span> ${labels.of} <span class=\"dg-total\">0</span> ${labels.items}\n                </div>\n            </div>\n            </td>\n        </tr>\n    </tfoot>\n    <ul class=\"dg-menu\" hidden></ul>\n</table>\n`;\n  }\n\n  /**\n   * @returns {Labels}\n   */\n  get labels() {\n    return labels;\n  }\n\n  /**\n   * @returns {Labels}\n   */\n  static getLabels() {\n    return labels;\n  }\n\n  /**\n   * @param {Object} v\n   */\n  static setLabels(v) {\n    labels = Object.assign(labels, v);\n  }\n\n  /**\n   * @returns {Column}\n   */\n  get defaultColumn() {\n    return {\n      field: \"\",\n      title: \"\",\n      width: 0,\n      class: \"\",\n      attr: \"\",\n      hidden: false,\n      editable: false,\n      noSort: false,\n      responsive: 1,\n      responsiveHidden: false,\n      format: \"\",\n      transform: \"\",\n      filterType: \"text\",\n      firstFilterOption: { value: \"\", text: \"\" }\n    };\n  }\n\n  /**\n   * @returns {Options}\n   */\n  get defaultOptions() {\n    return {\n      id: null,\n      url: null,\n      perPage: 10,\n      debug: false,\n      filter: false,\n      menu: false,\n      sort: false,\n      server: false,\n      serverParams: {\n        start: \"start\",\n        length: \"length\",\n        search: \"search\",\n        sort: \"sort\",\n        sortDir: \"sortDir\",\n        dataKey: \"data\",\n        metaKey: \"meta\",\n        metaTotalKey: \"total\",\n        metaFilteredKey: \"filtered\",\n        optionsKey: \"options\",\n        paramsKey: \"params\",\n      },\n      defaultSort: \"\",\n      reorder: false,\n      dir: \"ltr\",\n      perPageValues: [10, 25, 50, 100, 250],\n      hidePerPage: false,\n      columns: [],\n      actions: [],\n      collapseActions: false,\n      selectable: false,\n      selectVisibleOnly: true,\n      defaultPage: 1,\n      resizable: false,\n      autosize: true,\n      expand: false,\n      autoheight: true,\n      autohidePager: false,\n      responsive: false,\n      responsiveToggle: true,\n      filterOnEnter: true\n    };\n  }\n\n  /**\n   * @param {Plugins} list\n   */\n  static registerPlugins(list) {\n    plugins = list;\n  }\n\n  /**\n   * @param {String} plugin\n   */\n  static unregisterPlugins(plugin = null) {\n    if (plugin === null) {\n      plugins = {};\n    } else {\n      delete plugins[plugin];\n    }\n  }\n\n  /**\n   * @returns {Plugins}\n   */\n  static registeredPlugins() {\n    return plugins;\n  }\n\n  /**\n   * @param {Object|Array} columns\n   * @returns {Column[]}\n   */\n  convertColumns(columns) {\n    let cols = [];\n    // Convert key:value objects to actual columns\n    if (typeof columns === \"object\" && !Array.isArray(columns)) {\n      Object.keys(columns).forEach((key) => {\n        let col = Object.assign({}, this.defaultColumn);\n        col.title = columns[key];\n        col.field = key;\n        cols.push(col);\n      });\n    } else {\n      columns.forEach((item) => {\n        let col = Object.assign({}, this.defaultColumn);\n        if (typeof item === \"string\") {\n          col.title = item;\n          col.field = item;\n        } else if (typeof item === \"object\") {\n          col = Object.assign(col, item);\n          if (!col.field) {\n            console.error(\"Invalid column definition\", item);\n          }\n          if (!col.title) {\n            col.title = col.field;\n          }\n        } else {\n          console.error(\"Column definition must be a string or an object\");\n        }\n        cols.push(col);\n      });\n    }\n    return cols;\n  }\n\n  /**\n   * @link https://gist.github.com/WebReflection/ec9f6687842aa385477c4afca625bbf4#reflected-dom-attributes\n   * @returns {Array}\n   */\n  static get observedAttributes() {\n    return [\n      \"page\",\n      \"data-filter\",\n      \"data-sort\",\n      \"data-debug\",\n      \"data-reorder\",\n      \"data-menu\",\n      \"data-selectable\",\n      \"data-url\",\n      \"data-per-page\",\n      \"data-responsive\",\n    ];\n  }\n\n  get transformAttributes() {\n    return {\n      columns: (v) => this.convertColumns(convertArray(v)),\n      actions: (v) => convertArray(v),\n      defaultPage: (v) => parseInt(v),\n      perPage: (v) => parseInt(v),\n    };\n  }\n\n  get page() {\n    return parseInt(this.getAttribute(\"page\"));\n  }\n\n  set page(val) {\n    setAttribute(this, \"page\", this.constrainPageValue(val));\n  }\n\n  urlChanged() {\n    this.loadData().then(() => {\n      this.configureUi();\n    });\n  }\n\n  constrainPageValue(v) {\n    if (this.pages < v) {\n      v = this.pages;\n    }\n    if (v < 1 || !v) {\n      v = 1;\n    }\n    return v;\n  }\n\n  fixPage() {\n    this.pages = this.totalPages();\n    this.page = this.constrainPageValue(this.page);\n\n    // Show current page in input\n    setAttribute(this.inputPage, \"max\", this.pages);\n    this.inputPage.value = \"\" + this.page;\n    this.inputPage.disabled = this.pages < 2;\n  }\n\n  pageChanged() {\n    this.reload();\n  }\n\n  responsiveChanged() {\n    if (!this.plugins.ResponsiveGrid) {\n      return;\n    }\n    if (this.options.responsive) {\n      this.plugins.ResponsiveGrid.observe();\n    } else {\n      this.plugins.ResponsiveGrid.unobserve();\n    }\n  }\n\n  menuChanged() {\n    this.renderHeader();\n  }\n\n  /**\n   * This is the callback for the select control\n   */\n  changePerPage() {\n    this.options.perPage = parseInt(this.selectPerPage.options[this.selectPerPage.selectedIndex].value);\n    this.perPageChanged();\n  }\n\n  /**\n   * This is the actual event triggered on attribute change\n   */\n  perPageChanged() {\n    // Refresh UI\n    if (this.options.perPage !== parseInt(this.selectPerPage.options[this.selectPerPage.selectedIndex].value)) {\n      this.perPageValuesChanged();\n    }\n    // Make sure current page is still valid\n    let updatePage = this.page;\n    while (updatePage > 1 && this.page * this.options.perPage > this.totalRecords()) {\n      updatePage--;\n    }\n    if (updatePage != this.page) {\n      // Triggers pageChanged, which will trigger reload\n      this.page = updatePage;\n    } else {\n      // Simply reload current page\n      this.reload(() => {\n        // Preserve distance between top of page and select control if no fixed height\n        if (!this.plugins.FixedHeight || !this.plugins.FixedHeight.hasFixedHeight) {\n          this.selectPerPage.scrollIntoView();\n        }\n      });\n    }\n  }\n\n  dirChanged() {\n    setAttribute(this, \"dir\", this.options.dir);\n  }\n\n  defaultSortChanged() {\n    this.sortChanged();\n  }\n\n  /**\n   * Populate the select dropdown according to options\n   */\n  perPageValuesChanged() {\n    if (!this.selectPerPage) {\n      return;\n    }\n    while (this.selectPerPage.lastChild) {\n      this.selectPerPage.removeChild(this.selectPerPage.lastChild);\n    }\n    this.options.perPageValues.forEach((v) => {\n      addSelectOption(this.selectPerPage, v, v, v === this.options.perPage);\n    });\n  }\n\n  _connected() {\n    /**\n     * @type {HTMLTableElement}\n     */\n    this.table = this.querySelector(\"table\");\n    /**\n     * @type {HTMLInputElement}\n     */\n    this.btnFirst = this.querySelector(\".dg-btn-first\");\n    /**\n     * @type {HTMLInputElement}\n     */\n    this.btnPrev = this.querySelector(\".dg-btn-prev\");\n    /**\n     * @type {HTMLInputElement}\n     */\n    this.btnNext = this.querySelector(\".dg-btn-next\");\n    /**\n     * @type {HTMLInputElement}\n     */\n    this.btnLast = this.querySelector(\".dg-btn-last\");\n    /**\n     * @type {HTMLSelectElement}\n     */\n    this.selectPerPage = this.querySelector(\".dg-select-per-page\");\n    /**\n     * @type {HTMLInputElement}\n     */\n    this.inputPage = this.querySelector(\".dg-input-page\");\n\n    this.getFirst = this.getFirst.bind(this);\n    this.getPrev = this.getPrev.bind(this);\n    this.getNext = this.getNext.bind(this);\n    this.getLast = this.getLast.bind(this);\n    this.changePerPage = this.changePerPage.bind(this);\n    this.gotoPage = this.gotoPage.bind(this);\n\n    this.btnFirst.addEventListener(\"click\", this.getFirst);\n    this.btnPrev.addEventListener(\"click\", this.getPrev);\n    this.btnNext.addEventListener(\"click\", this.getNext);\n    this.btnLast.addEventListener(\"click\", this.getLast);\n    this.selectPerPage.addEventListener(\"change\", this.changePerPage);\n    this.selectPerPage.toggleAttribute(\"hidden\", this.options.hidePerPage);\n    this.inputPage.addEventListener(\"input\", this.gotoPage);\n\n    Object.values(this.plugins).forEach((plugin) => {\n      plugin.connected();\n    });\n\n    // Display even if we don't have data\n    this.dirChanged();\n    this.perPageValuesChanged();\n\n    // @ts-ignore\n    this.loadData().finally(() => {\n      this.configureUi();\n\n      this.sortChanged();\n      this.classList.add(\"dg-initialized\"); //acts as a flag to prevent unnecessary server calls down the chain.\n\n      this.filterChanged();\n      this.reorderChanged();\n\n      this.dirChanged();\n      this.perPageValuesChanged();\n      this.pageChanged();\n\n      this.fireEvents = true; // We can now fire attributeChangedCallback events\n\n      this.log(\"initialized\");\n    });\n  }\n\n  _disconnected() {\n    this.btnFirst.removeEventListener(\"click\", this.getFirst);\n    this.btnPrev.removeEventListener(\"click\", this.getPrev);\n    this.btnNext.removeEventListener(\"click\", this.getNext);\n    this.btnLast.removeEventListener(\"click\", this.getLast);\n    this.selectPerPage.removeEventListener(\"change\", this.changePerPage);\n    this.inputPage.removeEventListener(\"input\", this.gotoPage);\n\n    Object.values(this.plugins).forEach((plugin) => {\n      plugin.disconnected();\n    });\n  }\n\n  /**\n   * @param {string} field\n   * @returns {Column}\n   */\n  getCol(field) {\n    let found = null;\n    this.options.columns.forEach((col) => {\n      if (col.field == field) {\n        found = col;\n      }\n    });\n    return found;\n  }\n\n  getColProp(field, prop) {\n    const c = this.getCol(field);\n    return c ? c[prop] : null;\n  }\n\n  setColProp(field, prop, val) {\n    const c = this.getCol(field);\n    if (c) {\n      c[prop] = val;\n    }\n  }\n\n  visibleColumns() {\n    return this.options.columns.filter((col) => {\n      return !col.hidden;\n    });\n  }\n\n  hiddenColumns() {\n    return this.options.columns.filter((col) => {\n      return col.hidden === true;\n    });\n  }\n\n  showColumn(field, render = true) {\n    this.setColProp(field, \"hidden\", false);\n\n    // We need to render the whole table otherwise layout fixed won't do its job\n    if (render) this.renderTable();\n\n    dispatch(this, \"columnVisibility\", {\n      col: field,\n      visibility: \"visible\",\n    });\n  }\n\n  hideColumn(field, render = true) {\n    this.setColProp(field, \"hidden\", true);\n\n    // We need to render the whole table otherwise layout fixed won't do its job\n    if (render) this.renderTable();\n\n    dispatch(this, \"columnVisibility\", {\n      col: field,\n      visibility: \"hidden\",\n    });\n  }\n\n  /**\n   * Returns the starting index of actual data\n   * @returns {Number}\n   */\n  startColIndex() {\n    let start = 1;\n    if (this.options.selectable && this.plugins.SelectableRows) {\n      start++;\n    }\n    if (this.options.responsive && this.plugins.ResponsiveGrid && this.plugins.ResponsiveGrid.hasHiddenColumns()) {\n      start++;\n    }\n    return start;\n  }\n\n  /**\n   * @returns {Boolean}\n   */\n  isSticky() {\n    return this.hasAttribute(\"sticky\");\n  }\n\n  /**\n   * @param {Boolean} visibleOnly\n   * @returns {Number}\n   */\n  columnsLength(visibleOnly = false) {\n    let len = 0;\n    // One column per (visible) column\n    this.options.columns.forEach((col) => {\n      if (visibleOnly && col.hidden) {\n        return;\n      }\n      if (!col.attr) {\n        len++;\n      }\n    });\n    // Add one col for selectable checkbox at the beginning\n    if (this.options.selectable && this.plugins.SelectableRows) {\n      len++;\n    }\n    // Add one col for actions at the end\n    if (this.options.actions.length && this.plugins.RowActions) {\n      len++;\n    }\n    // Add one col for the responsive toggle\n    if (this.options.responsive && this.plugins.ResponsiveGrid && this.plugins.ResponsiveGrid.hasHiddenColumns()) {\n      len++;\n    }\n    return len;\n  }\n\n  /**\n   * Global configuration and renderTable\n   * This should be called after your data has been loaded\n   */\n  configureUi() {\n    setAttribute(this.querySelector(\"table\"), \"aria-rowcount\", this.data.length);\n\n    this.table.style.visibility = \"hidden\";\n    this.renderTable();\n    if (this.options.responsive && this.plugins.ResponsiveGrid) {\n      // Let the observer make the table visible\n    } else {\n      this.table.style.visibility = \"visible\";\n    }\n\n    // Store row height for later usage\n    if (!this.rowHeight) {\n      const tr = find(this, \"tbody tr\") || find(this, \"table tr\");\n      if (tr) {\n        this.rowHeight = tr.offsetHeight;\n      }\n    }\n  }\n\n  filterChanged() {\n    const row = this.querySelector(\"thead tr.dg-head-filters\");\n    if (this.options.filter) {\n      removeAttribute(row, \"hidden\");\n    } else {\n      this.clearFilters();\n      setAttribute(row, \"hidden\", \"\");\n    }\n  }\n\n  reorderChanged() {\n    const headers = findAll(this, \"thead tr.dg-head-columns th\");\n    headers.forEach((th) => {\n      if (th.classList.contains(\"dg-selectable\") || th.classList.contains(\"dg-actions\")) {\n        return;\n      }\n      if (this.options.reorder && this.plugins.DraggableHeaders) {\n        th.draggable = true;\n      } else {\n        th.removeAttribute(\"draggable\");\n      }\n    });\n  }\n\n  sortChanged() {\n    this.log(\"toggle sort\");\n\n    this.querySelectorAll(\"thead tr.dg-head-columns th\").forEach((th) => {\n      const fieldName = th.getAttribute(\"field\");\n      if (th.classList.contains(\"dg-not-sortable\") || (!this.fireEvents && fieldName == this.options.defaultSort)) {\n        return;\n      }\n      if (this.options.sort && !this.getColProp(fieldName, \"noSort\")) {\n        setAttribute(th, \"aria-sort\", \"none\");\n      } else {\n        removeAttribute(th, \"aria-sort\");\n      }\n    });\n  }\n\n  selectableChanged() {\n    this.renderTable();\n  }\n\n  addRow(row) {\n    if (!Array.isArray(this.originalData)) return;\n    this.log(\"Add row\");\n    this.originalData.push(row);\n    this.data = this.originalData.slice();\n    this.sortData();\n  }\n\n  /**\n   * @param {any} value Value to remove. Defaults to last row.\n   * @param {String} key The key of the item to remove. Defaults to first column\n   */\n  removeRow(value = null, key = null) {\n    if (!Array.isArray(this.originalData)) return;\n    if (key === null) {\n      key = this.options.columns[0][\"field\"];\n    }\n    if (value === null) {\n      value = this.originalData[this.originalData.length - 1][key];\n    }\n    this.log(\"Removing \" + key + \":\" + value);\n    for (let i = 0; i < this.originalData.length; i++) {\n      if (this.originalData[i][key] === value) {\n        this.originalData.splice(i, 1);\n        break;\n      }\n    }\n    this.data = this.originalData.slice();\n    this.sortData();\n  }\n\n  /**\n   * @param {String} key Return a specific key (eg: id) instead of the whole row\n   * @returns {Array}\n   */\n  getSelection(key = null) {\n    if (!this.plugins.SelectableRows) {\n      return [];\n    }\n    return this.plugins.SelectableRows.getSelection(key);\n  }\n\n  getData() {\n    return this.originalData;\n  }\n\n  clearData() {\n    // Already empty\n    if (this.data.length === 0) {\n      return;\n    }\n    this.data = this.originalData = [];\n    this.renderBody();\n  }\n\n  /**\n   * Preloads the data intended to bypass the initial fetch operation, allowing for faster intial page load time.\n   * Subsequent grid actions after initialization will operate as normal.\n   * @param {Object} data - an object with meta ({total, filtered, start}) and data (array of objects) properties.\n   */\n  preload(data) {\n    const metaKey = this.options.serverParams.metaKey,\n      dataKey = this.options.serverParams.dataKey;\n    if (data?.[metaKey]) this.meta = data[metaKey];\n    if (data?.[dataKey]) this.data = this.originalData = data[dataKey];\n  }\n\n  refresh(cb = null) {\n    this.data = this.originalData = [];\n    return this.reload(cb);\n  }\n\n  reload(cb = null) {\n    this.log(\"reload\");\n\n    // If the data was cleared, we need to render again\n    const needRender = !this.originalData?.length;\n    this.fixPage();\n    // @ts-ignore\n    this.loadData().finally(() => {\n      // If we load data from the server, we redraw the table body\n      // Otherwise, we just need to paginate\n      this.options.server || needRender ? this.renderBody() : this.paginate();\n      if (cb) {\n        cb();\n      }\n    });\n  }\n\n  /**\n   * @returns {Promise}\n   */\n  loadData() {\n    const flagEmpty = () => !this.data.length && this.classList.add(\"dg-empty\"),\n      tbody = this.querySelector(\"tbody\");\n    // We already have some data\n    if (this.meta || this.originalData || this.classList.contains(\"dg-initialized\")) {\n      // We don't use server side data\n      if (!this.options.server || (this.options.server && !this.fireEvents)) {\n        this.log(\"skip loadData\");\n        flagEmpty();\n        return new Promise((resolve) => {\n          resolve();\n        });\n      }\n    }\n    this.log(\"loadData\");\n    this.loading = true;\n    this.classList.add(\"dg-loading\");\n    this.classList.remove(\"dg-empty\", \"dg-network-error\");\n    return (\n      this.fetchData()\n        .then((response) => {\n          // We can get a straight array or an object\n          if (Array.isArray(response)) {\n            this.data = response;\n          } else {\n            // Object must contain data key\n            if (!response[this.options.serverParams.dataKey]) {\n              console.error(\"Invalid response, it should contain a data key with an array or be a plain array\", response);\n              this.options.url = null;\n              return;\n            }\n\n            // We may have a config object\n            this.options = Object.assign(this.options, response[this.options.serverParams.optionsKey] ?? {});\n            // It should return meta data (see metaFilteredKey)\n            this.meta = response[this.options.serverParams.metaKey] ?? {};\n            this.data = response[this.options.serverParams.dataKey];\n          }\n          this.originalData = this.data.slice();\n          this.fixPage();\n\n          // Make sure we have a proper set of columns\n          if (this.options.columns.length === 0 && this.originalData.length) {\n            this.options.columns = this.convertColumns(Object.keys(this.originalData[0]));\n          } else {\n            this.options.columns = this.convertColumns(this.options.columns);\n          }\n        })\n        .catch((err) => {\n          this.log(err);\n          if (err.message) {\n            tbody.setAttribute(\"data-empty\", err.message.replace(/^\\s+|\\r\\n|\\n|\\r$/g, \"\"));\n          }\n          this.classList.add(\"dg-empty\", \"dg-network-error\");\n        })\n        // @ts-ignore\n        .finally(() => {\n          flagEmpty();\n          if (!this.classList.contains(\"dg-network-error\") && tbody.getAttribute(\"data-empty\") != this.labels.noData) {\n            tbody.setAttribute(\"data-empty\", this.labels.noData);\n          }\n          this.classList.remove(\"dg-loading\");\n          this.loading = false;\n        })\n    );\n  }\n\n  getFirst() {\n    if (this.loading) {\n      return;\n    }\n    this.page = 1;\n  }\n\n  getLast() {\n    if (this.loading) {\n      return;\n    }\n    this.page = this.pages;\n  }\n\n  getPrev() {\n    if (this.loading) {\n      return;\n    }\n    this.page = this.page - 1;\n  }\n\n  getNext() {\n    if (this.loading) {\n      return;\n    }\n    this.page = this.page + 1;\n  }\n\n  gotoPage(event) {\n    if (event.type === \"keypress\") {\n      const key = event.keyCode || event.key;\n      if (key === 13 || key === \"Enter\") {\n        event.preventDefault();\n      } else {\n        return;\n      }\n    }\n    this.page = parseInt(this.inputPage.value);\n  }\n\n  getSort() {\n    let col = this.querySelector(\"thead tr.dg-head-columns th[aria-sort$='scending']\");\n    if (col) {\n      return col.getAttribute(\"field\");\n    }\n    return this.options.defaultSort;\n  }\n\n  getSortDir() {\n    let col = this.querySelector(\"thead tr.dg-head-columns th[aria-sort$='scending']\");\n    if (col) {\n      return col.getAttribute(\"aria-sort\") || \"\";\n    }\n    return \"\";\n  }\n\n  getFilters() {\n    let filters = [];\n    const inputs = findAll(this, this.#filterSelector);\n    inputs.forEach((input) => {\n      filters[input.dataset.name] = input.value;\n    });\n    return filters;\n  }\n\n  clearFilters() {\n    const inputs = findAll(this, this.#filterSelector);\n    inputs.forEach((input) => {\n      input.value = \"\";\n    });\n    this.filterData();\n  }\n\n  filterData() {\n    this.log(\"filter data\");\n\n    this.page = 1;\n\n    if (this.options.server) {\n      this.reload();\n    } else {\n      this.data = this.originalData?.slice() ?? [];\n\n      // Look for rows matching the filters\n      const inputs = findAll(this, this.#filterSelector);\n      inputs.forEach((input) => {\n        let value = input.value;\n        if (value) {\n          let name = input.dataset.name;\n          this.data = this.data.filter((item) => {\n            let str = item[name] + \"\";\n            return str.toLowerCase().indexOf(value.toLowerCase()) !== -1;\n          });\n        }\n      });\n      this.pageChanged();\n\n      let col = this.querySelector(\"thead tr.dg-head-columns th[aria-sort$='scending']\");\n      if (this.options.sort && col) {\n        this.sortData();\n      } else {\n        this.renderBody();\n      }\n    }\n  }\n\n  /**\n   * Data will be sorted then rendered using renderBody\n   * @param {Element} col The column that was clicked or null to use current sort\n   */\n  sortData(col = null) {\n    this.log(\"sort data\");\n\n    // Early exit\n    if (col && this.getColProp(col.getAttribute(\"field\"), \"noSort\")) {\n      this.log(\"sorting prevented because column is not sortable\");\n      return;\n    }\n    if (this.plugins.ColumnResizer && this.plugins.ColumnResizer.isResizing) {\n      this.log(\"sorting prevented because resizing\");\n      return;\n    }\n    if (this.loading) {\n      this.log(\"sorting prevented because loading\");\n      return;\n    }\n\n    // We clicked on a column, update sort state\n    if (col !== null) {\n      // Remove active sort if any\n      const haveClasses = (c) => [\"dg-selectable\", \"dg-actions\", \"dg-responsive-toggle\"].includes(c);\n      this.querySelectorAll(\"thead tr:first-child th\").forEach((th) => {\n        // @ts-ignore\n        if ([...th.classList].some(haveClasses)) {\n          return;\n        }\n        if (th !== col) {\n          th.setAttribute(\"aria-sort\", \"none\");\n        }\n      });\n\n      // Set tristate col\n      if (!col.hasAttribute(\"aria-sort\") || col.getAttribute(\"aria-sort\") === \"none\") {\n        col.setAttribute(\"aria-sort\", \"ascending\");\n      } else if (col.getAttribute(\"aria-sort\") === \"ascending\") {\n        col.setAttribute(\"aria-sort\", \"descending\");\n      } else if (col.getAttribute(\"aria-sort\") === \"descending\") {\n        col.setAttribute(\"aria-sort\", \"none\");\n      }\n    } else {\n      // Or fetch current sort\n      col = this.querySelector(\"thead tr.dg-head-columns th[aria-sort$='scending']\");\n    }\n\n    if (this.options.server) {\n      // Reload data with updated sort\n      this.loadData().finally(() => {\n        this.renderBody();\n      });\n    } else {\n      const sort = col ? col.getAttribute(\"aria-sort\") : \"none\";\n      if (sort === \"none\") {\n        let stack = [];\n\n        // Restore order while keeping filters\n        this.originalData?.some((itemA) => {\n          this.data.some((itemB) => {\n            if (JSON.stringify(itemA) === JSON.stringify(itemB)) {\n              stack.push(itemB);\n              return true;\n            }\n            return false;\n          });\n          return stack.length === this.data.length;\n        });\n\n        this.data = stack;\n      } else {\n        const field = col.getAttribute(\"field\");\n        this.data.sort((a, b) => {\n          if (!isNaN(a[field]) && !isNaN(b[field])) {\n            return sort === \"ascending\" ? a[field] - b[field] : b[field] - a[field];\n          }\n          const valA = sort === \"ascending\" ? a[field].toUpperCase() : b[field].toUpperCase();\n          const valB = sort === \"ascending\" ? b[field].toUpperCase() : a[field].toUpperCase();\n\n          switch (true) {\n            case valA > valB:\n              return 1;\n            case valA < valB:\n              return -1;\n            case valA === valB:\n              return 0;\n          }\n        });\n      }\n      this.renderBody();\n    }\n  }\n\n  fetchData() {\n    if (!this.options.url) {\n      return new Promise((resolve, reject) => reject(\"No url set\"));\n    }\n\n    let base = window.location.href;\n    // Fix trailing slash if no extension is present\n    if (!base.split(\"/\").pop().includes(\".\")) {\n      base += base.endsWith(\"/\") ? \"\" : \"/\";\n    }\n    let url = new URL(this.options.url, base);\n    let params = {\n      r: Date.now(),\n    };\n    if (this.options.server) {\n      // 0 based\n      params[this.options.serverParams.start] = this.page - 1;\n      params[this.options.serverParams.length] = this.options.perPage;\n      if (this.options.filter) params[this.options.serverParams.search] = this.getFilters();\n      params[this.options.serverParams.sort] = this.getSort() || \"\";\n      params[this.options.serverParams.sortDir] = this.getSortDir();\n\n      // extra params ?\n      if (this.meta?.[this.options.serverParams.paramsKey]) {\n        params = Object.assign(params, this.meta[this.options.serverParams.paramsKey]);\n      }\n    }\n\n    appendParamsToUrl(url, params);\n\n    return fetch(url).then((response) => {\n      if (!response.ok) {\n        throw new Error(response.statusText || labels.networkError);\n      }\n      return response.json();\n    });\n  }\n\n  renderTable() {\n    this.log(\"render table\");\n\n    if (this.options.menu && this.plugins.ContextMenu) {\n      this.plugins.ContextMenu.createMenu();\n    }\n\n    let sortedColumn;\n\n    this.renderHeader();\n    if (this.options.defaultSort) {\n      // We can have a default sort even with sort disabled\n      sortedColumn = this.querySelector(\"thead tr.dg-head-columns th[field='\" + this.options.defaultSort + \"']\");\n    }\n\n    if (sortedColumn) {\n      this.sortData(sortedColumn);\n    } else {\n      this.renderBody();\n    }\n\n    this.renderFooter();\n  }\n\n  /**\n   * Create table header\n   * - One row for the column headers\n   * - One row for the filters\n   */\n  renderHeader() {\n    this.log(\"render header\");\n\n    const thead = this.querySelector(\"thead\");\n    this.createColumnHeaders(thead);\n    this.createColumnFilters(thead);\n\n    if (this.options.resizable && this.plugins.ColumnResizer) {\n      this.plugins.ColumnResizer.renderResizer(labels.resizeColumn);\n    }\n\n    dispatch(this, \"headerRendered\");\n  }\n\n  renderFooter() {\n    this.log(\"render footer\");\n\n    const tfoot = this.querySelector(\"tfoot\");\n    const td = tfoot.querySelector(\"td\");\n    tfoot.removeAttribute(\"hidden\");\n    setAttribute(td, \"colspan\", this.columnsLength(true));\n    tfoot.style.display = \"\";\n  }\n\n  /**\n   * Create the column headers based on column definitions and set options\n   * @param {HTMLTableSectionElement} thead\n   */\n  createColumnHeaders(thead) {\n    // @link https://stackoverflow.com/questions/21064101/understanding-offsetwidth-clientwidth-scrollwidth-and-height-respectively\n    const availableWidth = this.clientWidth;\n    const colMaxWidth = Math.round((availableWidth / this.columnsLength(true)) * 2);\n\n    let idx = 0;\n    let tr;\n\n    // Create row\n    tr = ce(\"tr\");\n    this.headerRow = tr;\n    tr.setAttribute(\"role\", \"row\");\n    tr.setAttribute(\"aria-rowindex\", \"1\");\n    tr.setAttribute(\"class\", \"dg-head-columns\");\n\n    // We need a real th from the dom to compute the size\n    let sampleTh = thead.querySelector(\"tr.dg-head-columns th\");\n    if (!sampleTh) {\n      sampleTh = ce(\"th\");\n      thead.querySelector(\"tr\").appendChild(sampleTh);\n    }\n\n    if (this.options.selectable && this.plugins.SelectableRows) {\n      this.plugins.SelectableRows.createHeaderCol(tr);\n    }\n    if (this.options.responsive && this.plugins.ResponsiveGrid && this.plugins.ResponsiveGrid.hasHiddenColumns()) {\n      this.plugins.ResponsiveGrid.createHeaderCol(tr);\n    }\n\n    // Create columns\n    idx = 0;\n    let totalWidth = 0;\n    this.options.columns.forEach((column) => {\n      if (column.attr) {\n        return;\n      }\n      const colIdx = idx + this.startColIndex();\n      let th = ce(\"th\");\n      th.setAttribute(\"scope\", \"col\");\n      th.setAttribute(\"role\", \"columnheader button\");\n      th.setAttribute(\"aria-colindex\", \"\" + colIdx);\n      th.setAttribute(\"id\", randstr(\"dg-col-\"));\n      if (this.options.sort) {\n        th.setAttribute(\"aria-sort\", \"none\");\n      }\n      th.setAttribute(\"field\", column.field);\n      if (this.plugins.ResponsiveGrid && this.options.responsive) {\n        setAttribute(th, \"data-responsive\", column.responsive || \"\");\n      }\n      // Make sure the header fits (+ add some room for sort icon if necessary)\n      const computedWidth = getTextWidth(column.title, sampleTh, true) + 20;\n      th.dataset.minWidth = \"\" + computedWidth;\n      applyColumnDefinition(th, column);\n      th.tabIndex = 0;\n      th.textContent = column.title;\n\n      let w = 0;\n      // Autosize small based on first/last row ?\n      // Take into account minWidth of the header and max available size based on col numbers\n      if (this.options.autosize && this.plugins.AutosizeColumn) {\n        const colAvailableWidth = Math.min(availableWidth - totalWidth, colMaxWidth);\n        w = this.plugins.AutosizeColumn.computeSize(th, column, parseInt(th.dataset.minWidth), colAvailableWidth);\n      } else {\n        w = Math.max(parseInt(th.dataset.minWidth), parseInt(th.getAttribute(\"width\")));\n      }\n\n      setAttribute(th, \"width\", w);\n      if (column.hidden) {\n        th.setAttribute(\"hidden\", \"\");\n      } else {\n        totalWidth += w;\n      }\n\n      // Reorder columns with drag/drop\n      if (this.options.reorder && this.plugins.DraggableHeaders) {\n        this.plugins.DraggableHeaders.makeHeaderDraggable(th);\n      }\n\n      tr.appendChild(th);\n      idx++;\n    });\n\n    // There is too much available width, and we want to avoid fixed layout to split remaining amount\n    if (totalWidth < availableWidth) {\n      const visibleCols = findAll(tr, \"th:not([hidden],.dg-not-resizable)\");\n      if (visibleCols.length) {\n        const lastCol = visibleCols[visibleCols.length - 1];\n        removeAttribute(lastCol, \"width\");\n      }\n    }\n\n    // Actions\n    if (this.options.actions.length && this.plugins.RowActions) {\n      this.plugins.RowActions.makeActionHeader(tr);\n    }\n\n    thead.replaceChild(tr, thead.querySelector(\"tr.dg-head-columns\"));\n\n    // Once columns are inserted, we have an actual dom to query\n    if (thead.offsetWidth > availableWidth) {\n      this.log(`adjust width to fix size, ${thead.offsetWidth} > ${availableWidth}`);\n      const scrollbarWidth = this.offsetWidth - this.clientWidth;\n      let diff = thead.offsetWidth - availableWidth - scrollbarWidth;\n      if (this.options.responsive && this.plugins.ResponsiveGrid) {\n        diff += scrollbarWidth;\n      }\n      // Remove diff for columns that can afford it\n      const thWithWidth = findAll(tr, \"th[width]\");\n      thWithWidth.forEach((th) => {\n        if (hasClass(th, \"dg-not-resizable\")) {\n          return;\n        }\n        if (diff <= 0) {\n          return;\n        }\n        const actualWidth = parseInt(th.getAttribute(\"width\"));\n        const minWidth = th.dataset.minWidth ? parseInt(th.dataset.minWidth) : 0;\n        if (actualWidth > minWidth) {\n          let newWidth = actualWidth - diff;\n          if (newWidth < minWidth) {\n            newWidth = minWidth;\n          }\n          diff -= actualWidth - newWidth;\n          setAttribute(th, \"width\", newWidth);\n        }\n      });\n    }\n\n    // Context menu\n    if (this.options.menu && this.plugins.ContextMenu) {\n      this.plugins.ContextMenu.attachContextMenu();\n    }\n\n    // Sort col on click\n    tr.querySelectorAll(\"[aria-sort]\").forEach((sortableRow) => {\n      sortableRow.addEventListener(\"click\", () => this.sortData(sortableRow));\n    });\n\n    setAttribute(this.querySelector(\"table\"), \"aria-colcount\", this.columnsLength(true));\n  }\n\n  createColumnFilters(thead) {\n    let idx = 0;\n    let tr;\n\n    // Create row for filters\n    tr = ce(\"tr\");\n    this.filterRow = tr;\n    tr.setAttribute(\"role\", \"row\");\n    tr.setAttribute(\"aria-rowindex\", \"2\");\n    tr.setAttribute(\"class\", \"dg-head-filters\");\n    if (!this.options.filter) {\n      tr.setAttribute(\"hidden\", \"\");\n    }\n\n    if (this.options.selectable && this.plugins.SelectableRows) {\n      this.plugins.SelectableRows.createFilterCol(tr);\n    }\n    if (this.options.responsive && this.plugins.ResponsiveGrid && this.plugins.ResponsiveGrid.hasHiddenColumns()) {\n      this.plugins.ResponsiveGrid.createFilterCol(tr);\n    }\n\n    this.options.columns.forEach((column) => {\n      if (column.attr) {\n        return;\n      }\n      const colIdx = idx + this.startColIndex();\n      let relatedTh = thead.querySelector(\"tr.dg-head-columns th[aria-colindex='\" + colIdx + \"']\");\n      if (!relatedTh) {\n        console.warn(\"Related th not found\", colIdx);\n        return;\n      }\n      let th = ce(\"th\");\n      th.setAttribute(\"aria-colindex\", \"\" + colIdx);\n\n      let filter = this.createFilterElement(column, relatedTh);\n      if (!this.options.filter) {\n        th.tabIndex = 0;\n      } else {\n        filter.tabIndex = 0;\n      }\n\n      if (column.hidden) {\n        th.setAttribute(\"hidden\", \"\");\n      }\n\n      th.appendChild(filter);\n      tr.appendChild(th);\n      idx++;\n    });\n\n    // Actions\n    if (this.options.actions.length && this.plugins.RowActions) {\n      this.plugins.RowActions.makeActionFilter(tr);\n    }\n\n    thead.replaceChild(tr, thead.querySelector(\"tr.dg-head-filters\"));\n\n    // Filter content by field events\n    tr.querySelectorAll(this.#filterSelector).forEach((el) => {\n      const eventName = /select/i.test(el.tagName) ? \"change\" : \"keyup\";\n      el.addEventListener(eventName, (e) => {\n        const key = e.keyCode || e.key;\n        if (key === 13 || key === \"Enter\" || !this.options.filterOnEnter || e.type == \"change\") {\n          this.filterData.call(this);\n        }\n      });\n    });\n  }\n\n  createFilterElement(column, relatedTh) {\n    const isSelect = column.filterType == \"select\",\n      filter = isSelect ? ce(\"select\") : ce(\"input\");\n    if (isSelect) {\n      if (!Array.isArray(column.filterList)) { // Gets unique values from column records\n        const uniqueValues = [...new Set((this.data ?? []).map((e) => e[column.field]))].filter((v) => v).sort();\n        column.filterList = [column.firstFilterOption || this.defaultColumn.firstFilterOption].concat(uniqueValues.map((e) => ({ value: e, text: e })));\n      }\n      column.filterList.forEach((e) => {\n        const opt = ce(\"option\");\n        opt.value = e.value;\n        opt.text = e.text;\n        filter.add(opt);\n      });\n    } else {\n      filter.type = \"text\";\n      filter.inputMode = \"search\";\n      filter.autocomplete = \"off\";\n      filter.spellcheck = false;\n    }\n    // Allows binding filter to this column\n    filter.dataset.name = column.field;\n    filter.id = randstr(\"dg-filter-\");\n    // Don't use aria-label as it triggers autocomplete\n    filter.setAttribute(\"aria-labelledby\", relatedTh.getAttribute(\"id\"));\n    return filter;\n  }\n\n  /**\n   * Render the data as rows in tbody\n   * It will call paginate() at the end\n   */\n  renderBody() {\n    this.log(\"render body\");\n    let tr;\n    let td;\n    let idx;\n    let tbody = ce(\"tbody\");\n\n    this.data.forEach((item, i) => {\n      tr = ce(\"tr\");\n      setAttribute(tr, \"role\", \"row\");\n      setAttribute(tr, \"hidden\", \"\");\n      setAttribute(tr, \"aria-rowindex\", i + 1);\n      tr.tabIndex = 0;\n\n      if (this.options.selectable && this.plugins.SelectableRows) {\n        this.plugins.SelectableRows.createDataCol(tr);\n      }\n      if (this.options.responsive && this.plugins.ResponsiveGrid && this.plugins.ResponsiveGrid.hasHiddenColumns()) {\n        this.plugins.ResponsiveGrid.createDataCol(tr);\n      }\n\n      // Expandable\n      if (this.options.expand) {\n        tr.classList.add(\"dg-expandable\");\n\n        on(tr, \"click\", (ev) => {\n          if (this.plugins.ResponsiveGrid) {\n            this.plugins.ResponsiveGrid.blockObserver();\n          }\n          toggleClass(ev.currentTarget, \"dg-expanded\");\n          if (this.plugins.ResponsiveGrid) {\n            this.plugins.ResponsiveGrid.unblockObserver();\n          }\n        });\n      }\n\n      idx = 0;\n      this.options.columns.forEach((column) => {\n        if (!column) {\n          console.error(\"Empty column found!\", this.options.columns);\n        }\n        // It should be applied as an attr of the row\n        if (column.attr) {\n          if (item[column.field]) {\n            // Special case if we try to write over the class attr\n            if (column.attr === \"class\") {\n              addClass(tr, item[column.field]);\n            } else {\n              tr.setAttribute(column.attr, item[column.field]);\n            }\n          }\n          return;\n        }\n        td = ce(\"td\");\n        td.setAttribute(\"role\", \"gridcell\");\n        td.setAttribute(\"aria-colindex\", idx + this.startColIndex());\n        applyColumnDefinition(td, column);\n        // This is required for pure css responsive layout\n        td.setAttribute(\"data-name\", column.title);\n        td.tabIndex = -1;\n\n        // Inline editing ...\n        if (column.editable && this.plugins.EditableColumn) {\n          addClass(td, \"dg-editable-col\");\n          this.plugins.EditableColumn.makeEditableInput(td, column, item, i);\n        } else {\n          // ... or formatting\n          const v = item[column.field] ?? \"\";\n          let tv;\n          // TODO: make this modular\n          switch (column.transform) {\n            case \"uppercase\":\n              tv = v.toUpperCase();\n              break;\n            case \"lowercase\":\n              tv = v.toLowerCase();\n              break;\n            default:\n              tv = v;\n              break;\n          }\n          if (column.format) {\n            // Only use formatting with values or if defaultFormatValue is set\n            if (column.defaultFormatValue != undefined && (tv === \"\" || tv === null)) {\n              tv = column.defaultFormatValue + \"\";\n            }\n            if (typeof column.format === \"string\" && tv) {\n              td.innerHTML = interpolate(\n                // @ts-ignore\n                column.format,\n                Object.assign(\n                  {\n                    _v: v,\n                    _tv: tv,\n                  },\n                  item\n                )\n              );\n            } else if (column.format instanceof Function) {\n              const val = column.format.call(this, { column, rowData: item, cellData: tv, td, tr });\n              td.innerHTML = val || tv || v;\n            }\n          } else {\n            td.textContent = tv;\n          }\n        }\n        tr.appendChild(td);\n        idx++;\n      });\n\n      // Actions\n      if (this.options.actions.length && this.plugins.RowActions) {\n        this.plugins.RowActions.makeActionRow(tr, item);\n      }\n\n      tbody.appendChild(tr);\n    });\n\n    tbody.setAttribute(\"role\", \"rowgroup\");\n\n    // Keep data empty message\n    const prev = this.querySelector(\"tbody\");\n    tbody.setAttribute(\"data-empty\", prev.getAttribute(\"data-empty\"));\n    this.querySelector(\"table\").replaceChild(tbody, prev);\n\n    if (this.plugins.FixedHeight) {\n      this.plugins.FixedHeight.createFakeRow();\n    }\n\n    this.paginate();\n\n    if (this.plugins.SelectableRows) {\n      this.plugins.SelectableRows.shouldSelectAll(tbody);\n    }\n\n    this.data.length && this.classList.remove(\"dg-empty\");\n\n    dispatch(this, \"bodyRendered\");\n  }\n\n  paginate() {\n    this.log(\"paginate\");\n\n    const total = this.totalRecords();\n    const p = this.page || 1;\n\n    let index;\n    let high = p * this.options.perPage;\n    let low = high - this.options.perPage + 1;\n    const tbody = this.querySelector(\"tbody\");\n    const tfoot = this.querySelector(\"tfoot\");\n\n    if (high > total) {\n      high = total;\n    }\n    if (!total) {\n      low = 0;\n    }\n\n    // Display all rows within the set indexes\n    // For server side paginated grids, we display everything\n    // since the server is taking care of actual pagination\n    tbody.querySelectorAll(\"tr\").forEach((tr) => {\n      if (this.options.server) {\n        removeAttribute(tr, \"hidden\");\n        return;\n      }\n      index = Number(getAttribute(tr, \"aria-rowindex\"));\n      if (index > high || index < low) {\n        setAttribute(tr, \"hidden\", \"\");\n      } else {\n        removeAttribute(tr, \"hidden\");\n      }\n    });\n\n    if (this.options.selectable && this.plugins.SelectableRows) {\n      this.plugins.SelectableRows.clearCheckboxes(tbody);\n    }\n\n    // Store default height and update styles if needed\n    if (this.plugins.FixedHeight) {\n      this.plugins.FixedHeight.updateFakeRow();\n    }\n\n    // Enable/disable buttons if shown\n    if (this.btnFirst) {\n      this.btnFirst.disabled = this.page <= 1;\n      this.btnPrev.disabled = this.page <= 1;\n      this.btnNext.disabled = this.page >= this.pages;\n      this.btnLast.disabled = this.page >= this.pages;\n    }\n    tfoot.querySelector(\".dg-low\").textContent = low.toString();\n    tfoot.querySelector(\".dg-high\").textContent = high.toString();\n    tfoot.querySelector(\".dg-total\").textContent = \"\" + this.totalRecords();\n    tfoot.toggleAttribute(\"hidden\", this.options.autohidePager && this.options.perPage > this.totalRecords());\n  }\n\n  /**\n   * @returns {number}\n   */\n  totalPages() {\n    return Math.ceil(this.totalRecords() / this.options.perPage);\n  }\n\n  /**\n   * @returns {number}\n   */\n  totalRecords() {\n    if (this.options.server) {\n      return this.meta?.[this.options.serverParams.metaFilteredKey] || 0;\n    }\n    return this.data.length;\n  }\n}\n\nexport default DataGrid;\n", "/** @typedef {import(\"../data-grid\").default} DataGrid */\r\n\r\nclass BasePlugin {\r\n  /**\r\n   * @param {DataGrid} grid\r\n   */\r\n  constructor(grid) {\r\n    this.grid = grid;\r\n  }\r\n\r\n  connected() {}\r\n\r\n  disconnected() {}\r\n\r\n  /**\r\n   * Handle events within the plugin\r\n   * @link https://gist.github.com/WebReflection/ec9f6687842aa385477c4afca625bbf4#handling-events\r\n   * @param {Event} event\r\n   */\r\n  handleEvent(event) {\r\n    if (this[`on${event.type}`]) {\r\n      this[`on${event.type}`](event);\r\n    }\r\n  }\r\n}\r\n\r\nexport default BasePlugin;\r\n", "import BasePlugin from \"../core/base-plugin.js\";\r\nimport elementOffset from \"../utils/elementOffset.js\";\r\nimport {\r\n  addClass,\r\n  dispatch,\r\n  findAll,\r\n  getAttribute,\r\n  hasClass,\r\n  off,\r\n  on,\r\n  removeAttribute,\r\n  removeClass,\r\n  setAttribute,\r\n} from \"../utils/shortcuts.js\";\r\n\r\n/**\r\n * Allows to resize columns\r\n */\r\nclass ColumnResizer extends BasePlugin {\r\n  constructor(grid) {\r\n    super(grid);\r\n    this.isResizing = false;\r\n  }\r\n\r\n  /**\r\n   * @param {String} resizeLabel\r\n   */\r\n  renderResizer(resizeLabel) {\r\n    const grid = this.grid;\r\n    const table = grid.table;\r\n    const cols = findAll(grid, \"thead tr.dg-head-columns th\");\r\n\r\n    cols.forEach((col) => {\r\n      if (hasClass(col, \"dg-not-resizable\")) {\r\n        return;\r\n      }\r\n      // Create a resizer element\r\n      const resizer = document.createElement(\"div\");\r\n      addClass(resizer, \"dg-resizer\");\r\n      resizer.ariaLabel = resizeLabel;\r\n\r\n      // Add a resizer element to the column\r\n      col.appendChild(resizer);\r\n\r\n      // Handle resizing\r\n      let startX = 0;\r\n      let startW = 0;\r\n      let remainingSpace = 0;\r\n      let max = 0;\r\n\r\n      const mouseMoveHandler = (e) => {\r\n        if (e.clientX > max) {\r\n          return;\r\n        }\r\n        const newWidth = startW + (e.clientX - startX);\r\n        if (col.dataset.minWidth && newWidth > parseInt(col.dataset.minWidth)) {\r\n          setAttribute(col, \"width\", newWidth);\r\n        }\r\n      };\r\n\r\n      // When user releases the mouse, remove the existing event listeners\r\n      const mouseUpHandler = () => {\r\n        grid.log(\"resized column\");\r\n\r\n        // Prevent accidental sorting if mouse is not over resize handler\r\n        setTimeout(() => {\r\n          this.isResizing = false;\r\n        }, 0);\r\n\r\n        removeClass(resizer, \"dg-resizer-active\");\r\n        if (grid.options.reorder) {\r\n          col.draggable = true;\r\n        }\r\n        col.style.overflow = \"hidden\";\r\n\r\n        // Remove handlers\r\n        off(document, \"mousemove\", mouseMoveHandler);\r\n        off(document, \"mouseup\", mouseUpHandler);\r\n\r\n        dispatch(grid, \"columnResized\", {\r\n          col: getAttribute(col, \"field\"),\r\n          width: getAttribute(col, \"width\"),\r\n        });\r\n      };\r\n\r\n      // Otherwise it could sort the col\r\n      on(resizer, \"click\", (e) => {\r\n        e.stopPropagation();\r\n      });\r\n\r\n      on(resizer, \"mousedown\", (e) => {\r\n        e.stopPropagation();\r\n\r\n        this.isResizing = true;\r\n\r\n        const target = e.target;\r\n        const currentCols = findAll(grid, \"dg-head-columns th\");\r\n        const visibleCols = currentCols.filter((col) => {\r\n          return !col.hasAttribute(\"hidden\");\r\n        });\r\n        const columnIndex = visibleCols.findIndex((column) => column == target.parentNode);\r\n        grid.log(\"resize column\");\r\n\r\n        addClass(resizer, \"dg-resizer-active\");\r\n\r\n        // Make sure we don't drag it\r\n        removeAttribute(col, \"draggable\");\r\n\r\n        // Allow overflow when resizing\r\n        col.style.overflow = \"visible\";\r\n\r\n        // Show full column height (-1 to avoid scrollbar)\r\n        resizer.style.height = table.offsetHeight - 1 + \"px\";\r\n\r\n        // Register initial data\r\n        startX = e.clientX;\r\n        startW = col.offsetWidth;\r\n\r\n        remainingSpace = (visibleCols.length - columnIndex) * 30;\r\n        max = elementOffset(target).left + grid.offsetWidth - remainingSpace;\r\n\r\n        // Remove width from next columns to allow auto layout\r\n        setAttribute(col, \"width\", startW);\r\n        for (let j = 0; j < visibleCols.length; j++) {\r\n          if (j > columnIndex) {\r\n            removeAttribute(cols[j], \"width\");\r\n          }\r\n        }\r\n\r\n        // Attach handlers\r\n        on(document, \"mousemove\", mouseMoveHandler);\r\n        on(document, \"mouseup\", mouseUpHandler);\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nexport default ColumnResizer;\r\n", "/**\r\n * @param {HTMLElement} el\r\n * @param {String} type\r\n * @param {String} prop\r\n * @returns {HTMLElement}\r\n */\r\nexport default function getParentElement(el, type, prop = \"nodeName\") {\r\n  let parent = el;\r\n  while (parent[prop] != type) {\r\n    parent = parent.parentElement;\r\n  }\r\n  return parent;\r\n}\r\n", "import BasePlugin from \"../core/base-plugin.js\";\r\nimport getParentElement from \"../utils/getParentElement.js\";\r\nimport { find, off, on, removeAttribute, setAttribute } from \"../utils/shortcuts.js\";\r\n\r\n/**\r\n * Create a right click menu on the headers\r\n */\r\nclass ContextMenu extends BasePlugin {\r\n  connected() {\r\n    /**\r\n     * @type {HTMLUListElement}\r\n     */\r\n    this.menu = this.grid.querySelector(\".dg-menu\");\r\n  }\r\n  disconnected() {\r\n    if (this.grid.headerRow) {\r\n      off(this.grid.headerRow, \"contextmenu\", this);\r\n    }\r\n  }\r\n\r\n  attachContextMenu() {\r\n    const grid = this.grid;\r\n    on(grid.headerRow, \"contextmenu\", this);\r\n  }\r\n\r\n  onchange(e) {\r\n    const grid = this.grid;\r\n    const t = e.target;\r\n    const field = t.dataset.name;\r\n    if (t.checked) {\r\n      grid.showColumn(field);\r\n    } else {\r\n      // Prevent hidding last\r\n      if (grid.visibleColumns().length <= 1) {\r\n        // Restore checkbox value\r\n        t.checked = true;\r\n        return;\r\n      }\r\n      grid.hideColumn(field);\r\n    }\r\n  }\r\n\r\n  oncontextmenu(e) {\r\n    e.preventDefault();\r\n    const grid = this.grid;\r\n    const target = getParentElement(e.target, \"THEAD\");\r\n    const menu = this.menu;\r\n    const rect = target.getBoundingClientRect();\r\n    let x = e.clientX - rect.left;\r\n    const y = e.clientY - rect.top;\r\n\r\n    menu.style.top = `${y}px`;\r\n    menu.style.left = `${x}px`;\r\n\r\n    removeAttribute(menu, \"hidden\");\r\n    if (x + 150 > rect.width) {\r\n      x -= menu.offsetWidth;\r\n      menu.style.left = `${x}px`;\r\n    }\r\n\r\n    const documentClickHandler = (e) => {\r\n      if (!menu.contains(e.target)) {\r\n        setAttribute(menu, \"hidden\", \"\");\r\n        off(document, \"click\", documentClickHandler);\r\n      }\r\n    };\r\n    on(document, \"click\", documentClickHandler);\r\n  }\r\n  createMenu() {\r\n    const grid = this.grid;\r\n    const menu = this.menu;\r\n    while (menu.lastChild) {\r\n      menu.removeChild(menu.lastChild);\r\n    }\r\n    menu.addEventListener(\"change\", this);\r\n    grid.options.columns.forEach((col) => {\r\n      if (col.attr) {\r\n        return;\r\n      }\r\n      const li = document.createElement(\"li\");\r\n      const label = document.createElement(\"label\");\r\n      const checkbox = document.createElement(\"input\");\r\n      setAttribute(checkbox, \"type\", \"checkbox\");\r\n      setAttribute(checkbox, \"data-name\", col.field);\r\n      if (!col.hidden) {\r\n        checkbox.checked = true;\r\n      }\r\n      const text = document.createTextNode(col.title);\r\n\r\n      label.appendChild(checkbox);\r\n      label.appendChild(text);\r\n\r\n      li.appendChild(label);\r\n      menu.appendChild(li);\r\n    });\r\n  }\r\n}\r\n\r\nexport default ContextMenu;\r\n", "import BasePlugin from \"../core/base-plugin.js\";\nimport getParentElement from \"../utils/getParentElement.js\";\nimport { dispatch, findAll, getAttribute, on, setAttribute } from \"../utils/shortcuts.js\";\n\n/**\n * Allows to move headers\n */\nclass DraggableHeaders extends BasePlugin {\n  /**\n   * @param {HTMLTableCellElement} th\n   */\n  makeHeaderDraggable(th) {\n    const grid = this.grid;\n    th.draggable = true;\n    on(th, \"dragstart\", (e) => {\n      if (grid.plugins.ColumnResizer && grid.plugins.ColumnResizer.isResizing && e.preventDefault) {\n        e.preventDefault();\n        return;\n      }\n      grid.log(\"reorder col\");\n      e.dataTransfer.effectAllowed = \"move\";\n      e.dataTransfer.setData(\"text/plain\", e.target.getAttribute(\"aria-colindex\"));\n    });\n    on(th, \"dragover\", (e) => {\n      if (e.preventDefault) {\n        e.preventDefault();\n      }\n      e.dataTransfer.dropEffect = \"move\";\n      return false;\n    });\n    on(th, \"drop\", (e) => {\n      if (e.stopPropagation) {\n        e.stopPropagation();\n      }\n      const t = e.target;\n      const target = getParentElement(t, \"TH\");\n      const index = parseInt(e.dataTransfer.getData(\"text/plain\"));\n      const targetIndex = parseInt(target.getAttribute(\"aria-colindex\"));\n\n      if (index === targetIndex) {\n        grid.log(\"reordered col stayed the same\");\n        return;\n      }\n      grid.log(\"reordered col from \" + index + \" to \" + targetIndex);\n\n      const offset = grid.startColIndex();\n      const tmp = grid.options.columns[index - offset];\n      grid.options.columns[index - offset] = grid.options.columns[targetIndex - offset];\n      grid.options.columns[targetIndex - offset] = tmp;\n\n      const swapNodes = (selector, el1) => {\n        const rowIndex = el1.parentNode.getAttribute(\"aria-rowindex\");\n        const el2 = grid.querySelector(selector + \" tr[aria-rowindex='\" + rowIndex + \"'] [aria-colindex='\" + targetIndex + \"']\");\n        setAttribute(el1, \"aria-colindex\", targetIndex);\n        setAttribute(el2, \"aria-colindex\", index);\n        const newNode = document.createElement(\"th\");\n        el1.parentNode.insertBefore(newNode, el1);\n        el2.parentNode.replaceChild(el1, el2);\n        newNode.parentNode.replaceChild(el2, newNode);\n      };\n\n      // Swap all rows in header and body\n      findAll(grid, \"thead th[aria-colindex='\" + index + \"']\").forEach((el1) => {\n        swapNodes(\"thead\", el1);\n      });\n      findAll(grid, 'tbody td[aria-colindex=\"' + index + '\"]').forEach((el1) => {\n        swapNodes(\"tbody\", el1);\n      });\n\n      // Updates the columns\n      grid.options.columns = findAll(grid, \"thead tr.dg-head-columns th[field]\").map((th) =>\n        grid.options.columns.find((c) => c.field == getAttribute(th, \"field\"))\n      );\n\n      dispatch(grid, \"columnReordered\", {\n        col: tmp.field,\n        from: index,\n        to: targetIndex,\n      });\n      return false;\n    });\n  }\n}\n\nexport default DraggableHeaders;\n", "import BasePlugin from \"../core/base-plugin.js\";\r\n\r\n/**\r\n * Allows to paginate with horizontal swipe motions\r\n */\r\nclass TouchSupport extends BasePlugin {\r\n  constructor(grid) {\r\n    super(grid);\r\n    this.touch = null;\r\n  }\r\n  connected() {\r\n    const grid = this.grid;\r\n    grid.addEventListener(\"touchstart\", this, { passive: true });\r\n    grid.addEventListener(\"touchmove\", this, { passive: true });\r\n  }\r\n\r\n  disconnected() {\r\n    const grid = this.grid;\r\n    grid.removeEventListener(\"touchstart\", this);\r\n    grid.removeEventListener(\"touchmove\", this);\r\n  }\r\n\r\n  ontouchstart(e) {\r\n    this.touch = e.touches[0];\r\n  }\r\n\r\n  ontouchmove(e) {\r\n    if (!this.touch) {\r\n      return;\r\n    }\r\n    const grid = this.grid;\r\n    const xDiff = this.touch.clientX - e.touches[0].clientX;\r\n    const yDiff = this.touch.clientY - e.touches[0].clientY;\r\n\r\n    if (Math.abs(xDiff) > Math.abs(yDiff)) {\r\n      if (xDiff > 0) {\r\n        grid.getNext();\r\n      } else {\r\n        grid.getPrev();\r\n      }\r\n    }\r\n    this.touch = null;\r\n  }\r\n}\r\n\r\nexport default TouchSupport;\r\n", "import BasePlugin from \"../core/base-plugin.js\";\nimport { dispatch, findAll, hasClass, setAttribute } from \"../utils/shortcuts.js\";\n\nconst SELECTABLE_CLASS = \"dg-selectable\";\nconst SELECT_ALL_CLASS = \"dg-select-all\";\nconst CHECKBOX_CLASS = \"form-check-input\"; //bs5\n\n/**\n * Allows to select rows\n */\nclass SelectableRows extends BasePlugin {\n  disconnected() {\n    if (this.selectAll) {\n      this.selectAll.removeEventListener(\"change\", this);\n    }\n  }\n\n  /**\n   * @param {String} key Return a specific key (eg: id) instead of the whole row\n   * @returns {Array}\n   */\n  getSelection(key = null) {\n    const grid = this.grid;\n    let selectedData = [];\n\n    const inputs = findAll(grid, `tbody .${SELECTABLE_CLASS} input:checked`);\n    inputs.forEach((checkbox) => {\n      const idx = parseInt(checkbox.dataset.id);\n      const item = grid.data[idx - 1];\n      if (!item) {\n        console.warn(`Item ${idx} not found`);\n      }\n      if (key) {\n        selectedData.push(item[key]);\n      } else {\n        selectedData.push(item);\n      }\n    });\n    return selectedData;\n  }\n\n  /**\n   * Uncheck box if hidden and visible only\n   * @param {HTMLTableSectionElement} tbody\n   */\n  clearCheckboxes(tbody) {\n    const grid = this.grid;\n    if (!grid.options.selectVisibleOnly) {\n      return;\n    }\n    const inputs = findAll(tbody, `tr[hidden] .${SELECTABLE_CLASS} input`);\n    inputs.forEach((input) => {\n      input.checked = false;\n    });\n    this.selectAll.checked = false;\n  }\n\n  colIndex() {\n    return this.grid.startColIndex() - 2;\n  }\n\n  /**\n   * @param {HTMLTableRowElement} tr\n   */\n  createHeaderCol(tr) {\n    let th = document.createElement(\"th\");\n    setAttribute(th, \"scope\", \"col\");\n    setAttribute(th, \"role\", \"columnheader button\");\n    setAttribute(th, \"aria-colindex\", this.colIndex());\n    th.classList.add(...[SELECTABLE_CLASS, \"dg-not-resizable\", \"dg-not-sortable\"]);\n    th.tabIndex = 0;\n\n    this.selectAll = document.createElement(\"input\");\n    this.selectAll.type = \"checkbox\";\n    this.selectAll.classList.add(SELECT_ALL_CLASS);\n    this.selectAll.classList.add(CHECKBOX_CLASS);\n    this.selectAll.addEventListener(\"change\", this);\n\n    let label = document.createElement(\"label\");\n    label.appendChild(this.selectAll);\n\n    th.appendChild(label);\n\n    th.setAttribute(\"width\", \"40\");\n    tr.appendChild(th);\n  }\n\n  /**\n   * @param {HTMLTableRowElement} tr\n   */\n  createFilterCol(tr) {\n    let th = document.createElement(\"th\");\n    setAttribute(th, \"role\", \"columnheader button\");\n    setAttribute(th, \"aria-colindex\", this.colIndex());\n    th.classList.add(SELECTABLE_CLASS);\n    th.tabIndex = 0;\n\n    tr.appendChild(th);\n  }\n\n  /**\n   * Handles the selectAll checkbox when any other .dg-selectable checkbox is checked on table body.\n   * It should check selectAll if all is checked\n   * It should uncheck selectAll if any is unchecked\n   * @param {HTMLTableSectionElement} tbody\n   */\n  shouldSelectAll(tbody) {\n    if (!this.selectAll) {\n      return;\n    }\n    // Delegate listener for change events on input checkboxes\n    tbody.addEventListener(\"change\", this);\n    // Make sure state is up to date\n    tbody.dispatchEvent(new Event(\"change\"));\n  }\n\n  /**\n   * @param {HTMLTableRowElement} tr\n   */\n  createDataCol(tr) {\n    // Create col\n    let td = document.createElement(\"td\");\n    setAttribute(td, \"role\", \"gridcell button\");\n    setAttribute(td, \"aria-colindex\", this.colIndex());\n    td.classList.add(SELECTABLE_CLASS);\n\n    // Create input\n    let selectOne = document.createElement(\"input\");\n    // Alias row id for easy retrieval in getSelection\n    selectOne.dataset.id = tr.getAttribute(\"aria-rowindex\");\n    selectOne.type = \"checkbox\";\n    selectOne.classList.add(CHECKBOX_CLASS);\n    // Label need to take full space thanks to css to make the whole cell clickable\n    let label = document.createElement(\"label\");\n    label.classList.add(\"dg-clickable-cell\");\n    label.appendChild(selectOne);\n    td.appendChild(label);\n\n    // Prevent unwanted click behaviour on row\n    label.addEventListener(\"click\", this);\n\n    tr.appendChild(td);\n  }\n\n  /**\n   * @param {Event} e\n   */\n  onclick(e) {\n    e.stopPropagation();\n  }\n\n  /**\n   * Handle change event on select all or any select checkbox in the table body\n   * @param {import(\"../utils/shortcuts.js\").FlexibleEvent} e\n   */\n  onchange(e) {\n    const grid = this.grid;\n    if (hasClass(e.target, SELECT_ALL_CLASS)) {\n      const visibleOnly = grid.options.selectVisibleOnly;\n      const inputs = findAll(grid, `tbody .${SELECTABLE_CLASS} input`);\n      inputs.forEach((cb) => {\n        if (visibleOnly && !cb.offsetWidth) {\n          return;\n        }\n        cb.checked = this.selectAll.checked;\n      });\n\n      dispatch(grid, \"rowsSelected\", {\n        selection: this.getSelection(),\n      });\n    } else {\n      if (!e.target.closest(`.${SELECTABLE_CLASS}`)) {\n        return;\n      }\n      const totalCheckboxes = findAll(grid, `tbody .${SELECTABLE_CLASS} input[type=checkbox]`);\n      // @ts-ignore\n      const totalChecked = totalCheckboxes.filter((n) => n.checked);\n      this.selectAll.checked = totalChecked.length == totalCheckboxes.length;\n\n      dispatch(grid, \"rowsSelected\", {\n        selection: grid.getSelection(),\n      });\n    }\n  }\n}\n\nexport default SelectableRows;\n", "import BasePlugin from \"../core/base-plugin.js\";\nimport { setAttribute } from \"../utils/shortcuts.js\";\n\n/**\n * Support for fixed table height\n *\n * We should add a fake row to push the footer down in case we don't have enough rows\n */\nclass FixedHeight extends BasePlugin {\n  constructor(grid) {\n    super(grid);\n\n    this.hasFixedHeight = false;\n    // If we have a fixed height, make sure we have overflowY set\n    if (grid.style.height) {\n      grid.style.overflowY = \"auto\";\n      this.hasFixedHeight = true;\n    }\n  }\n\n  /**\n   */\n  createFakeRow() {\n    const grid = this.grid;\n    const tbody = grid.querySelector(\"tbody\");\n    let tr = document.createElement(\"tr\");\n    setAttribute(tr, \"role\", \"row\");\n    setAttribute(tr, \"hidden\", \"\");\n    tr.classList.add(\"dg-fake-row\");\n    tr.tabIndex = 0;\n    tbody.appendChild(tr);\n  }\n\n  get fakeRow() {\n    return this.grid.querySelector(\".dg-fake-row\");\n  }\n\n  /**\n   * On last page, use a fake row to push footer down\n   */\n  updateFakeRow() {\n    const grid = this.grid;\n    const fakeRow = this.fakeRow;\n    if (!fakeRow) {\n      return;\n    }\n\n    // We don't need a fake row if we display everything\n    if (grid.options.perPage > grid.totalRecords()) {\n      return;\n    }\n    // We are not on last page\n    if (grid.page !== grid.totalPages()) {\n      return;\n    }\n    if (!grid.options.autoheight) {\n      return;\n    }\n    // Find remaining missing height\n    const max = grid.options.perPage * grid.rowHeight;\n    const visibleRows = grid.querySelectorAll(\"tbody tr:not([hidden])\").length;\n    const fakeHeight = visibleRows > 1 ? max - visibleRows * grid.rowHeight : max;\n    if (fakeHeight > 0) {\n      setAttribute(fakeRow, \"height\", fakeHeight);\n      fakeRow.removeAttribute(\"hidden\");\n    } else {\n      fakeRow.removeAttribute(\"height\");\n    }\n  }\n}\n\nexport default FixedHeight;\n", "import BasePlugin from \"../core/base-plugin.js\";\nimport getTextWidth from \"../utils/getTextWidth.js\";\nimport { getAttribute, hasAttribute, setAttribute } from \"../utils/shortcuts.js\";\n\n/**\n * Allows to resize columns\n */\nclass AutosizeColumn extends BasePlugin {\n  /**\n   * Autosize col based on column data\n   * @param {HTMLTableCellElement} th\n   * @param {import(\"../data-grid\").Column} column\n   * @param {Number} min\n   * @param {Number} max\n   * @returns {Number}\n   */\n  computeSize(th, column, min, max) {\n    const grid = this.grid;\n    if (hasAttribute(th, \"width\")) {\n      return getAttribute(th, \"width\");\n    }\n    if (!grid.data.length) {\n      return;\n    }\n    const firstVal = grid.data[0];\n    const lastVal = grid.data[grid.data.length - 1];\n    let v = firstVal[column.field] ? firstVal[column.field].toString() : \"\";\n    let v2 = lastVal[column.field] ? lastVal[column.field].toString() : \"\";\n    if (v2.length > v.length) {\n      v = v2;\n    }\n    let width = 0;\n    if (v.length <= 6) {\n      width = min;\n    } else if (v.length > 50) {\n      width = max;\n    } else {\n      // Add some extra room to have some spare space\n      width = getTextWidth(v + \"0000\", th);\n    }\n    if (width > max) {\n      width = max;\n    }\n    if (width < min) {\n      width = min;\n    }\n    setAttribute(th, \"width\", width);\n    return width;\n  }\n}\n\nexport default AutosizeColumn;\n", "/**\r\n * Define a function that can be happily passed to addEventListener\r\n * @typedef {Function & EventListenerOrEventListenerObject} ExtendedFunction\r\n */\r\n\r\n/**\r\n * @param {Function} handler\r\n * @param {Number} timeout\r\n * @returns {ExtendedFunction}\r\n */\r\nexport default function debounce(handler, timeout = 300) {\r\n  let timer = null;\r\n  return (...args) => {\r\n    clearTimeout(timer);\r\n    timer = setTimeout(() => {\r\n      timer = null;\r\n      handler(...args);\r\n    }, timeout);\r\n  };\r\n}\r\n", "import BasePlugin from \"../core/base-plugin.js\";\nimport debounce from \"../utils/debounce.js\";\nimport { addClass, ce, find, findAll, hasClass, insertAfter, removeAttribute, removeClass, setAttribute } from \"../utils/shortcuts.js\";\n\nconst RESPONSIVE_CLASS = \"dg-responsive\";\n\nlet obsTo;\n\n/**\n * @param {Array<HTMLElement>} list\n * @returns {Array<HTMLElement>}\n */\nfunction sortByPriority(list) {\n  return list.sort((a, b) => {\n    const v1 = parseInt(a.dataset.responsive) || 1;\n    const v2 = parseInt(b.dataset.responsive) || 1;\n    return v2 - v1;\n  });\n}\n\n/**\n * @type {ResizeObserverCallback}\n */\n//@ts-ignore\nconst callback = debounce((entries) => {\n  for (const entry of entries) {\n    /**\n     * @type {import(\"../data-grid\").default}\n     */\n    // @ts-ignore\n    const grid = entry.target;\n    const table = grid.table;\n    if (grid.plugins.ResponsiveGrid.observerBlocked) {\n      return;\n    }\n    // check inlineSize (width) and not blockSize (height)\n    const contentBoxSize = Array.isArray(entry.contentBoxSize) ? entry.contentBoxSize[0] : entry.contentBoxSize;\n    const size = parseInt(contentBoxSize.inlineSize);\n    const tableWidth = table.offsetWidth;\n    const realTableWidth = findAll(grid.headerRow, \"th\").reduce((result, th) => {\n      return result + th.offsetWidth;\n    }, 0);\n    const diff = (realTableWidth || tableWidth) - size - 1;\n    const minWidth = 50;\n    const prevAction = grid.plugins.ResponsiveGrid.prevAction;\n    // We have an array with the columns to show/hide are in order, most important first\n    const headerCols = sortByPriority(\n      findAll(grid.headerRow, \"th[field]\")\n        .reverse() // Order takes precedence if no priority is set\n        .filter((col) => {\n          // Leave out unresponsive columns\n          return col.dataset.responsive !== \"0\";\n        })\n    );\n    let changed = false;\n\n    grid.log(`table is ${tableWidth}/${realTableWidth} and available size is ${size}. Diff: ${diff}`);\n\n    // The table is too big when diff has a high value, otherwise it will be like -1 or -2\n    if (diff > 0) {\n      if (prevAction === \"show\") {\n        return;\n      }\n      grid.plugins.ResponsiveGrid.prevAction = \"hide\";\n      let remaining = diff;\n      let cols = headerCols.filter((col) => {\n        return !col.hasAttribute(\"hidden\") && col.hasAttribute(\"data-responsive\");\n      });\n      if (cols.length === 0) {\n        cols = headerCols.filter((col) => {\n          return !col.hasAttribute(\"hidden\");\n        });\n        // Always keep one column\n        if (cols.length === 1) {\n          return;\n        }\n      }\n      cols.forEach((col) => {\n        if (remaining < 0) {\n          return;\n        }\n\n        const colWidth = col.offsetWidth;\n        const field = col.getAttribute(\"field\");\n        if (!field) {\n          return;\n        }\n        col.dataset.baseWidth = \"\" + col.offsetWidth;\n\n        grid.hideColumn(field, false);\n        grid.setColProp(field, \"responsiveHidden\", true);\n        changed = true;\n\n        remaining -= colWidth;\n        remaining = Math.round(remaining);\n      });\n    } else {\n      if (prevAction === \"hide\") {\n        return;\n      }\n      grid.plugins.ResponsiveGrid.prevAction = \"show\";\n\n      const requiredWidth =\n        headerCols\n          .filter((col) => {\n            return !col.hasAttribute(\"hidden\");\n          })\n          .reduce((result, col) => {\n            const width = col.dataset.minWidth ? parseInt(col.dataset.minWidth) : col.offsetWidth;\n            return result + width;\n          }, 0) + minWidth; // Add an offset so that inserting column is smoother\n\n      // Compute available width to insert columns\n      let remaining = size - requiredWidth;\n      // Do we have any hidden column that we can restore ?\n      headerCols\n        .slice()\n        .reverse() // Reverse the array to restore the columns in the proper order\n        .filter((col) => {\n          return col.hasAttribute(\"hidden\");\n        })\n        .forEach((col) => {\n          if (remaining < minWidth) {\n            return;\n          }\n          const colWidth = parseInt(col.dataset.minWidth);\n\n          // We need to have enough space to restore it\n          if (colWidth > remaining) {\n            remaining = -1; // break loop to keep restoring in order\n            return;\n          }\n\n          const field = col.getAttribute(\"field\");\n          if (!field) {\n            return;\n          }\n\n          grid.showColumn(field, false);\n          grid.setColProp(field, \"responsiveHidden\", false);\n          changed = true;\n\n          remaining -= colWidth;\n          remaining = Math.round(remaining);\n        });\n    }\n\n    // Check footer\n    const footer = find(grid.table, \"tfoot\");\n    const realFooterWidth = findAll(grid.table, \".dg-footer > div\").reduce((result, div) => {\n      return result + div.offsetWidth;\n    }, 0);\n    const availableFooterWidth = footer.offsetWidth - realFooterWidth;\n    if (realFooterWidth > size) {\n      addClass(footer, \"dg-footer-compact\");\n    } else if (availableFooterWidth > 250) {\n      removeClass(footer, \"dg-footer-compact\");\n    }\n    if (changed) {\n      grid.renderTable();\n    }\n    // Prevent resize loop\n    setTimeout(() => {\n      grid.plugins.ResponsiveGrid.prevAction = null;\n    }, 1000);\n    grid.table.style.visibility = \"visible\";\n  }\n}, 100);\nconst resizeObserver = new ResizeObserver(callback);\n\n/**\n * Responsive data grid\n */\nclass ResponsiveGrid extends BasePlugin {\n  constructor(grid) {\n    super(grid);\n\n    this.observerBlocked = false;\n    this.prevAction = null;\n  }\n\n  connected() {\n    if (this.grid.options.responsive) {\n      this.observe();\n    }\n  }\n\n  disconnected() {\n    this.unobserve();\n  }\n\n  observe() {\n    if (!this.grid.options.responsive) {\n      return;\n    }\n    resizeObserver.observe(this.grid);\n    this.grid.style.display = \"block\"; // Otherwise resize doesn't happen\n    this.grid.style.overflowX = \"hidden\"; // Prevent scrollbars from appearing\n  }\n\n  unobserve() {\n    resizeObserver.unobserve(this.grid);\n    this.grid.style.display = \"unset\";\n    this.grid.style.overflowX = \"unset\";\n  }\n\n  blockObserver() {\n    this.observerBlocked = true;\n    if (obsTo) {\n      clearTimeout(obsTo);\n    }\n  }\n\n  unblockObserver() {\n    obsTo = setTimeout(() => {\n      this.observerBlocked = false;\n    }, 200); // more than debounce\n  }\n\n  /**\n   * @returns {Boolean}\n   */\n  hasHiddenColumns() {\n    let flag = false;\n    this.grid.options.columns.forEach((col) => {\n      if (col.responsiveHidden) {\n        flag = true;\n      }\n    });\n    return flag;\n  }\n\n  colIndex() {\n    return this.grid.startColIndex() - 1;\n  }\n\n  /**\n   * @param {HTMLTableRowElement} tr\n   */\n  createHeaderCol(tr) {\n    if (!this.grid.options.responsiveToggle) {\n      return;\n    }\n    let th = ce(\"th\", tr);\n    setAttribute(th, \"scope\", \"col\");\n    setAttribute(th, \"role\", \"columnheader button\");\n    setAttribute(th, \"aria-colindex\", this.colIndex());\n    setAttribute(th, \"width\", \"40\");\n    th.classList.add(...[`${RESPONSIVE_CLASS}-toggle`, \"dg-not-resizable\", \"dg-not-sortable\"]);\n    th.tabIndex = 0;\n  }\n\n  /**\n   * @param {HTMLTableRowElement} tr\n   */\n  createFilterCol(tr) {\n    if (!this.grid.options.responsiveToggle) {\n      return;\n    }\n    let th = ce(\"th\", tr);\n    setAttribute(th, \"role\", \"columnheader button\");\n    setAttribute(th, \"aria-colindex\", this.colIndex());\n    th.classList.add(`${RESPONSIVE_CLASS}-toggle`);\n    th.tabIndex = 0;\n  }\n\n  /**\n   * @param {HTMLTableRowElement} tr\n   */\n  createDataCol(tr) {\n    if (!this.grid.options.responsiveToggle) {\n      return;\n    }\n    // Create col\n    let td = document.createElement(\"td\");\n    setAttribute(td, \"role\", \"gridcell button\");\n    setAttribute(td, \"aria-colindex\", this.colIndex());\n    td.classList.add(`${RESPONSIVE_CLASS}-toggle`);\n\n    // Create icon\n    td.innerHTML = `<div class='dg-clickable-cell'><svg class='${RESPONSIVE_CLASS}-open' viewbox=\"0 0 24 24\" height=\"24\" width=\"24\">\n  <line x1=\"7\" y1=\"12\" x2=\"17\" y2=\"12\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" />\n  <line y1=\"7\" x1=\"12\" y2=\"17\" x2=\"12\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" />\n</svg>\n<svg class='${RESPONSIVE_CLASS}-close' viewbox=\"0 0 24 24\" height=\"24\" width=\"24\" style=\"display:none\">\n  <line x1=\"7\" y1=\"12\" x2=\"17\" y2=\"12\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" />\n</svg></div>`;\n    tr.appendChild(td);\n\n    td.addEventListener(\"click\", this);\n    td.addEventListener(\"mousedown\", this);\n  }\n\n  computeLabelWidth() {\n    let idealWidth = 0;\n    let consideredCol = 0;\n    while (idealWidth < 120) {\n      consideredCol++;\n      const hCol = find(this.grid, `.dg-head-columns th[aria-colindex=\"${consideredCol}\"]`);\n      if (hCol) {\n        idealWidth += hCol.offsetWidth;\n      } else {\n        break;\n      }\n    }\n    return idealWidth;\n  }\n\n  /**\n   * @param {Event} ev\n   */\n  onmousedown(ev) {\n    // Avoid selection through double click\n    ev.preventDefault();\n  }\n\n  /**\n   * @param {Event} ev\n   */\n  onclick(ev) {\n    // Prevent expandable\n    ev.stopPropagation();\n\n    // target is the element that triggered the event (e.g., the user clicked on)\n    // currentTarget is the element that the event listener is attached to.\n\n    /**\n     * @type {HTMLTableRowElement}\n     */\n    //@ts-ignore\n    const td = ev.currentTarget;\n    const tr = td.parentElement;\n    const open = find(td, `.${RESPONSIVE_CLASS}-open`);\n    const close = find(td, `.${RESPONSIVE_CLASS}-close`);\n\n    this.blockObserver();\n\n    const isExpanded = hasClass(tr, `${RESPONSIVE_CLASS}-expanded`);\n    if (isExpanded) {\n      removeClass(tr, `${RESPONSIVE_CLASS}-expanded`);\n      open.style.display = \"unset\";\n      close.style.display = \"none\";\n\n      // Move back rows and cleanup row\n      const childRow = tr.nextElementSibling;\n      const hiddenCols = findAll(childRow, `.${RESPONSIVE_CLASS}-hidden`);\n      hiddenCols.forEach((col) => {\n        // We don't really need to care where we insert them since we are going to redraw anyway\n        tr.appendChild(col);\n        setAttribute(col, \"hidden\");\n      });\n\n      childRow.parentElement.removeChild(childRow);\n    } else {\n      addClass(tr, `${RESPONSIVE_CLASS}-expanded`);\n      open.style.display = \"none\";\n      close.style.display = \"unset\";\n\n      // Create a child row and move rows into it\n      const childRow = ce(\"tr\");\n      insertAfter(childRow, tr);\n      addClass(childRow, `${RESPONSIVE_CLASS}-child-row`);\n\n      const childRowTd = ce(\"td\", childRow);\n      setAttribute(childRowTd, \"colspan\", this.grid.columnsLength(true));\n\n      const childTable = ce(\"table\", childRowTd);\n      addClass(childTable, `${RESPONSIVE_CLASS}-table`);\n\n      const hiddenCols = findAll(tr, `.${RESPONSIVE_CLASS}-hidden`);\n      const idealWidth = this.computeLabelWidth();\n      hiddenCols.forEach((col) => {\n        const childTableRow = ce(\"tr\", childTable);\n\n        // Add label\n        const label = col.dataset.name;\n        const labelCol = ce(\"th\", childTableRow);\n        // It looks much better when aligned with an actual col\n        labelCol.style.width = `${idealWidth}px`;\n        labelCol.innerHTML = label;\n\n        // Add actual row\n        childTableRow.appendChild(col);\n        removeAttribute(col, \"hidden\");\n      });\n    }\n\n    this.unblockObserver();\n  }\n}\n\nexport default ResponsiveGrid;\n", "import BasePlugin from \"../core/base-plugin.js\";\r\nimport interpolate from \"../utils/interpolate.js\";\r\nimport { dispatch, on, setAttribute } from \"../utils/shortcuts.js\";\r\n\r\n/**\r\n * Add action on rows\r\n */\r\nclass RowActions extends BasePlugin {\r\n  /**\r\n   * @returns {Boolean}\r\n   */\r\n  hasActions() {\r\n    return this.grid.options.actions.length > 0;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {HTMLTableRowElement} tr\r\n   */\r\n  makeActionHeader(tr) {\r\n    let actionsTh = document.createElement(\"th\");\r\n    setAttribute(actionsTh, \"role\", \"columnheader button\");\r\n    setAttribute(actionsTh, \"aria-colindex\", this.grid.columnsLength(true));\r\n    actionsTh.classList.add(...[\"dg-actions\", \"dg-not-sortable\", \"dg-not-resizable\", this.actionClass]);\r\n    actionsTh.tabIndex = 0;\r\n    tr.appendChild(actionsTh);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {HTMLTableRowElement} tr\r\n   */\r\n  makeActionFilter(tr) {\r\n    let actionsTh = document.createElement(\"th\");\r\n    actionsTh.setAttribute(\"role\", \"columnheader button\");\r\n    actionsTh.setAttribute(\"aria-colindex\", \"\" + this.grid.columnsLength(true));\r\n    actionsTh.classList.add(...[\"dg-actions\", this.actionClass]);\r\n    actionsTh.tabIndex = 0;\r\n    tr.appendChild(actionsTh);\r\n  }\r\n\r\n  /**\r\n   * @param {HTMLTableRowElement} tr\r\n   * @param {Object} item\r\n   */\r\n  makeActionRow(tr, item) {\r\n    const labels = this.grid.labels;\r\n    const td = document.createElement(\"td\");\r\n    setAttribute(td, \"role\", \"gridcell\");\r\n    setAttribute(td, \"aria-colindex\", this.grid.columnsLength(true));\r\n    td.classList.add(...[\"dg-actions\", this.actionClass]);\r\n    td.tabIndex = 0;\r\n\r\n    // Add menu toggle\r\n    let actionsToggle = document.createElement(\"button\");\r\n    actionsToggle.classList.add(\"dg-actions-toggle\");\r\n    actionsToggle.innerHTML = \"\u2630\";\r\n    td.appendChild(actionsToggle);\r\n    on(actionsToggle, \"click\", (ev) => {\r\n      ev.stopPropagation();\r\n      ev.target.parentElement.classList.toggle(\"dg-actions-expand\");\r\n    });\r\n\r\n    this.grid.options.actions.forEach((action) => {\r\n      let button = document.createElement(\"button\");\r\n      if (action.html) {\r\n        button.innerHTML = action.html;\r\n      } else {\r\n        button.innerText = action.title ?? action.name;\r\n      }\r\n      if (action.title) {\r\n        button.title = action.title;\r\n      }\r\n      if (action.url) {\r\n        button.type = \"submit\";\r\n        button.formAction = interpolate(action.url, item);\r\n      }\r\n      if (action.class) {\r\n        button.classList.add(...action.class.split(\" \"));\r\n      }\r\n      const actionHandler = (ev) => {\r\n        ev.stopPropagation();\r\n        if (action.confirm) {\r\n          let c = confirm(labels.areYouSure);\r\n          if (!c) {\r\n            ev.preventDefault();\r\n            return;\r\n          }\r\n        }\r\n        dispatch(this.grid, \"action\", {\r\n          data: item,\r\n          action: action.name,\r\n        });\r\n      };\r\n      button.addEventListener(\"click\", actionHandler);\r\n      td.appendChild(button);\r\n\r\n      // Row action\r\n      if (action.default) {\r\n        tr.classList.add(\"dg-actionable\");\r\n        tr.addEventListener(\"click\", actionHandler);\r\n      }\r\n    });\r\n\r\n    tr.appendChild(td);\r\n  }\r\n\r\n  get actionClass() {\r\n    if (this.grid.options.actions.length < 3 && !this.grid.options.collapseActions) {\r\n      return \"dg-actions-\" + this.grid.options.actions.length;\r\n    }\r\n    return \"dg-actions-more\";\r\n  }\r\n}\r\n\r\nexport default RowActions;\r\n", "import BasePlugin from \"../core/base-plugin.js\";\r\nimport { dispatch } from \"../utils/shortcuts.js\";\r\n\r\n/**\r\n * Make editable inputs in rows\r\n */\r\nclass EditableColumn extends BasePlugin {\r\n  /**\r\n   *\r\n   * @param {HTMLTableCellElement} td\r\n   * @param {import(\"../data-grid\").Column} column\r\n   * @param {Object} item\r\n   * @param {number} i\r\n   */\r\n  makeEditableInput(td, column, item, i) {\r\n    const gridId = this.grid.getAttribute(\"id\");\r\n    let input = document.createElement(\"input\");\r\n    input.type = column.editableType || \"text\";\r\n    if (input.type == \"email\") {\r\n      input.inputMode = \"email\";\r\n    }\r\n    if (input.type == \"decimal\") {\r\n      input.type = \"text\";\r\n      input.inputMode = \"decimal\";\r\n    }\r\n    input.autocomplete = \"off\";\r\n    input.spellcheck = false;\r\n    input.tabIndex = 0;\r\n    input.classList.add(\"dg-editable\");\r\n    input.name = gridId.replace(\"-\", \"_\") + \"[\" + (i + 1) + \"]\" + \"[\" + column.field + \"]\";\r\n    input.value = item[column.field];\r\n    input.dataset.field = column.field;\r\n\r\n    // Prevent row action\r\n    input.addEventListener(\"click\", (ev) => ev.stopPropagation());\r\n    // Enter validates edit\r\n    input.addEventListener(\"keypress\", (ev) => {\r\n      if (ev.type === \"keypress\") {\r\n        const key = ev.keyCode || ev.key;\r\n        if (key === 13 || key === \"Enter\") {\r\n          input.blur();\r\n          ev.preventDefault();\r\n        }\r\n      }\r\n    });\r\n    // Save on blur\r\n    input.addEventListener(\"blur\", () => {\r\n      // Only fire on update\r\n      if (input.value == item[input.dataset.field]) {\r\n        return;\r\n      }\r\n      // Update underlying data\r\n      item[input.dataset.field] = input.value;\r\n      // Notify\r\n      dispatch(this.grid, \"edit\", {\r\n        data: item,\r\n        value: input.value,\r\n      });\r\n    });\r\n    td.appendChild(input);\r\n  }\r\n}\r\n\r\nexport default EditableColumn;\r\n", "import BasePlugin from \"../core/base-plugin.js\";\nimport { $ } from \"../utils/shortcuts.js\"\n\n/**\n * Adds an element for showing a spinning icon on grid loading.\n */\nclass SpinnerSupport extends BasePlugin {\n  /**\n   * Adds a spinner element with its associated css styles.\n   */\n  add() {\n    const grid = this.grid,\n      classes = grid.options.spinnerClass;\n    if (!classes) return;\n    const cls = classes.split(\" \").map(e => `.${e}`).join(\"\"),\n      template = `\n<style id=\"dg-styles\">\n  data-grid ${cls} { position: absolute; top: 37%; left: 47%; z-index: 999; }\n  data-grid:not(.dg-loading) ${cls} { display: none; }\n  data-grid:not(.dg-initialized).dg-loading ${cls} { top: 0; }\n  @media only screen and (max-width: 767px) {\n    data-grid[responsive] ${cls} { top: 8rem; left: 42%; } \n  }\n</style>\n`;\n    if (!$(\"#dg-styles\")) {\n      const styleParent = $(\"head\") ?? $(\"body\"),\n        position = /head/i.test(styleParent.tagName) ? \"beforeend\" : \"afterbegin\";\n      styleParent.insertAdjacentHTML(position, template);\n    }\n    !$(`i${cls}`, grid) && grid.insertAdjacentHTML(\"afterbegin\", `<i class=\"${classes}\"></i>`);\n  }\n}\n\nexport default SpinnerSupport;", "import DataGrid from \"./src/data-grid.js\";\n// Optional plugins\nimport ColumnResizer from \"./src/plugins/column-resizer.js\";\nimport ContextMenu from \"./src/plugins/context-menu.js\";\nimport DraggableHeaders from \"./src/plugins/draggable-headers.js\";\nimport TouchSupport from \"./src/plugins/touch-support.js\";\nimport SelectableRows from \"./src/plugins/selectable-rows.js\";\nimport FixedHeight from \"./src/plugins/fixed-height.js\";\nimport AutosizeColumn from \"./src/plugins/autosize-column.js\";\nimport ResponsiveGrid from \"./src/plugins/responsive-grid.js\";\nimport RowActions from \"./src/plugins/row-actions.js\";\nimport EditableColumn from \"./src/plugins/editable-column.js\";\nimport SpinnerSupport from \"./src/plugins/spinner-support.js\";\n\n// Using shorthand property names\n// This make them reserved and keys will be preserved\n// Actual class names are renamed\nDataGrid.registerPlugins({\n  ColumnResizer,\n  ContextMenu,\n  DraggableHeaders,\n  TouchSupport,\n  SelectableRows,\n  FixedHeight,\n  AutosizeColumn,\n  ResponsiveGrid,\n  RowActions,\n  EditableColumn,\n  SpinnerSupport\n});\n\n// Prevent errors if included multiple times\nif (!customElements.get(\"data-grid\")) {\n  customElements.define(\"data-grid\", DataGrid);\n}\n\nexport default DataGrid;\n"],
  "mappings": "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",
  "names": ["col", "e", "th", "labels", "data_grid_default"]
}
